{"version":3,"sources":["prettyPrintObject.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;QAKI,gBAAgB;;;;;;;;;;;;;;kBAcL,UAAC,OAAO,EAA2C;QAAjC,OAAO,yDAAW,EAAE;;AACjD,QAAI,CAAC,mBAAM,OAAO,EAAE,qBAAqB,CAAC,EAAE;AACxC,eAAO,CAAC,mBAAmB,GAAG,MAAM,CAAC;KACxC;;AAED,QAAI,CAAC,mBAAM,OAAO,EAAE,YAAY,CAAC,EAAE;AAC/B,eAAO,CAAC,UAAU,GAAG,IAAI,CAAC;KAC7B;;AAED,WAAO,2BAAY,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC,mBAAmB,EAAE,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;CAC/F","file":"prettyPrintObject.js","sourcesContent":["import _ from 'lodash';\nimport formatValue from './formatValue';\nimport createValueIndex from './createValueIndex';\n\nexport {\n    createValueIndex\n};\n\n/**\n * @typedef {Object} optionsType\n * @property {string} indentTemplate String used to indent one level of code (default: '    ').\n * @property {valueIndex|null} valueIndex A function used to index values in the object, the line of declaration in the output and the internal type of the value.\n */\n\n/**\n * @param {Object} subject\n * @param {optionsType} options\n * @returns {string}\n */\nexport default (subject: Object, options: Object = {}): string => {\n    if (!_.has(options, 'indentationTemplate')) {\n        options.indentationTemplate = '    ';\n    }\n\n    if (!_.has(options, 'valueIndex')) {\n        options.valueIndex = null;\n    }\n\n    return formatValue(subject, '', options.indentationTemplate, [], options.valueIndex) + '\\n';\n};\n"],"sourceRoot":"/source/"}