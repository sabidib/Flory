{"version":3,"sources":["getFunctionSignature.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;kBAGe,AAAC,EAAE,IAAqB;AACnC,QAAI,IAAI,EACJ,cAAc,CAAC;;AAEnB,QAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;;AAEpC,kBAAc,GAAG,iCAA0B,EAAE,CAAC,CAAC;;AAE/C,QAAI,+BAAgB,EAAE,CAAC,EAAE;AACrB,eAAO,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;KAC3D,MAAM;AACH,eAAO,WAAW,GAAG,IAAI,GAAG,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;KAC7E;CACJ","file":"getFunctionSignature.js","sourcesContent":["import getFunctionParameterNames from 'get-parameter-names';\nimport isArrowFunction from 'is-arrow-function';\n\nexport default (fn: Object): string => {\n    let name,\n        parameterNames;\n\n    name = fn.name ? fn.name + ' ' : '';\n\n    parameterNames = getFunctionParameterNames(fn);\n\n    if (isArrowFunction(fn)) {\n        return '(' + parameterNames.join(', ') + ') => { ... }';\n    } else {\n        return 'function ' + name + '(' + parameterNames.join(', ') + ') { ... }';\n    }\n};\n"],"sourceRoot":"/source/"}