'use strict';var Flory={VERSION:"0.01",timestep:.01,Vector3:function(a,b,c){this.x=void 0===a?0:a;this.y=void 0===b?0:b;this.z=void 0===c?0:c}};
Flory.Vector3.prototype={constructor:Flory.Vector3,dimension:function(){return 3},add:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},sub:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},scale:function(a){this.x*=a;this.y*=a;this.z*=a;return this},mult:function(a){return new Flory.Vector3(this.x*a,this.y*a,this.z*a)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*
this.x+this.y*this.y+this.z*this.z},distanceTo:function(a){return Math.sqrt((a.x-this.x)*(a.x-this.x)+(a.y-this.y)*(a.y-this.y)+(a.z-this.z)*(a.z-this.z))},distanceToSq:function(a){return(a.x-this.x)*(a.x-this.x)+(a.y-this.y)*(a.y-this.y)+(a.z-this.z)*(a.z-this.z)},clone:function(){return new Flory.Vector3(this.x,this.y,this.z)}};Flory.Vector2=function(a,b){this.x=void 0===a?0:a;this.y=void 0===b?0:b};
Flory.Vector2.prototype={constructor:Flory.Vector2,dimension:function(){return 2},add:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a){this.x-=a.x;this.y-=a.y;return this},scale:function(a){this.x*=a;this.y*=a;return this},mult:function(a){return new Flory.Vector2(this.x*a,this.y*a)},dot:function(a){return this.x*a.x+this.y*a.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},distanceTo:function(a){return Math.sqrt((a.x-
this.x)*(a.x-this.x)+(a.y-this.y)*(a.y-this.y))},distanceToSq:function(a){return(a.x-this.x)*(a.x-this.x)+(a.y-this.y)*(a.y-this.y)},clone:function(){return new Flory.Vector2(this.x,this.y)}};Flory.Vector=function(a){this.components=void 0==a?[]:"number"==typeof a?[].slice.apply(new Uint8Array(a)):a};
Flory.Vector.prototype={constructor:Flory.Vector,dimension:function(){return this.components.length},add:function(a){if(a.components.length>this.components.length){for(var b=0,c=this.components.length;b<c;b++)this.components[b]+=a.components[b];for(c=a.components.length;b<c;b++)this.components[b]=0,this.components[b]+=a.components[b]}else for(var b=0,c=a.components.length;b<c;b++)this.components[b]+=a.components[b];return this},sub:function(a){if(a.components.length>this.components.length){for(var b=
0,c=this.components.length;b<c;b++)this.components[b]-=a.components[b];for(c=a.components.length;b<c;b++)this.components[b]=0,this.components[b]-=a.components[b]}else for(var b=0,c=a.components.length;b<c;b++)this.components[b]-=a.components[b];return this},scale:function(a){for(var b=0,c=this.components.length;b<c;b++)this.components[b]*=a;return this},mult:function(a){for(var b=[],c=0,d=this.components.length;c<d;c++)b[c]=a*this.components[c];return new Flory.Vector(b)},dot:function(a){if(a.components.length!=
this.components.length)console.log("Flory.vector.dot(a) can only accept a vector of the same dimension as the object.");else{for(var b=0,c=0,d=a.components.length;c<d;c++)b+=this.components[c]*a.components[c];return b}},length:function(){for(var a=0,b=0,c=this.components.length;b<c;b++)a+=this.components[b]*this.components[b];return Math.sqrt(a)},lengthSq:function(){for(var a=0,b=0,c=this.components.length;b<c;b++)a+=this.components[b]*this.components[b];return a},distanceTo:function(a){var b=0,c=
0;if(a.components.length>this.components.length){for(var d=this.components.length;c<d;c++)b+=(this.components[c]-a.components[c])*(this.components[c]-a.components[c]);for(;c<len2;c++)b+=(0-a.components[c])*(0-a.components[c])}else if(a.components.length<this.components.length){for(d=a.components.length;c<d;c++)b+=(this.components[c]-a.components[c])*(this.components[c]-a.components[c]);for(;c<len2;c++)b+=(this.components[c]-0)*(this.components[c]-0)}else for(d=a.components.length;c<d;c++)b+=(this.components[c]-
a.components[c])*(this.components[c]-a.components[c]);return Math.sqrt(b)},distanceToSq:function(a){var b=0,c=0;if(a.components.length>this.components.length){for(var d=this.components.length;c<d;c++)b+=(this.components[c]-a.components[c])*(this.components[c]-a.components[c]);for(;c<len2;c++)b+=(0-a.components[c])*(0-a.components[c])}else if(a.components.length<this.components.length){for(d=a.components.length;c<d;c++)b+=(this.components[c]-a.components[c])*(this.components[c]-a.components[c]);for(;c<
len2;c++)b+=(this.components[c]-0)*(this.components[c]-0)}else for(d=a.components.length;c<d;c++)b+=(this.components[c]-a.components[c])*(this.components[c]-a.components[c]);return b},clone:function(){return new Flory.Vector(this.components.slice(0))}};Flory.RandomGen=function(a){void 0==a&&(a=(new Date).getTime());this.N=624;this.M=397;this.MATRIX_A=2567483615;this.UPPER_MASK=2147483648;this.LOWER_MASK=2147483647;this.mt=Array(this.N);this.mti=this.N+1;this.init_genrand(a)};
Flory.RandomGen.prototype.init_genrand=function(a){this.mt[0]=a>>>0;for(this.mti=1;this.mti<this.N;this.mti++)a=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((a&4294901760)>>>16)<<16)+1812433253*(a&65535)+this.mti,this.mt[this.mti]>>>=0};
Flory.RandomGen.prototype.init_by_array=function(a,b){var c,d,e;this.init_genrand(19650218);c=1;d=0;for(e=this.N>b?this.N:b;e;e--){var f=this.mt[c-1]^this.mt[c-1]>>>30;this.mt[c]=(this.mt[c]^(1664525*((f&4294901760)>>>16)<<16)+1664525*(f&65535))+a[d]+d;this.mt[c]>>>=0;c++;d++;c>=this.N&&(this.mt[0]=this.mt[this.N-1],c=1);d>=b&&(d=0)}for(e=this.N-1;e;e--)f=this.mt[c-1]^this.mt[c-1]>>>30,this.mt[c]=(this.mt[c]^(1566083941*((f&4294901760)>>>16)<<16)+1566083941*(f&65535))-c,this.mt[c]>>>=0,c++,c>=this.N&&
(this.mt[0]=this.mt[this.N-1],c=1);this.mt[0]=2147483648};
Flory.RandomGen.prototype.genrand_int32=function(){var a,b=[0,this.MATRIX_A];if(this.mti>=this.N){var c;this.mti==this.N+1&&this.init_genrand(5489);for(c=0;c<this.N-this.M;c++)a=this.mt[c]&this.UPPER_MASK|this.mt[c+1]&this.LOWER_MASK,this.mt[c]=this.mt[c+this.M]^a>>>1^b[a&1];for(;c<this.N-1;c++)a=this.mt[c]&this.UPPER_MASK|this.mt[c+1]&this.LOWER_MASK,this.mt[c]=this.mt[c+(this.M-this.N)]^a>>>1^b[a&1];a=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK;this.mt[this.N-1]=this.mt[this.M-
1]^a>>>1^b[a&1];this.mti=0}a=this.mt[this.mti++];a^=a>>>11;a^=a<<7&2636928640;a^=a<<15&4022730752;return(a^a>>>18)>>>0};Flory.RandomGen.prototype.genrand_int31=function(){return this.genrand_int32()>>>1};Flory.RandomGen.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)};Flory.RandomGen.prototype.random=function(){return this.genrand_int32()*(1/4294967296)};Flory.RandomGen.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)};
Flory.RandomGen.prototype.genrand_res53=function(){var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;return 1.1102230246251565E-16*(67108864*a+b)};Flory.Matrix4=function(a){this.matrix=[];for(var b=0;16>b;b++)this.matrix[b]=a[b]};
Flory.Matrix4.prototype={contructor:Flory.Matrix4,setElement:function(a,b,c){this.matrix[4*a+b]=c;return this},setMatrix:function(a){this.matrix=a;return this},add:function(a){for(var b=0;16>b;b++)this.matrix[b]+=a.matrix[b];return this},multiply:function(a){m=this.matrix;t=a.matrix;m[0]=m[0]*t[0]+m[1]*t[4]+m[2]*t[8]+m[3]*t[12];m[1]=m[0]*t[1]+m[1]*t[5]+m[2]*t[9]+m[3]*t[13];m[2]=m[0]*t[2]+m[1]*t[6]+m[2]*t[10]+m[3]*t[14];m[3]=m[0]*t[3]+m[1]*t[7]+m[2]*t[11]+m[3]*t[15];m[0]=m[4]*t[0]+m[5]*t[4]+m[6]*t[8]+
m[7]*t[12];m[1]=m[4]*t[1]+m[5]*t[5]+m[6]*t[9]+m[7]*t[13];m[2]=m[4]*t[2]+m[5]*t[6]+m[6]*t[10]+m[7]*t[14];m[3]=m[4]*t[3]+m[5]*t[7]+m[6]*t[11]+m[7]*t[15];m[0]=m[8]*t[0]+m[9]*t[4]+m[10]*t[8]+m[11]*t[12];m[1]=m[8]*t[1]+m[9]*t[5]+m[10]*t[9]+m[11]*t[13];m[2]=m[8]*t[2]+m[9]*t[6]+m[10]*t[10]+m[11]*t[14];m[3]=m[8]*t[3]+m[9]*t[7]+m[10]*t[11]+m[11]*t[15];m[0]=m[12]*t[0]+m[13]*t[4]+m[14]*t[8]+m[15]*t[12];m[1]=m[12]*t[1]+m[13]*t[5]+m[14]*t[9]+m[15]*t[13];m[2]=m[12]*t[2]+m[13]*t[6]+m[14]*t[10]+m[15]*t[14];m[3]=
m[12]*t[3]+m[13]*t[7]+m[14]*t[11]+m[15]*t[15];return this},transpose:function(){for(var a=0;4>a;a++)for(var b=0;4>b;b++)this.matrix[a*b+b]=this.matrix[a*b+a]}};Flory.Matrix4.Identity=new Flory.Matrix4([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);Flory.Renderable=function(){this.mesh={};this.geometry={};this.material={};this.updateGeometry=!1};Flory.Renderable.prototype={prepareRenderable:function(a){}};
Flory.Entity=function(){Flory.Renderable.call(this);this.id=Flory.Entity.entityIDCount++;this.name="";this.data={}};Flory.Entity.prototype=Object.create(Flory.Renderable.prototype);Flory.Entity.prototype.update=function(a){};Flory.Entity.entityIDCount=0;Flory.Environment=function(){this.entities=[];this.renderer={};this.data={};this.data.rendererType="default";this.visualization=!1};
Flory.Environment.prototype={constuctor:Flory.Environment,add:function(a){if(this.id==a.id)console.log("Flory: Can't add an entity to itself.");else{for(var b=0,c=this.entities.length;b<c;b++)if(this.entities[b].id===a.id){console.log("Flory : Can't add an entity twice to the same enviroment.");return}this.addedEntity(this.entities[this.entities.push(a)-1])}return this},addedEntity:function(){},update:function(a){},enableVisualization:function(a){this.data.rendererType==Flory.Environment.RendererType.Default||
""==this.data.rendererType?this.renderer=new Flory.Renderer:this.data.rendererType==Flory.Environment.RendererType.PointCloud&&(this.renderer=new Flory.PointCloudRenderer);this.visualization=!0;this.setUpVisualization();return this},disableVisualization:function(){this.renderer={};var a=this.renderer.renderer.domElement;a.parentElement.removeChild(a);this.visualization=!1;return this},setUpVisualization:function(){}};Flory.Environment.RendererType={Default:"default",PointCloud:"pointCloud"};
Flory.Field=function(a){Flory.Entity.call(this);this.data=[];for(var b=0,c=a.length;b<c;b++)this.data[b]={},void 0==a[b].position?this.data[b].position=new Flory.Vector(a[b][0]):a[b].position instanceof Array?this.data[b].position=new Flory.Vector(a[b].position):void 0!=a[b].position.components&&(this.data[b].position=a[b].position.clone()),void 0==a[b].vector?this.data[b].vector=new Flory.Vector(a[b][1]):a[b].vector instanceof Array?this.data[b].vector=new Flory.Vector(a[b].vector):void 0!=a[b].vector.components&&
(this.data[b].vector=a[b].vector.clone())};Flory.Field.prototype=Object.create(Flory.Entity.prototype);Flory.Field.prototype.constructor=Flory.Field;Flory.Field.prototype.getForce=function(a,b){for(var c=Infinity,d=0,e=0,f=this.data.length;e<f;e++){var g=this.data[e].position.distanceToSq(a);g<=c&&(d=e,c=g)}return this.data[d].vector};Flory.Field.prototype.combine=function(a){};Flory.Field.prototype.scale=function(a){for(var b=0,c=this.data.length;b<c;b++)this.data[b].vector.scale(a)};
Flory.Field.prototype.clone=function(){return new Flory.Field(this.data)};
Flory.Field2D=function(a){Flory.Entity.call(this);this.data=[];for(var b=0,c=a.length;b<c;b++)this.data[b]={},void 0==a[b].position?this.data[b].position=new Flory.Vector2(a[b][0][0],a[b][0][1]):a[b].position instanceof Array?this.data[b].position=new Flory.Vector2(a[b].position[0],a[b].position[1]):void 0!=a[b].position.x&&void 0!=a[b].position.y&&(this.data[b].position=a[b].position.clone()),void 0==a[b].vector?this.data[b].vector=new Flory.Vector2(a[b][1][0],a[b][1][1]):a[b].vector instanceof Array?
this.data[b].vector=new Flory.Vector2(a[b].vector[0],a[b].vector[1]):void 0!=a[b].vector.x&&void 0!=a[b].vector.y&&(this.data[b].vector=a[b].vector.clone())};Flory.Field2D.prototype=Object.create(Flory.Entity.prototype);Flory.Field2D.prototype.constructor=Flory.Field2D;Flory.Field2D.prototype.getForce=function(a,b){for(var c=0,d=0,e=0,f=this.data.length;e<f;e++){var g=this.data[e].position.distanceToSq(a);g<=c&&(d=e,c=g)}return this.data[d].vector};Flory.Field2D.prototype.combine=function(a){};
Flory.Field2D.prototype.scale=function(a){for(var b=0,c=this.data.length;b<c;b++)this.data[b].vector.scale(a)};Flory.Field2D.prototype.clone=function(){return new Flory.Field2D(this.data)};
Flory.Field3D=function(a){Flory.Entity.call(this);this.data=[];for(var b=0,c=a.length;b<c;b++)this.data[b]={},void 0==a[b].position?this.data[b].position=new Flory.Vector3(a[b][0][0],a[b][0][1],a[b][0][2]):a[b].position instanceof Array?this.data[b].position=new Flory.Vector3(a[b].position[0],a[b].position[1],a[b].position[2]):void 0!=a[b].position.x&&void 0!=a[b].position.y&&void 0!=a[b].position.z&&(this.data[b].position=a[b].position.clone()),void 0==a[b].vector?this.data[b].vector=new Flory.Vector3(a[b][1][0],
a[b][1][1],a[b][1][2]):a[b].vector instanceof Array?this.data[b].vector=new Flory.Vector3(a[b].vector[0],a[b].vector[1],a[b].vector[2]):void 0!=a[b].vector.x&&void 0!=a[b].vector.y&&void 0!=a[b].postiion.z&&(this.data[b].vector=a[b].vector.clone())};Flory.Field3D.prototype=Object.create(Flory.Entity.prototype);Flory.Field3D.prototype.constructor=Flory.Field3D;
Flory.Field3D.prototype.getForce=function(a,b){for(var c=0,d=0,e=0,f=this.data.length;e<f;e++){var g=this.data[e].position.distanceToSq(a);g<=c&&(d=e,c=g)}return this.data[d].vector};Flory.Field3D.prototype.combine=function(a){};Flory.Field3D.prototype.scale=function(a){for(var b=0,c=this.data.length;b<c;b++)this.data[b].vector.scale(a)};Flory.Field3D.prototype.clone=function(){return new Flory.Field3D(this.data)};var THREE={REVISION:"68"};"object"===typeof module&&(module.exports=THREE);
THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;
THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;
THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;
THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;
THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
c:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var l=e-f,f=.5>=h?l/(e+f):l/(2-e-f);switch(e){case b:g=(c-d)/l+(c<d?6:0);break;case c:g=(d-b)/l+2;break;case d:g=(b-c)/l+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;
this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=
c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,
b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],l=b[6],b=b[10],n=c+f+b;0<n?(c=.5/Math.sqrt(n+1),this._w=.25/c,this._x=(l-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(l-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=
.25*c,this._z=(g+l)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+l)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=
-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,l=b._z,n=b._w;this._x=c*n+f*g+d*l-e*h;this._y=d*n+f*h+e*g-c*l;this._z=e*n+f*l+c*h-d*g;this._w=f*n-c*g-d*h-e*l;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),l=Math.sqrt(1-g*g);if(.001>Math.abs(l))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;g=Math.sin((1-b)*h)/l;h=Math.sin(b*h)/l;this._w=f*g+this._w*h;this._x=c*g+
this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];this._w=a[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,
this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,
b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},
roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=
this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){this.x=a[0];this.y=a[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=
a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,
c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=
(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,l=a*c+g*b-e*d,n=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+l*-g-n*-f;this.y=l*a+b*-f+n*-e-h*-g;this.z=n*a+b*-g+h*-f-l*-e;return this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;
this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=
b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=
0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+
Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=
e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===
a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},
setEulerFromQuaternion:function(a,b){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,
b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=
a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},
setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],l=a[9];c=a[2];b=a[6];var n=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(l-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(l+b)&&.1>Math.abs(e+h+n-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;n=(n+1)/2;d=(d+g)/4;f=(f+c)/4;l=(l+b)/4;e>h&&e>n?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>n?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),
b=d/c,d=l/c):.01>n?(c=b=.707106781,d=0):(d=Math.sqrt(n),b=f/d,c=l/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-l)*(b-l)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-l)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+n-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);
return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);
return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];this.w=a[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,
this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b){var c=THREE.Math.clamp,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],l=d[5],n=d[9],q=d[2],s=d[6],d=d[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-n,d),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(s,l),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(n,-1,1)),.99999>Math.abs(n)?(this._y=Math.atan2(g,d),this._z=Math.atan2(h,l)):(this._y=
Math.atan2(-q,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(s,-1,1)),.99999>Math.abs(s)?(this._y=Math.atan2(-q,d),this._z=Math.atan2(-f,l)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(q,-1,1)),.99999>Math.abs(q)?(this._x=Math.atan2(s,d),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,l))):"YZX"===b?(this._z=Math.asin(c(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-n,l),this._y=Math.atan2(-q,e)):(this._x=0,this._y=Math.atan2(g,d))):"XZY"===b?(this._z=Math.asin(-c(f,
-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(s,l),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-n,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;this.onChangeCallback();return this},setFromQuaternion:function(a,b,c){var d=THREE.Math.clamp,e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w),-1,1)),this._z=Math.atan2(2*(a.z*a.w-a.x*
a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z),-1,1)),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*
(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w),-1,1))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);
this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};
THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=
this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);
this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>
this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);
this.makeEmpty();b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var e=b.geometry.vertices,f=0,g=e.length;f<g;f++)a.copy(e[f]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},
center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<
this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<
this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);
this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);
a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};
THREE.Matrix3=function(a,b,c,d,e,f,g,h,l){var n=this.elements=new Float32Array(9);n[0]=void 0!==a?a:1;n[3]=b||0;n[6]=c||0;n[1]=d||0;n[4]=void 0!==e?e:1;n[7]=f||0;n[2]=g||0;n[5]=h||0;n[8]=void 0!==l?l:1};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,l){var n=this.elements;n[0]=a;n[3]=b;n[6]=c;n[1]=d;n[4]=e;n[7]=f;n[2]=g;n[5]=h;n[8]=l;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=
a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],l=a[7],a=a[8];return b*f*a-b*g*l-c*e*a+c*g*h+d*e*l-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];
c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];
a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],
a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};THREE.Matrix4=function(a,b,c,d,e,f,g,h,l,n,q,s,u,w,v,r){var y=this.elements=new Float32Array(16);y[0]=void 0!==a?a:1;y[4]=b||0;y[8]=c||0;y[12]=d||0;y[1]=e||0;y[5]=void 0!==f?f:1;y[9]=g||0;y[13]=h||0;y[2]=l||0;y[6]=n||0;y[10]=void 0!==q?q:1;y[14]=s||0;y[3]=u||0;y[7]=w||0;y[11]=v||0;y[15]=void 0!==r?r:1};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,l,n,q,s,u,w,v,r){var y=this.elements;y[0]=a;y[4]=b;y[8]=c;y[12]=d;y[1]=e;y[5]=f;y[9]=g;y[13]=h;y[2]=l;y[6]=n;y[10]=q;y[14]=s;y[3]=u;y[7]=w;y[11]=v;y[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},
copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&
console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){a=f*h;var l=f*e,n=c*h,q=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=l+n*d;b[5]=a-q*d;b[9]=-c*g;b[2]=q-a*d;b[6]=n+l*d;b[10]=f*g}else"YXZ"===a.order?(a=g*h,l=g*e,n=d*h,q=d*e,b[0]=a+q*c,b[4]=n*c-l,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=l*c-n,b[6]=q+a*c,
b[10]=f*g):"ZXY"===a.order?(a=g*h,l=g*e,n=d*h,q=d*e,b[0]=a-q*c,b[4]=-f*e,b[8]=n+l*c,b[1]=l+n*c,b[5]=f*h,b[9]=q-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(a=f*h,l=f*e,n=c*h,q=c*e,b[0]=g*h,b[4]=n*d-l,b[8]=a*d+q,b[1]=g*e,b[5]=q*d+a,b[9]=l*d-n,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(a=f*g,l=f*d,n=c*g,q=c*d,b[0]=g*h,b[4]=q-a*e,b[8]=n*e+l,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=l*e+n,b[10]=a-q*e):"XZY"===a.order&&(a=f*g,l=f*d,n=c*g,q=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+q,b[5]=f*h,b[9]=l*
e-n,b[2]=n*e-l,b[6]=c*h,b[10]=q*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,l=e+e;a=c*g;var n=c*h,c=c*l,q=d*h,d=d*l,e=e*l,g=f*g,h=f*h,f=f*l;b[0]=1-(q+e);b[4]=n-f;b[8]=c+h;b[1]=n+f;b[5]=1-
(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],l=c[12],n=c[1],q=c[5],s=c[9],u=c[13],w=c[2],v=c[6],r=c[10],y=c[14],z=c[3],x=c[7],G=c[11],c=c[15],D=d[0],A=d[4],F=d[8],L=d[12],C=d[1],B=d[5],N=d[9],Q=d[13],ea=d[2],S=d[6],R=d[10],M=d[14],H=d[3],
T=d[7],O=d[11],d=d[15];e[0]=f*D+g*C+h*ea+l*H;e[4]=f*A+g*B+h*S+l*T;e[8]=f*F+g*N+h*R+l*O;e[12]=f*L+g*Q+h*M+l*d;e[1]=n*D+q*C+s*ea+u*H;e[5]=n*A+q*B+s*S+u*T;e[9]=n*F+q*N+s*R+u*O;e[13]=n*L+q*Q+s*M+u*d;e[2]=w*D+v*C+r*ea+y*H;e[6]=w*A+v*B+r*S+y*T;e[10]=w*F+v*N+r*R+y*O;e[14]=w*L+v*Q+r*M+y*d;e[3]=z*D+x*C+G*ea+c*H;e[7]=z*A+x*B+G*S+c*T;e[11]=z*F+x*N+G*R+c*O;e[15]=z*L+x*Q+G*M+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];
c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=
b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=
a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],l=a[13],n=a[2],q=a[6],s=a[10],u=a[14];return a[3]*(+e*h*q-d*l*q-e*g*s+c*l*s+d*g*u-c*h*u)+a[7]*(+b*h*u-b*l*s+e*f*s-d*f*u+d*l*n-e*h*n)+a[11]*(+b*l*q-b*g*u-e*f*q+c*f*u+e*g*n-c*l*n)+a[15]*(-d*g*n-b*h*q+b*g*s+d*f*q-c*f*s+c*h*n)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,
b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=
this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],l=d[1],n=d[5],q=d[9],s=d[13],u=d[2],w=d[6],v=d[10],r=d[14],y=d[3],z=d[7],x=d[11],d=d[15];c[0]=q*r*z-s*v*z+s*w*x-n*r*x-q*w*d+n*v*d;c[4]=h*v*z-g*r*z-h*w*x+f*r*x+g*w*d-f*v*d;c[8]=g*s*z-h*q*z+h*n*x-f*s*x-g*n*d+f*q*d;c[12]=h*q*w-g*s*w-h*n*v+f*s*v+g*n*r-f*q*r;c[1]=s*v*y-q*r*y-s*u*x+l*r*x+q*u*d-l*v*d;c[5]=g*r*y-h*v*y+h*u*x-e*r*x-g*u*d+e*v*d;c[9]=h*q*y-g*s*y-h*l*
x+e*s*x+g*l*d-e*q*d;c[13]=g*s*u-h*q*u+h*l*v-e*s*v-g*l*r+e*q*r;c[2]=n*r*y-s*w*y+s*u*z-l*r*z-n*u*d+l*w*d;c[6]=h*w*y-f*r*y-h*u*z+e*r*z+f*u*d-e*w*d;c[10]=f*s*y-h*n*y+h*l*z-e*s*z-f*l*d+e*n*d;c[14]=h*n*u-f*s*u-h*l*w+e*s*w+f*l*r-e*n*r;c[3]=q*w*y-n*v*y-q*u*z+l*v*z+n*u*x-l*w*x;c[7]=f*v*y-g*w*y+g*u*z-e*v*z-f*u*x+e*w*x;c[11]=g*n*y-f*q*y-g*l*z+e*q*z+f*l*x-e*n*x;c[15]=f*q*u-g*n*u+g*l*w-e*q*w-f*l*v+e*n*v;c=e*c[0]+l*c[4]+u*c[8]+y*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(a){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(a){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(a){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},
scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,
0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,l=e*f,n=e*g;this.set(l*f+c,l*g-d*h,l*h+d*g,0,l*g+d*h,n*g+c,n*h-d*f,0,l*h-d*g,n*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),l=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,n=1/l;b.elements[0]*=c;b.elements[1]*=
c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=n;b.elements[9]*=n;b.elements[10]*=n;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=l;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));
var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,l=c-d,n=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/l;g[9]=0;g[13]=-((c+d)/l);g[2]=0;g[6]=0;g[10]=-2/n;g[14]=-((f+e)/n);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=
this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(.5),f=b.clone().sub(a).normalize(),g=.5*a.distanceTo(b),h=
this.origin.clone().sub(e);a=-this.direction.dot(f);b=h.dot(this.direction);var l=-h.dot(f),n=h.lengthSq(),q=Math.abs(1-a*a),s,u;0<=q?(h=a*l-b,s=a*b-l,u=g*q,0<=h?s>=-u?s<=u?(g=1/q,h*=g,s*=g,a=h*(h+a*s+2*b)+s*(a*h+s+2*l)+n):(s=g,h=Math.max(0,-(a*s+b)),a=-h*h+s*(s+2*l)+n):(s=-g,h=Math.max(0,-(a*s+b)),a=-h*h+s*(s+2*l)+n):s<=-u?(h=Math.max(0,-(-a*g+b)),s=0<h?-g:Math.min(Math.max(-g,-l),g),a=-h*h+s*(s+2*l)+n):s<=u?(h=0,s=Math.min(Math.max(-g,-l),g),a=s*(s+2*l)+n):(h=Math.max(0,-(a*g+b)),s=0<h?g:Math.min(Math.max(-g,
-l),g),a=-h*h+s*(s+2*l)+n)):(s=0<a?-g:g,h=Math.max(0,-(a*s+b)),a=-h*h+s*(s+2*l)+n);c&&c.copy(this.direction.clone().multiplyScalar(h).add(this.origin));d&&d.copy(f.clone().multiplyScalar(s).add(e));return a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;
d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;
return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==
c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,l){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;
e=-h*a.dot(d);return 0>e?null:this.at(e/f,l)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],l=c[6],n=c[7],q=c[8],s=c[9],u=c[10],w=c[11],v=c[12],r=c[13],y=c[14],c=c[15];b[0].setComponents(f-a,n-g,w-q,c-v).normalize();b[1].setComponents(f+
a,n+g,w+q,c+v).normalize();b[2].setComponents(f+d,n+h,w+s,c+r).normalize();b[3].setComponents(f-d,n-h,w-s,c-r).normalize();b[4].setComponents(f-e,n-l,w-u,c-y).normalize();b[5].setComponents(f+e,n+l,w+u,c+y).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),
containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=
b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*
a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,l,n,q,s,u;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+
2;n=this.points[c[0]];q=this.points[c[1]];s=this.points[c[2]];u=this.points[c[3]];h=g*g;l=g*h;d.x=b(n.x,q.x,s.x,u.x,g,h,l);d.y=b(n.y,q.y,s.y,u.y,g,h,l);d.z=b(n.z,q.z,s.z,u.z,g,h,l);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],l=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),l+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=l,e=b);h[h.length]=l;return{chunks:h,total:l}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],l=new THREE.Vector3,n=this.getLength();h.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=n.chunks[b]-n.chunks[b-1];g=Math.ceil(a*c/n.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(l.copy(d).clone());
h.push(l.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var l=b.dot(b);g=b.dot(c);var n=d*l-e*e;h=h||new THREE.Vector3;if(0==n)return h.set(-2,-1,-1);n=1/n;l=(l*f-e*g)*n;d=(d*g-e*f)*n;return h.set(1-l-d,d,l)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};
(function(a){a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,f,g){a.raycast(b,f);if(!0===g){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},intersectObject:function(a,e){var f=[];c(a,this,f,e);
f.sort(b);return f},intersectObjects:function(a,e){for(var f=[],g=0,h=a.length;g<h;g++)c(a[g],this,f,e);f.sort(b);return f}}})(THREE);
THREE.Object3D=function(){this.id=Flory.Entity.entityIDCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,
value:c},scale:{enumerable:!0,value:d}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},
applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,
c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));
return this}}(),translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,
b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error("THREE.Object3D.add:",
a,"can't be added as a child of itself."),this;if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}else console.error("THREE.Object3D.add:",a,"is not an instance of THREE.Object3D.");return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);
if(-1!==b){a.parent=void 0;a.dispatchEvent({type:"removed"});this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverseVisible(a)}},getObjectById:function(a,b){for(var c=0,d=this.children.length;c<
d;c++){var e=this.children[c];if(e.id===a||!0===b&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getObjectByName(a,b),void 0!==e))return e}},getChildByName:function(a,b){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a,b)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);
this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);
a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===
b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Projector=function(){function a(){if(s===w){var a=new THREE.RenderableVertex;u.push(a);w++;s++;return a}return u[s++]}function b(){if(r===z){var a=new THREE.RenderableFace;y.push(a);z++;r++;return a}return y[r++]}function c(){if(G===A){var a=new THREE.RenderableLine;D.push(a);A++;G++;return a}return D[G++]}function d(){if(L===B){var a=new THREE.RenderableSprite;C.push(a);B++;L++;return a}return C[L++]}function e(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function f(a,b){var c=0,d=
1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var g,h,l=[],n=0,q,s,u=[],w=0,v,r,y=[],z=0,x,G,D=[],A=0,F,L,C=[],B=0,N={objects:[],lights:[],elements:[]},Q=new THREE.Vector3,ea=new THREE.Vector3,S=new THREE.Vector3,R=new THREE.Vector3,M=new THREE.Vector4,H=new THREE.Box3(new THREE.Vector3(-1,
-1,-1),new THREE.Vector3(1,1,1)),T=new THREE.Box3,O=Array(3),U=new THREE.Matrix4,E=new THREE.Matrix4,V,Y=new THREE.Matrix4,Z=new THREE.Matrix3,K=new THREE.Frustum,ra=new THREE.Vector4,ca=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);E.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(E)};this.unprojectVector=function(){var a=new THREE.Matrix4;return function(b,c){a.getInverse(c.projectionMatrix);E.multiplyMatrices(c.matrixWorld,
a);return b.applyProjection(E)}}();this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,c)};var $=new function(){var d=[],e=[],f=null,g=null,h=new THREE.Matrix3,l=function(a){var b=a.positionWorld,c=a.positionScreen;b.copy(a.position).applyMatrix4(V);c.copy(b).applyMatrix4(E);b=1/c.w;c.x*=b;c.y*=b;c.z*=b;a.visible=-1<=c.x&&1>=c.x&&-1<=c.y&&1>=c.y&&-1<=c.z&&1>=c.z},n=function(a,
b,c){if(!0===a.visible||!0===b.visible||!0===c.visible)return!0;O[0]=a.positionScreen;O[1]=b.positionScreen;O[2]=c.positionScreen;return H.isIntersectionBox(T.setFromPoints(O))},s=function(a,b,c){return 0>(c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x)};return{setObject:function(a){f=a;g=f.material;h.getNormalMatrix(f.matrixWorld);d.length=0;e.length=0},projectVertex:l,checkTriangleVisibility:n,
checkBackfaceCulling:s,pushVertex:function(b,c,d){q=a();q.position.set(b,c,d);l(q)},pushNormal:function(a,b,c){d.push(a,b,c)},pushUv:function(a,b){e.push(a,b)},pushLine:function(a,b){var d=u[a],e=u[b];x=c();x.id=f.id;x.v1.copy(d);x.v2.copy(e);x.z=(d.positionScreen.z+e.positionScreen.z)/2;x.material=f.material;N.elements.push(x)},pushTriangle:function(a,c,l){var q=u[a],r=u[c],w=u[l];if(!1!==n(q,r,w)&&(g.side===THREE.DoubleSide||!0===s(q,r,w))){v=b();v.id=f.id;v.v1.copy(q);v.v2.copy(r);v.v3.copy(w);
v.z=(q.positionScreen.z+r.positionScreen.z+w.positionScreen.z)/3;for(q=0;3>q;q++)r=3*arguments[q],w=v.vertexNormalsModel[q],w.set(d[r],d[r+1],d[r+2]),w.applyMatrix3(h).normalize(),r=2*arguments[q],v.uvs[q].set(e[r],e[r+1]);v.vertexNormalsLength=3;v.material=f.material;N.elements.push(v)}}}};this.projectScene=function(q,w,z,y){L=G=r=0;N.elements.length=0;!0===q.autoUpdate&&q.updateMatrixWorld();void 0===w.parent&&w.updateMatrixWorld();U.copy(w.matrixWorldInverse.getInverse(w.matrixWorld));E.multiplyMatrices(w.projectionMatrix,
U);K.setFromMatrix(E);h=0;N.objects.length=0;N.lights.length=0;q.traverseVisible(function(a){if(a instanceof THREE.Light)N.lights.push(a);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Sprite)if(!1===a.frustumCulled||!0===K.intersectsObject(a)){if(h===n){var b=new THREE.RenderableObject;l.push(b);n++;h++;g=b}else g=l[h++];g.id=a.id;g.object=a;null!==a.renderDepth?g.z=a.renderDepth:(R.setFromMatrixPosition(a.matrixWorld),R.applyProjection(E),g.z=R.z);N.objects.push(g)}});
!0===z&&N.objects.sort(e);q=0;for(z=N.objects.length;q<z;q++){var D=N.objects[q].object,A=D.geometry;$.setObject(D);V=D.matrixWorld;s=0;if(D instanceof THREE.Mesh)if(A instanceof THREE.BufferGeometry){var C=A.attributes,D=A.offsets;if(void 0!==C.position){for(var J=C.position.array,A=0,B=J.length;A<B;A+=3)$.pushVertex(J[A],J[A+1],J[A+2]);if(void 0!==C.normal)for(var O=C.normal.array,A=0,B=O.length;A<B;A+=3)$.pushNormal(O[A],O[A+1],O[A+2]);if(void 0!==C.uv)for(O=C.uv.array,A=0,B=O.length;A<B;A+=2)$.pushUv(O[A],
O[A+1]);if(void 0!==C.index)if(C=C.index.array,0<D.length)for(q=0;q<D.length;q++)for(B=D[q],J=B.index,A=B.start,B=B.start+B.count;A<B;A+=3)$.pushTriangle(C[A]+J,C[A+1]+J,C[A+2]+J);else for(A=0,B=C.length;A<B;A+=3)$.pushTriangle(C[A],C[A+1],C[A+2]);else for(A=0,B=J.length/3;A<B;A+=3)$.pushTriangle(A,A+1,A+2)}}else{if(A instanceof THREE.Geometry){var T=A.vertices,B=A.faces,C=A.faceVertexUvs[0];Z.getNormalMatrix(V);for(var J=D.material instanceof THREE.MeshFaceMaterial,O=!0===J?D.material:null,H=0,fa=
T.length;H<fa;H++){var oa=T[H];$.pushVertex(oa.x,oa.y,oa.z)}T=0;for(H=B.length;T<H;T++){var fa=B[T],ta=!0===J?O.materials[fa.materialIndex]:D.material;if(void 0!==ta){var xa=ta.side,oa=u[fa.a],ma=u[fa.b],Ia=u[fa.c];if(!0===ta.morphTargets){var ya=A.morphTargets,Na=D.morphTargetInfluences,da=oa.position,ua=ma.position,Ga=Ia.position;Q.set(0,0,0);ea.set(0,0,0);S.set(0,0,0);for(var Ta=0,fb=ya.length;Ta<fb;Ta++){var Ja=Na[Ta];if(0!==Ja){var Aa=ya[Ta].vertices;Q.x+=(Aa[fa.a].x-da.x)*Ja;Q.y+=(Aa[fa.a].y-
da.y)*Ja;Q.z+=(Aa[fa.a].z-da.z)*Ja;ea.x+=(Aa[fa.b].x-ua.x)*Ja;ea.y+=(Aa[fa.b].y-ua.y)*Ja;ea.z+=(Aa[fa.b].z-ua.z)*Ja;S.x+=(Aa[fa.c].x-Ga.x)*Ja;S.y+=(Aa[fa.c].y-Ga.y)*Ja;S.z+=(Aa[fa.c].z-Ga.z)*Ja}}oa.position.add(Q);ma.position.add(ea);Ia.position.add(S);$.projectVertex(oa);$.projectVertex(ma);$.projectVertex(Ia)}if(!1!==$.checkTriangleVisibility(oa,ma,Ia)){ya=$.checkBackfaceCulling(oa,ma,Ia);if(xa!==THREE.DoubleSide){if(xa===THREE.FrontSide&&!1===ya)continue;if(xa===THREE.BackSide&&!0===ya)continue}v=
b();v.id=D.id;v.v1.copy(oa);v.v2.copy(ma);v.v3.copy(Ia);v.normalModel.copy(fa.normal);!1!==ya||xa!==THREE.BackSide&&xa!==THREE.DoubleSide||v.normalModel.negate();v.normalModel.applyMatrix3(Z).normalize();Na=fa.vertexNormals;da=0;for(ua=Math.min(Na.length,3);da<ua;da++)Ga=v.vertexNormalsModel[da],Ga.copy(Na[da]),!1!==ya||xa!==THREE.BackSide&&xa!==THREE.DoubleSide||Ga.negate(),Ga.applyMatrix3(Z).normalize();v.vertexNormalsLength=Na.length;xa=C[T];if(void 0!==xa)for(ya=0;3>ya;ya++)v.uvs[ya].copy(xa[ya]);
v.color=fa.color;v.material=ta;v.z=(oa.positionScreen.z+ma.positionScreen.z+Ia.positionScreen.z)/3;N.elements.push(v)}}}}}else if(D instanceof THREE.Line)if(A instanceof THREE.BufferGeometry){if(C=A.attributes,void 0!==C.position){J=C.position.array;A=0;for(B=J.length;A<B;A+=3)$.pushVertex(J[A],J[A+1],J[A+2]);if(void 0!==C.index)for(C=C.index.array,A=0,B=C.length;A<B;A+=2)$.pushLine(C[A],C[A+1]);else for(C=D.type===THREE.LinePieces?2:1,A=0,B=J.length/3-1;A<B;A+=C)$.pushLine(A,A+1)}}else{if(A instanceof
THREE.Geometry&&(Y.multiplyMatrices(E,V),T=D.geometry.vertices,0!==T.length))for(oa=a(),oa.positionScreen.copy(T[0]).applyMatrix4(Y),C=D.type===THREE.LinePieces?2:1,H=1,fa=T.length;H<fa;H++)oa=a(),oa.positionScreen.copy(T[H]).applyMatrix4(Y),0<(H+1)%C||(ma=u[s-2],ra.copy(oa.positionScreen),ca.copy(ma.positionScreen),!0===f(ra,ca)&&(ra.multiplyScalar(1/ra.w),ca.multiplyScalar(1/ca.w),x=c(),x.id=D.id,x.v1.positionScreen.copy(ra),x.v2.positionScreen.copy(ca),x.z=Math.max(ra.z,ca.z),x.material=D.material,
D.material.vertexColors===THREE.VertexColors&&(x.vertexColors[0].copy(D.geometry.colors[H]),x.vertexColors[1].copy(D.geometry.colors[H-1])),N.elements.push(x)))}else D instanceof THREE.Sprite&&(M.set(V.elements[12],V.elements[13],V.elements[14],1),M.applyMatrix4(E),A=1/M.w,M.z*=A,-1<=M.z&&1>=M.z&&(F=d(),F.id=D.id,F.x=M.x*A,F.y=M.y*A,F.z=M.z,F.object=D,F.rotation=D.rotation,F.scale.x=D.scale.x*Math.abs(F.x-(M.x+w.projectionMatrix.elements[0])/(M.w+w.projectionMatrix.elements[12])),F.scale.y=D.scale.y*
Math.abs(F.y-(M.y+w.projectionMatrix.elements[5])/(M.w+w.projectionMatrix.elements[13])),F.material=D.material,N.elements.push(F)))}!0===y&&N.elements.sort(e);return N}};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}};
THREE.Face4=function(a,b,c,d,e,f,g){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,e,f,g)};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b};
THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(a){this.array.set(a);return this},setX:function(a,b){this.array[a*this.itemSize]=b;return this},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=
c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this}};THREE.Int8Attribute=function(a,b){console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint8Attribute=function(a,b){console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Uint8ClampedAttribute=function(a,b){console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Int16Attribute=function(a,b){console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Uint16Attribute=function(a,b){console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Int32Attribute=function(a,b){console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Uint32Attribute=function(a,b){console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Float32Attribute=function(a,b){console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Float64Attribute=function(a,b){console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[a]={array:b,itemSize:c}):this.attributes[a]=b},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),
b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0)},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};var c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=0<e[0].length,h=3==d[0].vertexNormals.length,l=new Float32Array(9*d.length);this.addAttribute("position",new THREE.BufferAttribute(l,3));var n=new Float32Array(9*d.length);this.addAttribute("normal",new THREE.BufferAttribute(n,3));if(f!==
THREE.NoColors){var q=new Float32Array(9*d.length);this.addAttribute("color",new THREE.BufferAttribute(q,3))}if(!0===g){var s=new Float32Array(6*d.length);this.addAttribute("uvs",new THREE.BufferAttribute(s,2))}for(var u=0,w=0,v=0;u<d.length;u++,w+=6,v+=9){var r=d[u],y=c[r.a],z=c[r.b],x=c[r.c];l[v]=y.x;l[v+1]=y.y;l[v+2]=y.z;l[v+3]=z.x;l[v+4]=z.y;l[v+5]=z.z;l[v+6]=x.x;l[v+7]=x.y;l[v+8]=x.z;!0===h?(y=r.vertexNormals[0],z=r.vertexNormals[1],x=r.vertexNormals[2],n[v]=y.x,n[v+1]=y.y,n[v+2]=y.z,n[v+3]=
z.x,n[v+4]=z.y,n[v+5]=z.z,n[v+6]=x.x,n[v+7]=x.y,n[v+8]=x.z):(y=r.normal,n[v]=y.x,n[v+1]=y.y,n[v+2]=y.z,n[v+3]=y.x,n[v+4]=y.y,n[v+5]=y.z,n[v+6]=y.x,n[v+7]=y.y,n[v+8]=y.z);f===THREE.FaceColors?(r=r.color,q[v]=r.r,q[v+1]=r.g,q[v+2]=r.b,q[v+3]=r.r,q[v+4]=r.g,q[v+5]=r.b,q[v+6]=r.r,q[v+7]=r.g,q[v+8]=r.b):f===THREE.VertexColors&&(y=r.vertexColors[0],z=r.vertexColors[1],r=r.vertexColors[2],q[v]=y.r,q[v+1]=y.g,q[v+2]=y.b,q[v+3]=z.r,q[v+4]=z.g,q[v+5]=z.b,q[v+6]=r.r,q[v+7]=r.g,q[v+8]=r.b);!0===g&&(r=e[0][u][0],
y=e[0][u][1],z=e[0][u][2],s[w]=r.x,s[w+1]=r.y,s[w+2]=y.x,s[w+3]=y.y,s[w+4]=z.x,s[w+5]=z.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b=this.boundingBox;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var c=3,d=a.length;c<d;c+=3){var e=a[c],f=a[c+1],g=a[c+2];e<b.min.x?b.min.x=e:e>b.max.x&&(b.max.x=e);f<b.min.y?b.min.y=f:f>b.max.y&&
(b.max.y=f);g<b.min.z?b.min.z=g:g>b.max.z&&(b.max.z=g)}}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&
(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandByPoint(b);a.center(d);for(var g=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),
computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a)};else for(a=0,b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0;var e=this.attributes.position.array,f=this.attributes.normal.array,g,h,l,n,q,s,u=new THREE.Vector3,w=new THREE.Vector3,v=new THREE.Vector3,r=new THREE.Vector3,y=new THREE.Vector3;
if(this.attributes.index){var z=this.attributes.index.array,x=0<this.offsets.length?this.offsets:[{start:0,count:z.length,index:0}];c=0;for(d=x.length;c<d;++c){b=x[c].start;g=x[c].count;var G=x[c].index;a=b;for(b+=g;a<b;a+=3)g=G+z[a],h=G+z[a+1],l=G+z[a+2],n=e[3*g],q=e[3*g+1],s=e[3*g+2],u.set(n,q,s),n=e[3*h],q=e[3*h+1],s=e[3*h+2],w.set(n,q,s),n=e[3*l],q=e[3*l+1],s=e[3*l+2],v.set(n,q,s),r.subVectors(v,w),y.subVectors(u,w),r.cross(y),f[3*g]+=r.x,f[3*g+1]+=r.y,f[3*g+2]+=r.z,f[3*h]+=r.x,f[3*h+1]+=r.y,
f[3*h+2]+=r.z,f[3*l]+=r.x,f[3*l+1]+=r.y,f[3*l+2]+=r.z}}else for(a=0,b=e.length;a<b;a+=9)n=e[a],q=e[a+1],s=e[a+2],u.set(n,q,s),n=e[a+3],q=e[a+4],s=e[a+5],w.set(n,q,s),n=e[a+6],q=e[a+7],s=e[a+8],v.set(n,q,s),r.subVectors(v,w),y.subVectors(u,w),r.cross(y),f[a]=r.x,f[a+1]=r.y,f[a+2]=r.z,f[a+3]=r.x,f[a+4]=r.y,f[a+5]=r.z,f[a+6]=r.x,f[a+7]=r.y,f[a+8]=r.z;this.normalizeNormals();this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a,b,c){s=d[3*a];u=d[3*a+1];w=d[3*a+2];v=d[3*b];r=d[3*b+1];y=d[3*
b+2];z=d[3*c];x=d[3*c+1];G=d[3*c+2];D=f[2*a];A=f[2*a+1];F=f[2*b];L=f[2*b+1];C=f[2*c];B=f[2*c+1];N=v-s;Q=z-s;ea=r-u;S=x-u;R=y-w;M=G-w;H=F-D;T=C-D;O=L-A;U=B-A;E=1/(H*U-T*O);V.set((U*N-O*Q)*E,(U*ea-O*S)*E,(U*R-O*M)*E);Y.set((H*Q-T*N)*E,(H*S-T*ea)*E,(H*M-T*R)*E);l[a].add(V);l[b].add(V);l[c].add(V);n[a].add(Y);n[b].add(Y);n[c].add(Y)}function b(a){Ca.x=e[3*a];Ca.y=e[3*a+1];Ca.z=e[3*a+2];Ra.copy(Ca);J=l[a];Ha.copy(J);Ha.sub(Ca.multiplyScalar(Ca.dot(J))).normalize();Da.crossVectors(Ra,J);Ea=Da.dot(n[a]);
Sa=0>Ea?-1:1;h[4*a]=Ha.x;h[4*a+1]=Ha.y;h[4*a+2]=Ha.z;h[4*a+3]=Sa}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent=
{itemSize:4,array:new Float32Array(4*g)});for(var h=this.attributes.tangent.array,l=[],n=[],q=0;q<g;q++)l[q]=new THREE.Vector3,n[q]=new THREE.Vector3;var s,u,w,v,r,y,z,x,G,D,A,F,L,C,B,N,Q,ea,S,R,M,H,T,O,U,E,V=new THREE.Vector3,Y=new THREE.Vector3,Z,K,ra,ca,$,W=this.offsets,q=0;for(K=W.length;q<K;++q){Z=W[q].start;ra=W[q].count;var Ba=W[q].index,g=Z;for(Z+=ra;g<Z;g+=3)ra=Ba+c[g],ca=Ba+c[g+1],$=Ba+c[g+2],a(ra,ca,$)}var Ha=new THREE.Vector3,Da=new THREE.Vector3,Ca=new THREE.Vector3,Ra=new THREE.Vector3,
Sa,J,Ea,q=0;for(K=W.length;q<K;++q)for(Z=W[q].start,ra=W[q].count,Ba=W[q].index,g=Z,Z+=ra;g<Z;g+=3)ra=Ba+c[g],ca=Ba+c[g+1],$=Ba+c[g+2],b(ra),b(ca),b($)}},computeOffsets:function(a){var b=a;void 0===a&&(b=65535);Date.now();a=this.attributes.index.array;for(var c=this.attributes.position.array,d=a.length/3,e=new Uint16Array(a.length),f=0,g=0,h=[{start:0,count:0,index:0}],l=h[0],n=0,q=0,s=new Int32Array(6),u=new Int32Array(c.length),w=new Int32Array(c.length),v=0;v<c.length;v++)u[v]=-1,w[v]=-1;for(c=
0;c<d;c++){for(var r=q=0;3>r;r++)v=a[3*c+r],-1==u[v]?(s[2*r]=v,s[2*r+1]=-1,q++):u[v]<l.index?(s[2*r]=v,s[2*r+1]=-1,n++):(s[2*r]=v,s[2*r+1]=u[v]);if(g+q>l.index+b)for(l={start:f,count:0,index:g},h.push(l),q=0;6>q;q+=2)r=s[q+1],-1<r&&r<l.index&&(s[q+1]=-1);for(q=0;6>q;q+=2)v=s[q],r=s[q+1],-1===r&&(r=g++),u[v]=r,w[r]=v,e[f++]=r-l.index,l.count++}this.reorderBuffers(e,w,g);return this.offsets=h},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var a=this.attributes.normal.array,
b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var d={},e=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],f;for(f in this.attributes)if("index"!=f)for(var g=this.attributes[f].array,h=0,l=e.length;h<l;h++){var n=e[h];if(g instanceof n){d[f]=new n(this.attributes[f].itemSize*c);break}}for(e=0;e<c;e++)for(f in g=b[e],this.attributes)if("index"!=
f)for(var h=this.attributes[f].array,l=this.attributes[f].itemSize,n=d[f],q=0;q<l;q++)n[e*l+q]=h[g*l+q];this.attributes.index.array=a;for(f in this.attributes)"index"!=f&&(this.attributes[f].array=d[f],this.attributes[f].numItems=this.attributes[f].itemSize*c)},clone:function(){var a=new THREE.BufferGeometry,b=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],c;for(c in this.attributes){for(var d=this.attributes[c],e=d.array,f={itemSize:d.itemSize,
array:null},d=0,g=b.length;d<g;d++){var h=b[d];if(e instanceof h){f.array=new h(e);break}}a.attributes[c]=f}d=0;for(g=this.offsets.length;d<g;d++)b=this.offsets[d],a.offsets.push({start:b.start,index:b.index,count:b.count});return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=
this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},
center:function(){this.computeBoundingBox();var a=new THREE.Vector3;a.addVectors(this.boundingBox.min,this.boundingBox.max);a.multiplyScalar(-.5);this.applyMatrix((new THREE.Matrix4).makeTranslation(a.x,a.y,a.z));this.computeBoundingBox();return a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},
computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,l=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),l.subVectors(e,f),h.cross(l),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],
d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||
(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,l;c=
0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(l)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],l=g.vertexNormals[c],h.copy(e.normal),l.a.copy(e.vertexNormals[0]),l.b.copy(e.vertexNormals[1]),l.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=
e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,g,h,l,n,q,s,u,w,v,r,y,z=[],x=[];c=new THREE.Vector3;var G=new THREE.Vector3,D=new THREE.Vector3,A=new THREE.Vector3,F=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)z[a]=new THREE.Vector3,x[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,y=e.b,e=e.c,g=this.vertices[d],h=this.vertices[y],l=this.vertices[e],n=f[0],q=f[1],s=f[2],
f=h.x-g.x,u=l.x-g.x,w=h.y-g.y,v=l.y-g.y,h=h.z-g.z,g=l.z-g.z,l=q.x-n.x,r=s.x-n.x,q=q.y-n.y,n=s.y-n.y,s=1/(l*n-r*q),c.set((n*f-q*u)*s,(n*w-q*v)*s,(n*h-q*g)*s),G.set((l*u-r*f)*s,(l*v-r*w)*s,(l*g-r*h)*s),z[d].add(c),z[y].add(c),z[e].add(c),x[d].add(G),x[y].add(G),x[e].add(G);G=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)F.copy(e.vertexNormals[c]),d=e[G[c]],y=z[d],D.copy(y),D.sub(F.multiplyScalar(F.dot(y))).normalize(),A.crossVectors(e.vertexNormals[c],
y),d=A.dot(x[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(D.x,D.y,D.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},
merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,l=a.faces,n=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var q=0,s=g.length;q<s;q++){var u=g[q].clone();void 0!==b&&u.applyMatrix4(b);f.push(u)}q=0;for(s=l.length;q<s;q++){var g=l[q],w,v=g.vertexNormals,r=
g.vertexColors,u=new THREE.Face3(g.a+e,g.b+e,g.c+e);u.normal.copy(g.normal);void 0!==d&&u.normal.applyMatrix3(d).normalize();b=0;for(f=v.length;b<f;b++)w=v[b].clone(),void 0!==d&&w.applyMatrix3(d).normalize(),u.vertexNormals.push(w);u.color.copy(g.color);b=0;for(f=r.length;b<f;b++)w=r[b],u.vertexColors.push(w.clone());u.materialIndex=g.materialIndex+c;h.push(u)}q=0;for(s=a.length;q<s;q++)if(c=a[q],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(new THREE.Vector2(c[b].x,c[b].y));n.push(d)}}},mergeVertices:function(){var a=
{},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,
1);f=this.vertices.length-b.length;this.vertices=b;return f},makeGroups:function(){var a=0;return function(b,c){var d,e,f,g,h={},l,n=this.morphTargets.length,q=this.morphNormals.length;this.geometryGroups={};this.geometryGroupsList=[];d=0;for(e=this.faces.length;d<e;d++)f=this.faces[d],f=b?f.materialIndex:0,f in h||(h[f]={hash:f,counter:0}),g=h[f].hash+"_"+h[f].counter,g in this.geometryGroups||(l={id:a++,faces3:[],materialIndex:f,vertices:0,numMorphTargets:n,numMorphNormals:q},this.geometryGroups[g]=
l,this.geometryGroupsList.push(l)),this.geometryGroups[g].vertices+3>c&&(h[f].counter+=1,g=h[f].hash+"_"+h[f].counter,g in this.geometryGroups||(l={id:a++,faces3:[],materialIndex:f,vertices:0,numMorphTargets:n,numMorphNormals:q},this.geometryGroups[g]=l,this.geometryGroupsList.push(l))),this.geometryGroups[g].faces3.push(d),this.geometryGroups[g].vertices+=3}}(),clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=
b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.Vector2(e[g].x,e[g].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};
THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var l=new THREE.PerspectiveCamera(90,1,a,b);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,u=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=u;c.activeCubeFace=5;a.render(b,l,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;return a};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;return a};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};
THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,
0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=
this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);
a.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return a};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};
THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;return a};
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=
this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=
this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return a};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(a,b){this.files[a]=b},get:function(a){return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+
"%"):b+((a.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");if(1===a.length)return"./";a.pop();return a.join("/")+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=this.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function d(a,
d,e,g,h,l,r){var y=b+e,z,x=THREE.Loader.Handlers.get(y);null!==x?z=x.load(y):(z=new THREE.Texture,x=f.imageLoader,x.crossOrigin=f.crossOrigin,x.load(y,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var b=c(a.width),d=c(a.height),e=document.createElement("canvas");e.width=b;e.height=d;e.getContext("2d").drawImage(a,0,0,b,d);z.image=e}else z.image=a;z.needsUpdate=!0}));z.sourceFile=e;g&&(z.repeat.set(g[0],g[1]),1!==g[0]&&(z.wrapS=THREE.RepeatWrapping),
1!==g[1]&&(z.wrapT=THREE.RepeatWrapping));h&&z.offset.set(h[0],h[1]);l&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==e[l[0]]&&(z.wrapS=e[l[0]]),void 0!==e[l[1]]&&(z.wrapT=e[l[1]]));r&&(z.anisotropy=r);a[d]=z}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var f=this,g="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var l=a.shading.toLowerCase();"phong"===l?g="MeshPhongMaterial":
"basic"===l&&(g="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(h.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)h.transparent=a.transparent;void 0!==a.depthTest&&(h.depthTest=a.depthTest);void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite);void 0!==a.visible&&(h.visible=a.visible);void 0!==a.flipSided&&(h.side=THREE.BackSide);void 0!==a.doubleSided&&(h.side=THREE.DoubleSide);void 0!==a.wireframe&&(h.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===
a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors));a.colorDiffuse?h.color=e(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor);a.colorSpecular&&(h.specular=e(a.colorSpecular));a.colorAmbient&&(h.ambient=e(a.colorAmbient));a.colorEmissive&&(h.emissive=e(a.colorEmissive));a.transparency&&(h.opacity=a.transparency);a.specularCoef&&(h.shininess=a.specularCoef);a.mapDiffuse&&b&&d(h,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,
a.mapDiffuseAnisotropy);a.mapLight&&b&&d(h,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&d(h,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&d(h,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&d(h,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapAlpha&&
b&&d(h,"alphaMap",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);a.mapBumpScale&&(h.bumpScale=a.mapBumpScale);a.mapNormal?(g=THREE.ShaderLib.normalmap,l=THREE.UniformsUtils.clone(g.uniforms),l.tNormal.value=h.normalMap,a.mapNormalFactor&&l.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),h.map&&(l.tDiffuse.value=h.map,l.enableDiffuse.value=!0),h.specularMap&&(l.tSpecular.value=h.specularMap,l.enableSpecular.value=!0),h.lightMap&&(l.tAO.value=h.lightMap,
l.enableAO.value=!0),l.diffuse.value.setHex(h.color),l.specular.value.setHex(h.specular),l.ambient.value.setHex(h.ambient),l.shininess.value=h.shininess,void 0!==h.opacity&&(l.opacity.value=h.opacity),g=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:l,lights:!0,fog:!0}),h.transparent&&(g.transparent=!0)):g=new THREE[g](h);void 0!==a.DbgName&&(g.name=a.DbgName);return g}};
THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;b<c;b+=2){var d=this.handlers[b+1];if(this.handlers[b].test(a))return d}return null}};THREE.XHRLoader=function(a){this.cache=new THREE.Cache;this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=e.cache.get(a);void 0!==f?b&&b(f):(f=new XMLHttpRequest,f.open("GET",a,!0),f.addEventListener("load",function(c){e.cache.add(a,this.response);b&&b(this.response);e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(f.responseType=
this.responseType),f.send(null),e.manager.itemStart(a))},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.cache=new THREE.Cache;this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=e.cache.get(a);if(void 0!==f)b(f);else return f=document.createElement("img"),void 0!==b&&f.addEventListener("load",function(c){e.cache.add(a,this);b(this);e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.src=a,e.manager.itemStart(a),f},setCrossOrigin:function(a){this.crossOrigin=
a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);if(void 0!==h.metadata&&"scene"===h.metadata.type){console.error('THREE.JSONLoader: "'+b+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}h=a.parse(h,d);c(h.geometry,h.materials)}else console.error('THREE.JSONLoader: "'+b+'" seems to be unreachable or the file is empty.');
a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+b+'" ('+f.status+")");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.withCredentials=this.withCredentials;f.send(null)};
THREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,l,n,q,s,u,w,v,r,y,z,x=a.faces;q=a.vertices;var G=a.normals,D=a.colors,A=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&A++;for(d=0;d<A;d++)c.faceVertexUvs[d]=[]}l=0;for(n=q.length;l<n;)d=new THREE.Vector3,d.x=q[l++]*b,d.y=q[l++]*b,d.z=q[l++]*b,c.vertices.push(d);l=0;for(n=x.length;l<n;)if(b=x[l++],w=b&1,h=b&2,d=b&8,s=b&16,v=b&32,q=b&64,b&=128,w){w=new THREE.Face3;
w.a=x[l];w.b=x[l+1];w.c=x[l+3];r=new THREE.Face3;r.a=x[l+1];r.b=x[l+2];r.c=x[l+3];l+=4;h&&(h=x[l++],w.materialIndex=h,r.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<A;d++)for(y=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)u=x[l++],z=y[2*u],u=y[2*u+1],z=new THREE.Vector2(z,u),2!==g&&c.faceVertexUvs[d][h].push(z),0!==g&&c.faceVertexUvs[d][h+1].push(z);s&&(s=3*x[l++],w.normal.set(G[s++],G[s++],G[s]),r.normal.copy(w.normal));if(v)for(d=0;4>d;d++)s=3*x[l++],v=new THREE.Vector3(G[s++],
G[s++],G[s]),2!==d&&w.vertexNormals.push(v),0!==d&&r.vertexNormals.push(v);q&&(q=x[l++],q=D[q],w.color.setHex(q),r.color.setHex(q));if(b)for(d=0;4>d;d++)q=x[l++],q=D[q],2!==d&&w.vertexColors.push(new THREE.Color(q)),0!==d&&r.vertexColors.push(new THREE.Color(q));c.faces.push(w);c.faces.push(r)}else{w=new THREE.Face3;w.a=x[l++];w.b=x[l++];w.c=x[l++];h&&(h=x[l++],w.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<A;d++)for(y=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)u=x[l++],z=y[2*u],u=y[2*u+1],
z=new THREE.Vector2(z,u),c.faceVertexUvs[d][h].push(z);s&&(s=3*x[l++],w.normal.set(G[s++],G[s++],G[s]));if(v)for(d=0;3>d;d++)s=3*x[l++],v=new THREE.Vector3(G[s++],G[s++],G[s]),w.vertexNormals.push(v);q&&(q=x[l++],w.color.setHex(D[q]));if(b)for(d=0;3>d;d++)q=x[l++],w.vertexColors.push(new THREE.Color(D[q]));c.faces.push(w)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],
1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn("When skinning, number of vertices ("+c.vertices.length+"), skinIndices ("+c.skinIndices.length+
"), and skinWeights ("+c.skinWeights.length+") should match.");c.animation=a.animation;c.animations=a.animations})();(function(b){if(void 0!==a.morphTargets){var d,g,h,l,n,q;d=0;for(g=a.morphTargets.length;d<g;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],n=c.morphTargets[d].vertices,q=a.morphTargets[d].vertices,h=0,l=q.length;h<l;h+=3){var s=new THREE.Vector3;s.x=q[h]*b;s.y=q[h+1]*b;s.z=q[h+2]*b;n.push(s)}}if(void 0!==a.morphColors)for(d=
0,g=a.morphColors.length;d<g;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],l=c.morphColors[d].colors,n=a.morphColors[d].colors,b=0,h=n.length;b<h;b+=3)q=new THREE.Color(16755200),q.setRGB(n[b],n[b+1],n[b+2]),l.push(q)})(d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,materials:d}};
THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++};this.itemEnd=function(a){e++;if(void 0!==d.onProgress)d.onProgress(a,e,f);if(e===f&&void 0!==d.onLoad)d.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader;f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.attributes,d;for(d in c){var e=c[d];b.attributes[d]={itemSize:e.itemSize,array:new self[e.type](e.array)}}c=a.offsets;void 0!==c&&(b.offsets=JSON.parse(JSON.stringify(c)));a=a.boundingSphere;
void 0!==a&&(b.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==a.center?a.center:[0,0,0]),a.radius));return b}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader;f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];void 0!==a.color&&b.color.setHex(a.color);void 0!==a.ambient&&b.ambient.setHex(a.ambient);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&
(b.shininess=a.shininess);void 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.wireframe&&(b.wireframe=a.wireframe);if(void 0!==a.materials)for(var c=
0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin);f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials);return this.parseObject(a.object,b,c)},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,
e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case "PlaneGeometry":g=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case "BoxGeometry":case "CubeGeometry":g=new THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case "CircleGeometry":g=new THREE.CircleGeometry(h.radius,h.segments);break;case "CylinderGeometry":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);
break;case "SphereGeometry":g=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case "IcosahedronGeometry":g=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case "TorusGeometry":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case "TorusKnotGeometry":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case "BufferGeometry":g=
d.parse(h.data);break;case "Geometry":g=c.parse(h.data).geometry}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a){var b={};if(void 0!==a)for(var c=new THREE.MaterialLoader,d=0,e=a.length;d<e;d++){var f=a[d],g=c.parse(f);g.uuid=f.uuid;void 0!==f.name&&(g.name=f.name);b[f.uuid]=g}return b},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;switch(b.type){case "Scene":e=new THREE.Scene;break;case "PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,
b.aspect,b.near,b.far);break;case "OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "AmbientLight":e=new THREE.AmbientLight(b.color);break;case "DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case "PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance);break;case "SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case "HemisphereLight":e=new THREE.HemisphereLight(b.color,
b.groundColor,b.intensity);break;case "Mesh":e=c[b.geometry];var f=d[b.material];void 0===e&&console.error("THREE.ObjectLoader: Undefined geometry "+b.geometry);void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material);e=new THREE.Mesh(e,f);break;case "Sprite":f=d[b.material];void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material);e=new THREE.Sprite(f);break;default:e=new THREE.Object3D}e.uuid=b.uuid;void 0!==b.name&&(e.name=b.name);void 0!==b.matrix?
(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale));void 0!==b.visible&&(e.visible=b.visible);void 0!==b.userData&&(e.userData=b.userData);if(void 0!==b.children)for(var g in b.children)e.add(this.parseObject(b.children[g],c,d));return e}}()};THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=new THREE.ImageLoader(this.manager);e.setCrossOrigin(this.crossOrigin);e.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)},c,d)},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;
a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);
THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;
a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;
a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a};THREE.PointCloudMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=function(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ParticleSystemMaterial=function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=
!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};
THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};THREE.SpriteCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(a,c){};this.setValues(a)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteCanvasMaterial.prototype.clone=function(){var a=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;
THREE.Texture=function(a,b,c,d,e,f,g,h,l){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==l?l:1;this.format=void 0!==
g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping;
THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=
this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,l){THREE.Texture.call(this,a,b,c,d,e,f,g,h,l);this.images=a};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CubeTexture.clone=function(a){void 0===a&&(a=new THREE.CubeTexture);THREE.Texture.prototype.clone.call(this,a);a.images=this.images;return a};THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,l,n,q){THREE.Texture.call(this,null,f,g,h,l,n,d,e,q);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,l,n,q){THREE.Texture.call(this,null,f,g,h,l,n,d,e,q);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};
THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()});this.sortParticles=!1};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){var e=this,f=e.geometry,g=c.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==b.isIntersectionBox(f.boundingBox)){var h=g/((this.scale.x+this.scale.y+this.scale.z)/3),l=new THREE.Vector3,g=function(a,f){var g=b.distanceToPoint(a);if(g<h){var l=b.closestPointToPoint(a);l.applyMatrix4(e.matrixWorld);var n=c.ray.origin.distanceTo(l);
d.push({distance:n,distanceToRay:g,point:l.clone(),index:f,face:null,object:e})}};if(f instanceof THREE.BufferGeometry){var n=f.attributes,q=n.position.array;if(void 0!==n.index){var n=n.index.array,s=f.offsets;0===s.length&&(s=[{start:0,count:n.length,index:0}]);for(var u=0,w=s.length;u<w;++u)for(var v=s[u].start,r=s[u].index,f=v,v=v+s[u].count;f<v;f++){var y=r+n[f];l.set(q[3*y],q[3*y+1],q[3*y+2]);g(l,y)}}else for(n=q.length/3,f=0;f<n;f++)l.set(q[3*f],q[3*f+1],q[3*f+2]),g(l,f)}else for(l=this.geometry.vertices,
f=0;f<l.length;f++)g(l[f],f)}}}();THREE.PointCloud.prototype.clone=function(a){void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(a,b)};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==d.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(d.ray).applyMatrix4(a),g instanceof THREE.Geometry))for(var g=g.vertices,h=g.length,l=new THREE.Vector3,n=new THREE.Vector3,q=this.type===THREE.LineStrip?
1:2,s=0;s<h-1;s+=q)if(!(b.distanceSqToSegment(g[s],g[s+1],n,l)>f)){var u=b.origin.distanceTo(n);u<d.near||u>d.far||e.push({distance:u,point:l.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g,h){var l=this.geometry;null===l.boundingSphere&&l.computeBoundingSphere();c.copy(l.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==g.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===l.boundingBox||!1!==b.isIntersectionBox(l.boundingBox)))if(l instanceof THREE.BufferGeometry){var n=
this.material;if(void 0!==n){var q=l.attributes,s,u,w=g.precision;if(void 0!==q.index){var v=q.index.array,r=q.position.array,y=l.offsets;0===y.length&&(y=[{start:0,count:v.length,index:0}]);for(var z=0,x=y.length;z<x;++z)for(var q=y[z].start,G=y[z].index,l=q,D=q+y[z].count;l<D;l+=3){q=G+v[l];s=G+v[l+1];u=G+v[l+2];d.set(r[3*q],r[3*q+1],r[3*q+2]);e.set(r[3*s],r[3*s+1],r[3*s+2]);f.set(r[3*u],r[3*u+1],r[3*u+2]);var A=n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==
THREE.DoubleSide);if(null!==A){A.applyMatrix4(this.matrixWorld);var F=g.ray.origin.distanceTo(A);F<w||F<g.near||F>g.far||h.push({distance:F,point:A,indices:[q,s,u],face:null,faceIndex:null,object:this})}}}else for(r=q.position.array,v=l=0,D=r.length;l<D;l+=3,v+=9)q=l,s=l+1,u=l+2,d.set(r[v],r[v+1],r[v+2]),e.set(r[v+3],r[v+4],r[v+5]),f.set(r[v+6],r[v+7],r[v+8]),A=n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==THREE.DoubleSide),null!==A&&(A.applyMatrix4(this.matrixWorld),
F=g.ray.origin.distanceTo(A),F<w||F<g.near||F>g.far||h.push({distance:F,point:A,indices:[q,s,u],face:null,faceIndex:null,object:this}))}}else if(l instanceof THREE.Geometry)for(v=this.material instanceof THREE.MeshFaceMaterial,r=!0===v?this.material.materials:null,w=g.precision,y=l.vertices,z=0,x=l.faces.length;z<x;z++)if(G=l.faces[z],n=!0===v?r[G.materialIndex]:this.material,void 0!==n){q=y[G.a];s=y[G.b];u=y[G.c];if(!0===n.morphTargets){A=l.morphTargets;F=this.morphTargetInfluences;d.set(0,0,0);
e.set(0,0,0);f.set(0,0,0);for(var D=0,L=A.length;D<L;D++){var C=F[D];if(0!==C){var B=A[D].vertices;d.x+=(B[G.a].x-q.x)*C;d.y+=(B[G.a].y-q.y)*C;d.z+=(B[G.a].z-q.z)*C;e.x+=(B[G.b].x-s.x)*C;e.y+=(B[G.b].y-s.y)*C;e.z+=(B[G.b].z-s.z)*C;f.x+=(B[G.c].x-u.x)*C;f.y+=(B[G.c].y-u.y)*C;f.z+=(B[G.c].z-u.z)*C}}d.add(q);e.add(s);f.add(u);q=d;s=e;u=f}A=n.side===THREE.BackSide?b.intersectTriangle(u,s,q,!0):b.intersectTriangle(q,s,u,n.side!==THREE.DoubleSide);null!==A&&(A.applyMatrix4(this.matrixWorld),F=g.ray.origin.distanceTo(A),
F<w||F<g.near||F>g.far||h.push({distance:F,point:A,face:G,faceIndex:z,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.updateMatrixWorld=function(a){THREE.Object3D.prototype.updateMatrixWorld.call(this,a);this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};
THREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),
this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};
THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};
THREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};
THREE.Skeleton.prototype.update=function(){for(var a=new THREE.Matrix4,b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e,f,g,h=0,l=this.geometry.bones.length;h<l;++h)d=this.geometry.bones[h],e=d.pos,f=d.rotq,g=d.scl,b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void 0!==g?b.scale.set(g[0],g[1],g[2]):b.scale.set(1,1,1);h=0;for(l=
this.geometry.bones.length;h<l;++h)d=this.geometry.bones[h],-1!==d.parent?a[d.parent].add(a[h]):this.add(a[h])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};
THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)};
THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;e<f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};
THREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();
THREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,a);for(var b=0,c=this.objects.length;b<c;b++){var d=this.objects[b].object.clone();d.visible=0===b;a.addLevel(d,this.objects[b].distance)}return a};
THREE.Sprite=function(){var a=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),b=new THREE.BufferGeometry;b.addAttribute("position",new THREE.BufferAttribute(a,3));return function(a){THREE.Object3D.call(this);this.geometry=b;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);
THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceToPoint(a);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}this.dispatchEvent({type:"objectAdded",object:a});a.dispatchEvent({type:"addedToScene",scene:this});for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1);if(a.shadowCascadeArray)for(b=0;b<a.shadowCascadeArray.length;b++)this.__removeObject(a.shadowCascadeArray[b])}else a instanceof THREE.Camera||(this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1));this.dispatchEvent({type:"objectRemoved",object:a});a.dispatchEvent({type:"removedFromScene",scene:this});for(b=
0;b<a.children.length;b++)this.__removeObject(a.children[b])};THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};
THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.CanvasRenderer=function(a){function b(a,b,c,d){n(b);q(c);s(d);u(a.getStyle());R.stroke();ua.expandByScalar(2*b)}function c(a){w(a.getStyle());R.fill()}function d(a){e(a.target)}function e(a){if(!(a instanceof THREE.CompressedTexture)){var b=a.wrapS===THREE.RepeatWrapping,c=a.wrapT===THREE.RepeatWrapping,d=a.image,e=document.createElement("canvas");e.width=d.width;e.height=d.height;var f=e.getContext("2d");f.setTransform(1,0,0,-1,0,d.height);f.drawImage(d,0,0);Fa[a.id]=R.createPattern(e,!0===
b&&!0===c?"repeat":!0===b&&!1===c?"repeat-x":!1===b&&!0===c?"repeat-y":"no-repeat")}}function f(a,b,c,f,g,h,l,n,q,u,s,v,r){if(!(r instanceof THREE.DataTexture)){!1===r.hasEventListener("update",d)&&(void 0!==r.image&&0<r.image.width&&e(r),r.addEventListener("update",d));var p=Fa[r.id];if(void 0!==p){w(p);var p=r.offset.x/r.repeat.x,z=r.offset.y/r.repeat.y,x=r.image.width*r.repeat.x;r=r.image.height*r.repeat.y;l=(l+p)*x;n=(n+z)*r;c-=a;f-=b;g-=a;h-=b;q=(q+p)*x-l;u=(u+z)*r-n;s=(s+p)*x-l;v=(v+z)*r-n;
r=q*v-s*u;0!==r&&(p=1/r,r=(v*c-u*g)*p,u=(v*f-u*h)*p,c=(q*g-s*c)*p,f=(q*h-s*f)*p,a=a-r*l-c*n,b=b-u*l-f*n,R.save(),R.transform(r,u,c,f,a,b),R.fill(),R.restore())}else w("rgba(0,0,0,1)"),R.fill()}}function g(a,b,c){var d=b.x-a.x,e=b.y-a.y,f=d*d+e*e;0!==f&&(c/=Math.sqrt(f),d*=c,e*=c,b.x+=d,b.y+=e,a.x-=d,a.y-=e)}function h(a){T!==a&&(T=R.globalAlpha=a)}function l(a){O!==a&&(a===THREE.NormalBlending?R.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?R.globalCompositeOperation="lighter":
a===THREE.SubtractiveBlending&&(R.globalCompositeOperation="darker"),O=a)}function n(a){V!==a&&(V=R.lineWidth=a)}function q(a){Y!==a&&(Y=R.lineCap=a)}function s(a){Z!==a&&(Z=R.lineJoin=a)}function u(a){U!==a&&(U=R.strokeStyle=a)}function w(a){E!==a&&(E=R.fillStyle=a)}function v(a){K.length!==a.length&&(R.setLineDash(a),K=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var r=THREE.Math.smoothstep;a=a||{};var y=this,z,x,G,D=new THREE.Projector,A=void 0!==a.canvas?a.canvas:document.createElement("canvas"),
F=A.width,L=A.height,C=Math.floor(F/2),B=Math.floor(L/2),N=0,Q=0,ea=F,S=L,R=A.getContext("2d",{alpha:!0===a.alpha}),M=new THREE.Color(0),H=0,T=1,O=0,U=null,E=null,V=null,Y=null,Z=null,K=[],ra,ca,$,W;new THREE.RenderableVertex;new THREE.RenderableVertex;var Ba,Ha,Da,Ca,Ra,Sa,J=new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;new THREE.Color;var Ea=new THREE.Color,ab=new THREE.Color,bb=new THREE.Color,Fa={},fa,oa,ta,xa,ma,Ia,ya,Na=new THREE.Box2,da=new THREE.Box2,ua=new THREE.Box2,Ga=
new THREE.Color,Ta=new THREE.Color,fb=new THREE.Color,Ja=new THREE.Vector3,Aa=new THREE.Vector3,pa=new THREE.Vector3,Ma=new THREE.Matrix3;void 0===R.setLineDash&&(R.setLineDash=function(){});this.domElement=A;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=
function(a,b,c){F=a*this.devicePixelRatio;L=b*this.devicePixelRatio;A.width=F;A.height=L;C=Math.floor(F/2);B=Math.floor(L/2);!1!==c&&(A.style.width=a+"px",A.style.height=b+"px");Na.min.set(-C,-B);Na.max.set(C,B);da.min.set(-C,-B);da.max.set(C,B);T=1;O=0;Z=Y=V=E=U=null;this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){N=a*this.devicePixelRatio;Q=b*this.devicePixelRatio;ea=c*this.devicePixelRatio;S=d*this.devicePixelRatio};this.setScissor=function(){};this.enableScissorTest=function(){};
this.setClearColor=function(a,b){M.set(a);H=void 0!==b?b:1;da.min.set(-C,-B);da.max.set(C,B)};this.setClearColorHex=function(a,b){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,b)};this.getClearColor=function(){return M};this.getClearAlpha=function(){return H};this.getMaxAnisotropy=function(){return 0};this.clear=function(){!1===da.empty()&&(da.intersect(Na),da.expandByScalar(2),da.min.x+=C,da.min.y=-da.min.y+B,da.max.x+=
C,da.max.y=-da.max.y+B,1>H&&R.clearRect(da.min.x|0,da.min.y|0,da.max.x-da.min.x|0,da.max.y-da.min.y|0),0<H&&(l(THREE.NormalBlending),h(1),w("rgba("+Math.floor(255*M.r)+","+Math.floor(255*M.g)+","+Math.floor(255*M.b)+","+H+")"),R.fillRect(da.min.x|0,da.min.y|0,da.max.x-da.min.x|0,da.max.y-da.min.y|0)),da.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(a,A){if(!1===A instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
else{!0===this.autoClear&&this.clear();y.info.render.vertices=0;y.info.render.faces=0;R.setTransform(ea/F,0,0,-S/L,N,L-Q);R.translate(C,B);z=D.projectScene(a,A,this.sortObjects,this.sortElements);x=z.elements;G=z.lights;ra=A;Ma.getNormalMatrix(A.matrixWorldInverse);Ga.setRGB(0,0,0);Ta.setRGB(0,0,0);fb.setRGB(0,0,0);for(var O=0,T=G.length;O<T;O++){var H=G[O],K=H.color;H instanceof THREE.AmbientLight?Ga.add(K):H instanceof THREE.DirectionalLight?Ta.add(K):H instanceof THREE.PointLight&&fb.add(K)}O=
0;for(T=x.length;O<T;O++){var M=x[O],E=M.material;if(void 0!==E&&0!==E.opacity){ua.makeEmpty();if(M instanceof THREE.RenderableSprite){ca=M;ca.x*=C;ca.y*=B;var H=ca,U=M,K=E;h(K.opacity);l(K.blending);var ha=U.scale.x*C,U=U.scale.y*B,M=.5*Math.sqrt(ha*ha+U*U);ua.min.set(H.x-M,H.y-M);ua.max.set(H.x+M,H.y+M);if(K instanceof THREE.SpriteMaterial){var ga=K.map;if(null!==ga&&void 0!==ga.image){!1===ga.hasEventListener("update",d)&&(0<ga.image.width&&e(ga),ga.addEventListener("update",d));M=Fa[ga.id];void 0!==
M?w(M):w("rgba( 0, 0, 0, 1 )");var V=ga.image,M=V.width*ga.offset.x,E=V.height*ga.offset.y,Y=V.width*ga.repeat.x,ga=V.height*ga.repeat.y,V=ha/Y,p=U/ga;R.save();R.translate(H.x,H.y);0!==K.rotation&&R.rotate(K.rotation);R.translate(-ha/2,-U/2);R.scale(V,p);R.translate(-M,-E);R.fillRect(M,E,Y,ga)}else w(K.color.getStyle()),R.save(),R.translate(H.x,H.y),0!==K.rotation&&R.rotate(K.rotation),R.scale(ha,-U),R.fillRect(-.5,-.5,1,1);R.restore()}else K instanceof THREE.SpriteCanvasMaterial&&(u(K.color.getStyle()),
w(K.color.getStyle()),R.save(),R.translate(H.x,H.y),0!==K.rotation&&R.rotate(K.rotation),R.scale(ha,U),K.program(R),R.restore())}else if(M instanceof THREE.RenderableLine){if(ca=M.v1,$=M.v2,ca.positionScreen.x*=C,ca.positionScreen.y*=B,$.positionScreen.x*=C,$.positionScreen.y*=B,ua.setFromPoints([ca.positionScreen,$.positionScreen]),!0===Na.isIntersectionBox(ua))if(H=ca,K=$,ha=M,U=E,h(U.opacity),l(U.blending),R.beginPath(),R.moveTo(H.positionScreen.x,H.positionScreen.y),R.lineTo(K.positionScreen.x,
K.positionScreen.y),U instanceof THREE.LineBasicMaterial){n(U.linewidth);q(U.linecap);s(U.linejoin);if(U.vertexColors!==THREE.VertexColors)u(U.color.getStyle());else if(M=ha.vertexColors[0].getStyle(),ha=ha.vertexColors[1].getStyle(),M===ha)u(M);else{try{var Z=R.createLinearGradient(H.positionScreen.x,H.positionScreen.y,K.positionScreen.x,K.positionScreen.y);Z.addColorStop(0,M);Z.addColorStop(1,ha)}catch(Ab){Z=M}u(Z)}R.stroke();ua.expandByScalar(2*U.linewidth)}else U instanceof THREE.LineDashedMaterial&&
(n(U.linewidth),q(U.linecap),s(U.linejoin),u(U.color.getStyle()),v([U.dashSize,U.gapSize]),R.stroke(),ua.expandByScalar(2*U.linewidth),v([]))}else if(M instanceof THREE.RenderableFace){ca=M.v1;$=M.v2;W=M.v3;if(-1>ca.positionScreen.z||1<ca.positionScreen.z)continue;if(-1>$.positionScreen.z||1<$.positionScreen.z)continue;if(-1>W.positionScreen.z||1<W.positionScreen.z)continue;ca.positionScreen.x*=C;ca.positionScreen.y*=B;$.positionScreen.x*=C;$.positionScreen.y*=B;W.positionScreen.x*=C;W.positionScreen.y*=
B;0<E.overdraw&&(g(ca.positionScreen,$.positionScreen,E.overdraw),g($.positionScreen,W.positionScreen,E.overdraw),g(W.positionScreen,ca.positionScreen,E.overdraw));ua.setFromPoints([ca.positionScreen,$.positionScreen,W.positionScreen]);if(!0===Na.isIntersectionBox(ua)){K=ca;ha=$;U=W;H=E;y.info.render.vertices+=3;y.info.render.faces++;h(H.opacity);l(H.blending);Ba=K.positionScreen.x;Ha=K.positionScreen.y;Da=ha.positionScreen.x;Ca=ha.positionScreen.y;Ra=U.positionScreen.x;Sa=U.positionScreen.y;var E=
Ba,Y=Ha,ga=Da,V=Ca,p=Ra,Wa=Sa;R.beginPath();R.moveTo(E,Y);R.lineTo(ga,V);R.lineTo(p,Wa);R.closePath();if((H instanceof THREE.MeshLambertMaterial||H instanceof THREE.MeshPhongMaterial)&&null===H.map){Ea.copy(H.color);ab.copy(H.emissive);H.vertexColors===THREE.FaceColors&&Ea.multiply(M.color);J.copy(Ga);Aa.copy(K.positionWorld).add(ha.positionWorld).add(U.positionWorld).divideScalar(3);K=Aa;ha=M.normalModel;U=J;M=0;for(E=G.length;M<E;M++)Y=G[M],bb.copy(Y.color),Y instanceof THREE.DirectionalLight?(ga=
Ja.setFromMatrixPosition(Y.matrixWorld).normalize(),V=ha.dot(ga),0>=V||(V*=Y.intensity,U.add(bb.multiplyScalar(V)))):Y instanceof THREE.PointLight&&(ga=Ja.setFromMatrixPosition(Y.matrixWorld),V=ha.dot(Ja.subVectors(ga,K).normalize()),0>=V||(V*=0==Y.distance?1:1-Math.min(K.distanceTo(ga)/Y.distance,1),0!=V&&(V*=Y.intensity,U.add(bb.multiplyScalar(V)))));J.multiply(Ea).add(ab);!0===H.wireframe?b(J,H.wireframeLinewidth,H.wireframeLinecap,H.wireframeLinejoin):c(J)}else H instanceof THREE.MeshBasicMaterial||
H instanceof THREE.MeshLambertMaterial||H instanceof THREE.MeshPhongMaterial?null!==H.map?H.map.mapping instanceof THREE.UVMapping&&(fa=M.uvs,f(Ba,Ha,Da,Ca,Ra,Sa,fa[0].x,fa[0].y,fa[1].x,fa[1].y,fa[2].x,fa[2].y,H.map)):null!==H.envMap?H.envMap.mapping instanceof THREE.SphericalReflectionMapping?(pa.copy(M.vertexNormalsModel[0]).applyMatrix3(Ma),oa=.5*pa.x+.5,ta=.5*pa.y+.5,pa.copy(M.vertexNormalsModel[1]).applyMatrix3(Ma),xa=.5*pa.x+.5,ma=.5*pa.y+.5,pa.copy(M.vertexNormalsModel[2]).applyMatrix3(Ma),
Ia=.5*pa.x+.5,ya=.5*pa.y+.5,f(Ba,Ha,Da,Ca,Ra,Sa,oa,ta,xa,ma,Ia,ya,H.envMap)):H.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(pa.copy(M.vertexNormalsModel[0]).applyMatrix3(Ma),oa=-.5*pa.x+.5,ta=-.5*pa.y+.5,pa.copy(M.vertexNormalsModel[1]).applyMatrix3(Ma),xa=-.5*pa.x+.5,ma=-.5*pa.y+.5,pa.copy(M.vertexNormalsModel[2]).applyMatrix3(Ma),Ia=-.5*pa.x+.5,ya=-.5*pa.y+.5,f(Ba,Ha,Da,Ca,Ra,Sa,oa,ta,xa,ma,Ia,ya,H.envMap)):(J.copy(H.color),H.vertexColors===THREE.FaceColors&&J.multiply(M.color),
!0===H.wireframe?b(J,H.wireframeLinewidth,H.wireframeLinecap,H.wireframeLinejoin):c(J)):(H instanceof THREE.MeshDepthMaterial?J.r=J.g=J.b=1-r(K.positionScreen.z*K.positionScreen.w,ra.near,ra.far):H instanceof THREE.MeshNormalMaterial?(pa.copy(M.normalModel).applyMatrix3(Ma),J.setRGB(pa.x,pa.y,pa.z).multiplyScalar(.5).addScalar(.5)):J.setRGB(1,1,1),!0===H.wireframe?b(J,H.wireframeLinewidth,H.wireframeLinecap,H.wireframeLinejoin):c(J))}}da.union(ua)}}R.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={};THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";
THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;";
THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";
THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif";
THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";
THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";
THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif";
THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";
THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n";
THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif";
THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";
THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";
THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif";
THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;";
THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";
THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";
THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif";
THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif";
THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";
THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif";
THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif";
THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",
value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},
hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},
opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,
{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},
specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,
THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,
"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",
value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},
specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}",
THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\t\tdisplacedPosition = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\tdisplacedPosition = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",
THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=p.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){var c=b.geometry,g=a.faces3,h=3*g.length,l=1*g.length,n=3*g.length,g=d(b,a),q=f(g),u=e(g),r=g.vertexColors?g.vertexColors:!1;a.__vertexArray=new Float32Array(3*h);u&&(a.__normalArray=new Float32Array(3*h));c.hasTangents&&(a.__tangentArray=new Float32Array(4*h));r&&(a.__colorArray=new Float32Array(3*h));q&&(0<c.faceVertexUvs.length&&(a.__uvArray=new Float32Array(2*h)),1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*h)));b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&
(a.__skinIndexArray=new Float32Array(4*h),a.__skinWeightArray=new Float32Array(4*h));c=null!==Hb&&21845<l?Uint32Array:Uint16Array;a.__typeArray=c;a.__faceArray=new c(3*l);a.__lineArray=new c(2*n);if(a.numMorphTargets)for(a.__morphTargetsArrays=[],c=0,q=a.numMorphTargets;c<q;c++)a.__morphTargetsArrays.push(new Float32Array(3*h));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],c=0,q=a.numMorphNormals;c<q;c++)a.__morphNormalsArrays.push(new Float32Array(3*h));a.__webglFaceCount=3*l;a.__webglLineCount=
2*n;if(g.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var s in g.attributes){var l=g.attributes[s],n={},v;for(v in l)n[v]=l[v];if(!n.__webglInitialized||n.createUniqueBuffers)n.__webglInitialized=!0,c=1,"v2"===n.type?c=2:"v3"===n.type?c=3:"v4"===n.type?c=4:"c"===n.type&&(c=3),n.size=c,n.array=new Float32Array(h*c),n.buffer=p.createBuffer(),n.buffer.belongsToAttribute=s,l.needsUpdate=!0,n.__original=l;a.__webglCustomAttributesList.push(n)}}a.__inittedArrays=
!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function e(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a instanceof THREE.ShaderMaterial?!0:!1}function g(a){for(var b in a.attributes){var c=
"index"===b?p.ELEMENT_ARRAY_BUFFER:p.ARRAY_BUFFER,d=a.attributes[b];d.buffer=p.createBuffer();p.bindBuffer(c,d.buffer);p.bufferData(c,d.array,p.STATIC_DRAW)}}function h(a,b,c,d){for(var e in b){var f=b[e],g=c[e];if(0<=f)if(g){var h=g.itemSize;p.bindBuffer(p.ARRAY_BUFFER,g.buffer);n(f);p.vertexAttribPointer(f,h,p.FLOAT,!1,0,d*h*4)}else a.defaultAttributeValues&&(2===a.defaultAttributeValues[e].length?p.vertexAttrib2fv(f,a.defaultAttributeValues[e]):3===a.defaultAttributeValues[e].length&&p.vertexAttrib3fv(f,
a.defaultAttributeValues[e]))}q()}function l(){for(var a=0,b=sb.length;a<b;a++)sb[a]=0}function n(a){sb[a]=1;0===wb[a]&&(p.enableVertexAttribArray(a),wb[a]=1)}function q(){for(var a=0,b=wb.length;a<b;a++)wb[a]!==sb[a]&&(p.disableVertexAttribArray(a),wb[a]=0)}function s(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function u(a,b){return a.z!==b.z?a.z-b.z:a.id-b.id}function w(a,b){return b[0]-a[0]}function v(a,b,h){if(!1!==b.visible){var l=a.__webglObjects[b.id];if(l&&(!1===b.frustumCulled||!0===mc.intersectsObject(b))){var n=
b.geometry,q,u,r;if(n instanceof THREE.BufferGeometry){var s=p.DYNAMIC_DRAW,z=n.attributes,x,y;for(x in z)y=z[x],y.needsUpdate&&("index"===x?(p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,y.buffer),p.bufferData(p.ELEMENT_ARRAY_BUFFER,y.array,s)):(p.bindBuffer(p.ARRAY_BUFFER,y.buffer),p.bufferData(p.ARRAY_BUFFER,y.array,s)),y.needsUpdate=!1)}else if(b instanceof THREE.Mesh){if(n.buffersNeedUpdate||n.groupsNeedUpdate)n instanceof THREE.BufferGeometry?g(n):b instanceof THREE.Mesh&&G(a,b,n);for(var D=0,C=n.geometryGroupsList.length;D<
C;D++)if(q=n.geometryGroupsList[D],r=d(b,q),(n.buffersNeedUpdate||n.groupsNeedUpdate)&&c(q,b),u=r.attributes&&A(r),n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||u){var B=q,H=b,L=p.DYNAMIC_DRAW,M=!n.dynamic,O=r;if(B.__inittedArrays){var N=e(O),K=O.vertexColors?O.vertexColors:!1,T=f(O),R=N===THREE.SmoothShading,E=void 0,Q=void 0,S=void 0,W=void 0,U=void 0,ea=void 0,V=void 0,ca=void 0,$=void 0,Y=void 0,
Ca=void 0,ja=void 0,ka=void 0,la=void 0,Ha=void 0,da=void 0,ga=void 0,Ba=void 0,X=void 0,fa=void 0,Z=void 0,Ea=void 0,Da=void 0,oa=void 0,pa=void 0,ra=void 0,ua=void 0,xa=void 0,ya=void 0,ma=void 0,Ia=void 0,Ga=void 0,Ja=void 0,ab=void 0,ta=void 0,Na=void 0,Aa=void 0,Fa=void 0,Ma=void 0,Ta=void 0,gb=0,hb=0,Va=0,bb=0,Wa=0,jb=0,Xa=0,xb=0,cb=0,za=0,Ka=0,P=0,Ua=void 0,kb=B.__vertexArray,fb=B.__uvArray,ib=B.__uv2Array,Bb=B.__normalArray,Ya=B.__tangentArray,lb=B.__colorArray,Za=B.__skinIndexArray,$a=B.__skinWeightArray,
wb=B.__morphTargetsArrays,zb=B.__morphNormalsArrays,vb=B.__webglCustomAttributesList,I=void 0,sb=B.__faceArray,Cb=B.__lineArray,Oa=H.geometry,Gb=Oa.elementsNeedUpdate,Ab=Oa.uvsNeedUpdate,Hb=Oa.normalsNeedUpdate,Rb=Oa.tangentsNeedUpdate,Sb=Oa.colorsNeedUpdate,Vb=Oa.morphTargetsNeedUpdate,oc=Oa.vertices,na=B.faces3,mb=Oa.faces,Kb=Oa.faceVertexUvs[0],Lb=Oa.faceVertexUvs[1],pc=Oa.skinIndices,Yb=Oa.skinWeights,Zb=Oa.morphTargets,Mb=Oa.morphNormals;if(Oa.verticesNeedUpdate){E=0;for(Q=na.length;E<Q;E++)W=
mb[na[E]],ja=oc[W.a],ka=oc[W.b],la=oc[W.c],kb[hb]=ja.x,kb[hb+1]=ja.y,kb[hb+2]=ja.z,kb[hb+3]=ka.x,kb[hb+4]=ka.y,kb[hb+5]=ka.z,kb[hb+6]=la.x,kb[hb+7]=la.y,kb[hb+8]=la.z,hb+=9;p.bindBuffer(p.ARRAY_BUFFER,B.__webglVertexBuffer);p.bufferData(p.ARRAY_BUFFER,kb,L)}if(Vb)for(ta=0,Na=Zb.length;ta<Na;ta++){E=Ka=0;for(Q=na.length;E<Q;E++)Ma=na[E],W=mb[Ma],ja=Zb[ta].vertices[W.a],ka=Zb[ta].vertices[W.b],la=Zb[ta].vertices[W.c],Aa=wb[ta],Aa[Ka]=ja.x,Aa[Ka+1]=ja.y,Aa[Ka+2]=ja.z,Aa[Ka+3]=ka.x,Aa[Ka+4]=ka.y,Aa[Ka+
5]=ka.z,Aa[Ka+6]=la.x,Aa[Ka+7]=la.y,Aa[Ka+8]=la.z,O.morphNormals&&(R?(Ta=Mb[ta].vertexNormals[Ma],Ba=Ta.a,X=Ta.b,fa=Ta.c):fa=X=Ba=Mb[ta].faceNormals[Ma],Fa=zb[ta],Fa[Ka]=Ba.x,Fa[Ka+1]=Ba.y,Fa[Ka+2]=Ba.z,Fa[Ka+3]=X.x,Fa[Ka+4]=X.y,Fa[Ka+5]=X.z,Fa[Ka+6]=fa.x,Fa[Ka+7]=fa.y,Fa[Ka+8]=fa.z),Ka+=9;p.bindBuffer(p.ARRAY_BUFFER,B.__webglMorphTargetsBuffers[ta]);p.bufferData(p.ARRAY_BUFFER,wb[ta],L);O.morphNormals&&(p.bindBuffer(p.ARRAY_BUFFER,B.__webglMorphNormalsBuffers[ta]),p.bufferData(p.ARRAY_BUFFER,zb[ta],
L))}if(Yb.length){E=0;for(Q=na.length;E<Q;E++)W=mb[na[E]],oa=Yb[W.a],pa=Yb[W.b],ra=Yb[W.c],$a[za]=oa.x,$a[za+1]=oa.y,$a[za+2]=oa.z,$a[za+3]=oa.w,$a[za+4]=pa.x,$a[za+5]=pa.y,$a[za+6]=pa.z,$a[za+7]=pa.w,$a[za+8]=ra.x,$a[za+9]=ra.y,$a[za+10]=ra.z,$a[za+11]=ra.w,ua=pc[W.a],xa=pc[W.b],ya=pc[W.c],Za[za]=ua.x,Za[za+1]=ua.y,Za[za+2]=ua.z,Za[za+3]=ua.w,Za[za+4]=xa.x,Za[za+5]=xa.y,Za[za+6]=xa.z,Za[za+7]=xa.w,Za[za+8]=ya.x,Za[za+9]=ya.y,Za[za+10]=ya.z,Za[za+11]=ya.w,za+=12;0<za&&(p.bindBuffer(p.ARRAY_BUFFER,
B.__webglSkinIndicesBuffer),p.bufferData(p.ARRAY_BUFFER,Za,L),p.bindBuffer(p.ARRAY_BUFFER,B.__webglSkinWeightsBuffer),p.bufferData(p.ARRAY_BUFFER,$a,L))}if(Sb&&K){E=0;for(Q=na.length;E<Q;E++)W=mb[na[E]],V=W.vertexColors,ca=W.color,3===V.length&&K===THREE.VertexColors?(Z=V[0],Ea=V[1],Da=V[2]):Da=Ea=Z=ca,lb[cb]=Z.r,lb[cb+1]=Z.g,lb[cb+2]=Z.b,lb[cb+3]=Ea.r,lb[cb+4]=Ea.g,lb[cb+5]=Ea.b,lb[cb+6]=Da.r,lb[cb+7]=Da.g,lb[cb+8]=Da.b,cb+=9;0<cb&&(p.bindBuffer(p.ARRAY_BUFFER,B.__webglColorBuffer),p.bufferData(p.ARRAY_BUFFER,
lb,L))}if(Rb&&Oa.hasTangents){E=0;for(Q=na.length;E<Q;E++)W=mb[na[E]],$=W.vertexTangents,Ha=$[0],da=$[1],ga=$[2],Ya[Xa]=Ha.x,Ya[Xa+1]=Ha.y,Ya[Xa+2]=Ha.z,Ya[Xa+3]=Ha.w,Ya[Xa+4]=da.x,Ya[Xa+5]=da.y,Ya[Xa+6]=da.z,Ya[Xa+7]=da.w,Ya[Xa+8]=ga.x,Ya[Xa+9]=ga.y,Ya[Xa+10]=ga.z,Ya[Xa+11]=ga.w,Xa+=12;p.bindBuffer(p.ARRAY_BUFFER,B.__webglTangentBuffer);p.bufferData(p.ARRAY_BUFFER,Ya,L)}if(Hb&&N){E=0;for(Q=na.length;E<Q;E++)if(W=mb[na[E]],U=W.vertexNormals,ea=W.normal,3===U.length&&R)for(ma=0;3>ma;ma++)Ga=U[ma],
Bb[jb]=Ga.x,Bb[jb+1]=Ga.y,Bb[jb+2]=Ga.z,jb+=3;else for(ma=0;3>ma;ma++)Bb[jb]=ea.x,Bb[jb+1]=ea.y,Bb[jb+2]=ea.z,jb+=3;p.bindBuffer(p.ARRAY_BUFFER,B.__webglNormalBuffer);p.bufferData(p.ARRAY_BUFFER,Bb,L)}if(Ab&&Kb&&T){E=0;for(Q=na.length;E<Q;E++)if(S=na[E],Y=Kb[S],void 0!==Y)for(ma=0;3>ma;ma++)Ja=Y[ma],fb[Va]=Ja.x,fb[Va+1]=Ja.y,Va+=2;0<Va&&(p.bindBuffer(p.ARRAY_BUFFER,B.__webglUVBuffer),p.bufferData(p.ARRAY_BUFFER,fb,L))}if(Ab&&Lb&&T){E=0;for(Q=na.length;E<Q;E++)if(S=na[E],Ca=Lb[S],void 0!==Ca)for(ma=
0;3>ma;ma++)ab=Ca[ma],ib[bb]=ab.x,ib[bb+1]=ab.y,bb+=2;0<bb&&(p.bindBuffer(p.ARRAY_BUFFER,B.__webglUV2Buffer),p.bufferData(p.ARRAY_BUFFER,ib,L))}if(Gb){E=0;for(Q=na.length;E<Q;E++)sb[Wa]=gb,sb[Wa+1]=gb+1,sb[Wa+2]=gb+2,Wa+=3,Cb[xb]=gb,Cb[xb+1]=gb+1,Cb[xb+2]=gb,Cb[xb+3]=gb+2,Cb[xb+4]=gb+1,Cb[xb+5]=gb+2,xb+=6,gb+=3;p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,B.__webglFaceBuffer);p.bufferData(p.ELEMENT_ARRAY_BUFFER,sb,L);p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,B.__webglLineBuffer);p.bufferData(p.ELEMENT_ARRAY_BUFFER,
Cb,L)}if(vb)for(ma=0,Ia=vb.length;ma<Ia;ma++)if(I=vb[ma],I.__original.needsUpdate){P=0;if(1===I.size)if(void 0===I.boundTo||"vertices"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)W=mb[na[E]],I.array[P]=I.value[W.a],I.array[P+1]=I.value[W.b],I.array[P+2]=I.value[W.c],P+=3;else{if("faces"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)Ua=I.value[na[E]],I.array[P]=Ua,I.array[P+1]=Ua,I.array[P+2]=Ua,P+=3}else if(2===I.size)if(void 0===I.boundTo||"vertices"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)W=mb[na[E]],ja=
I.value[W.a],ka=I.value[W.b],la=I.value[W.c],I.array[P]=ja.x,I.array[P+1]=ja.y,I.array[P+2]=ka.x,I.array[P+3]=ka.y,I.array[P+4]=la.x,I.array[P+5]=la.y,P+=6;else{if("faces"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)la=ka=ja=Ua=I.value[na[E]],I.array[P]=ja.x,I.array[P+1]=ja.y,I.array[P+2]=ka.x,I.array[P+3]=ka.y,I.array[P+4]=la.x,I.array[P+5]=la.y,P+=6}else if(3===I.size){var wa;wa="c"===I.type?["r","g","b"]:["x","y","z"];if(void 0===I.boundTo||"vertices"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)W=mb[na[E]],
ja=I.value[W.a],ka=I.value[W.b],la=I.value[W.c],I.array[P]=ja[wa[0]],I.array[P+1]=ja[wa[1]],I.array[P+2]=ja[wa[2]],I.array[P+3]=ka[wa[0]],I.array[P+4]=ka[wa[1]],I.array[P+5]=ka[wa[2]],I.array[P+6]=la[wa[0]],I.array[P+7]=la[wa[1]],I.array[P+8]=la[wa[2]],P+=9;else if("faces"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)la=ka=ja=Ua=I.value[na[E]],I.array[P]=ja[wa[0]],I.array[P+1]=ja[wa[1]],I.array[P+2]=ja[wa[2]],I.array[P+3]=ka[wa[0]],I.array[P+4]=ka[wa[1]],I.array[P+5]=ka[wa[2]],I.array[P+6]=la[wa[0]],I.array[P+
7]=la[wa[1]],I.array[P+8]=la[wa[2]],P+=9;else if("faceVertices"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)Ua=I.value[na[E]],ja=Ua[0],ka=Ua[1],la=Ua[2],I.array[P]=ja[wa[0]],I.array[P+1]=ja[wa[1]],I.array[P+2]=ja[wa[2]],I.array[P+3]=ka[wa[0]],I.array[P+4]=ka[wa[1]],I.array[P+5]=ka[wa[2]],I.array[P+6]=la[wa[0]],I.array[P+7]=la[wa[1]],I.array[P+8]=la[wa[2]],P+=9}else if(4===I.size)if(void 0===I.boundTo||"vertices"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)W=mb[na[E]],ja=I.value[W.a],ka=I.value[W.b],la=I.value[W.c],
I.array[P]=ja.x,I.array[P+1]=ja.y,I.array[P+2]=ja.z,I.array[P+3]=ja.w,I.array[P+4]=ka.x,I.array[P+5]=ka.y,I.array[P+6]=ka.z,I.array[P+7]=ka.w,I.array[P+8]=la.x,I.array[P+9]=la.y,I.array[P+10]=la.z,I.array[P+11]=la.w,P+=12;else if("faces"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)la=ka=ja=Ua=I.value[na[E]],I.array[P]=ja.x,I.array[P+1]=ja.y,I.array[P+2]=ja.z,I.array[P+3]=ja.w,I.array[P+4]=ka.x,I.array[P+5]=ka.y,I.array[P+6]=ka.z,I.array[P+7]=ka.w,I.array[P+8]=la.x,I.array[P+9]=la.y,I.array[P+10]=la.z,
I.array[P+11]=la.w,P+=12;else if("faceVertices"===I.boundTo)for(E=0,Q=na.length;E<Q;E++)Ua=I.value[na[E]],ja=Ua[0],ka=Ua[1],la=Ua[2],I.array[P]=ja.x,I.array[P+1]=ja.y,I.array[P+2]=ja.z,I.array[P+3]=ja.w,I.array[P+4]=ka.x,I.array[P+5]=ka.y,I.array[P+6]=ka.z,I.array[P+7]=ka.w,I.array[P+8]=la.x,I.array[P+9]=la.y,I.array[P+10]=la.z,I.array[P+11]=la.w,P+=12;p.bindBuffer(p.ARRAY_BUFFER,I.buffer);p.bufferData(p.ARRAY_BUFFER,I.array,L)}M&&(delete B.__inittedArrays,delete B.__colorArray,delete B.__normalArray,
delete B.__tangentArray,delete B.__uvArray,delete B.__uv2Array,delete B.__faceArray,delete B.__vertexArray,delete B.__lineArray,delete B.__skinIndexArray,delete B.__skinWeightArray)}}n.verticesNeedUpdate=!1;n.morphTargetsNeedUpdate=!1;n.elementsNeedUpdate=!1;n.uvsNeedUpdate=!1;n.normalsNeedUpdate=!1;n.colorsNeedUpdate=!1;n.tangentsNeedUpdate=!1;n.buffersNeedUpdate=!1;r.attributes&&F(r)}else if(b instanceof THREE.Line){r=d(b,n);u=r.attributes&&A(r);if(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||
u){var $b=p.DYNAMIC_DRAW,Nb,Ob,Pb,ac,va,bc,Qb=n.vertices,Tb=n.colors,Ub=n.lineDistances,hc=Qb.length,ic=Tb.length,jc=Ub.length,cc=n.__vertexArray,dc=n.__colorArray,Wb=n.__lineDistanceArray,kc=n.colorsNeedUpdate,lc=n.lineDistancesNeedUpdate,qc=n.__webglCustomAttributesList,ec,xc,La,Ib,Pa,sa;if(n.verticesNeedUpdate){for(Nb=0;Nb<hc;Nb++)ac=Qb[Nb],va=3*Nb,cc[va]=ac.x,cc[va+1]=ac.y,cc[va+2]=ac.z;p.bindBuffer(p.ARRAY_BUFFER,n.__webglVertexBuffer);p.bufferData(p.ARRAY_BUFFER,cc,$b)}if(kc){for(Ob=0;Ob<ic;Ob++)bc=
Tb[Ob],va=3*Ob,dc[va]=bc.r,dc[va+1]=bc.g,dc[va+2]=bc.b;p.bindBuffer(p.ARRAY_BUFFER,n.__webglColorBuffer);p.bufferData(p.ARRAY_BUFFER,dc,$b)}if(lc){for(Pb=0;Pb<jc;Pb++)Wb[Pb]=Ub[Pb];p.bindBuffer(p.ARRAY_BUFFER,n.__webglLineDistanceBuffer);p.bufferData(p.ARRAY_BUFFER,Wb,$b)}if(qc)for(ec=0,xc=qc.length;ec<xc;ec++)if(sa=qc[ec],sa.needsUpdate&&(void 0===sa.boundTo||"vertices"===sa.boundTo)){va=0;Ib=sa.value.length;if(1===sa.size)for(La=0;La<Ib;La++)sa.array[La]=sa.value[La];else if(2===sa.size)for(La=
0;La<Ib;La++)Pa=sa.value[La],sa.array[va]=Pa.x,sa.array[va+1]=Pa.y,va+=2;else if(3===sa.size)if("c"===sa.type)for(La=0;La<Ib;La++)Pa=sa.value[La],sa.array[va]=Pa.r,sa.array[va+1]=Pa.g,sa.array[va+2]=Pa.b,va+=3;else for(La=0;La<Ib;La++)Pa=sa.value[La],sa.array[va]=Pa.x,sa.array[va+1]=Pa.y,sa.array[va+2]=Pa.z,va+=3;else if(4===sa.size)for(La=0;La<Ib;La++)Pa=sa.value[La],sa.array[va]=Pa.x,sa.array[va+1]=Pa.y,sa.array[va+2]=Pa.z,sa.array[va+3]=Pa.w,va+=4;p.bindBuffer(p.ARRAY_BUFFER,sa.buffer);p.bufferData(p.ARRAY_BUFFER,
sa.array,$b)}}n.verticesNeedUpdate=!1;n.colorsNeedUpdate=!1;n.lineDistancesNeedUpdate=!1;r.attributes&&F(r)}else if(b instanceof THREE.PointCloud){r=d(b,n);u=r.attributes&&A(r);if(n.verticesNeedUpdate||n.colorsNeedUpdate||b.sortParticles||u){var rc=p.DYNAMIC_DRAW,Qa,nb,ob,ba,pb,yb,fc=n.vertices,sc=fc.length,tc=n.colors,yc=tc.length,Db=n.__vertexArray,Eb=n.__colorArray,tb=n.__sortArray,zc=n.verticesNeedUpdate,Ac=n.colorsNeedUpdate,ub=n.__webglCustomAttributesList,db,Jb,ia,eb,qa,aa;if(b.sortParticles){nc.copy(Xb);
nc.multiply(b.matrixWorld);for(Qa=0;Qa<sc;Qa++)ob=fc[Qa],ha.copy(ob),ha.applyProjection(nc),tb[Qa]=[ha.z,Qa];tb.sort(w);for(Qa=0;Qa<sc;Qa++)ob=fc[tb[Qa][1]],ba=3*Qa,Db[ba]=ob.x,Db[ba+1]=ob.y,Db[ba+2]=ob.z;for(nb=0;nb<yc;nb++)ba=3*nb,yb=tc[tb[nb][1]],Eb[ba]=yb.r,Eb[ba+1]=yb.g,Eb[ba+2]=yb.b;if(ub)for(db=0,Jb=ub.length;db<Jb;db++)if(aa=ub[db],void 0===aa.boundTo||"vertices"===aa.boundTo)if(ba=0,eb=aa.value.length,1===aa.size)for(ia=0;ia<eb;ia++)pb=tb[ia][1],aa.array[ia]=aa.value[pb];else if(2===aa.size)for(ia=
0;ia<eb;ia++)pb=tb[ia][1],qa=aa.value[pb],aa.array[ba]=qa.x,aa.array[ba+1]=qa.y,ba+=2;else if(3===aa.size)if("c"===aa.type)for(ia=0;ia<eb;ia++)pb=tb[ia][1],qa=aa.value[pb],aa.array[ba]=qa.r,aa.array[ba+1]=qa.g,aa.array[ba+2]=qa.b,ba+=3;else for(ia=0;ia<eb;ia++)pb=tb[ia][1],qa=aa.value[pb],aa.array[ba]=qa.x,aa.array[ba+1]=qa.y,aa.array[ba+2]=qa.z,ba+=3;else if(4===aa.size)for(ia=0;ia<eb;ia++)pb=tb[ia][1],qa=aa.value[pb],aa.array[ba]=qa.x,aa.array[ba+1]=qa.y,aa.array[ba+2]=qa.z,aa.array[ba+3]=qa.w,
ba+=4}else{if(zc)for(Qa=0;Qa<sc;Qa++)ob=fc[Qa],ba=3*Qa,Db[ba]=ob.x,Db[ba+1]=ob.y,Db[ba+2]=ob.z;if(Ac)for(nb=0;nb<yc;nb++)yb=tc[nb],ba=3*nb,Eb[ba]=yb.r,Eb[ba+1]=yb.g,Eb[ba+2]=yb.b;if(ub)for(db=0,Jb=ub.length;db<Jb;db++)if(aa=ub[db],aa.needsUpdate&&(void 0===aa.boundTo||"vertices"===aa.boundTo))if(eb=aa.value.length,ba=0,1===aa.size)for(ia=0;ia<eb;ia++)aa.array[ia]=aa.value[ia];else if(2===aa.size)for(ia=0;ia<eb;ia++)qa=aa.value[ia],aa.array[ba]=qa.x,aa.array[ba+1]=qa.y,ba+=2;else if(3===aa.size)if("c"===
aa.type)for(ia=0;ia<eb;ia++)qa=aa.value[ia],aa.array[ba]=qa.r,aa.array[ba+1]=qa.g,aa.array[ba+2]=qa.b,ba+=3;else for(ia=0;ia<eb;ia++)qa=aa.value[ia],aa.array[ba]=qa.x,aa.array[ba+1]=qa.y,aa.array[ba+2]=qa.z,ba+=3;else if(4===aa.size)for(ia=0;ia<eb;ia++)qa=aa.value[ia],aa.array[ba]=qa.x,aa.array[ba+1]=qa.y,aa.array[ba+2]=qa.z,aa.array[ba+3]=qa.w,ba+=4}if(zc||b.sortParticles)p.bindBuffer(p.ARRAY_BUFFER,n.__webglVertexBuffer),p.bufferData(p.ARRAY_BUFFER,Db,rc);if(Ac||b.sortParticles)p.bindBuffer(p.ARRAY_BUFFER,
n.__webglColorBuffer),p.bufferData(p.ARRAY_BUFFER,Eb,rc);if(ub)for(db=0,Jb=ub.length;db<Jb;db++)if(aa=ub[db],aa.needsUpdate||b.sortParticles)p.bindBuffer(p.ARRAY_BUFFER,aa.buffer),p.bufferData(p.ARRAY_BUFFER,aa.array,rc)}n.verticesNeedUpdate=!1;n.colorsNeedUpdate=!1;r.attributes&&F(r)}for(var Fb=0,uc=l.length;Fb<uc;Fb++){var gc=l[Fb],qb=gc,Bc=qb.object,vc=qb.buffer,wc=Bc.geometry,rb=Bc.material;rb instanceof THREE.MeshFaceMaterial?(rb=rb.materials[wc instanceof THREE.BufferGeometry?0:vc.materialIndex],
rb.transparent?(qb.material=rb,Sa.push(qb)):(qb.material=rb,Ra.push(qb))):rb&&(rb.transparent?(qb.material=rb,Sa.push(qb)):(qb.material=rb,Ra.push(qb)));gc.render=!0;!0===J.sortObjects&&(null!==b.renderDepth?gc.z=b.renderDepth:(ha.setFromMatrixPosition(b.matrixWorld),ha.applyProjection(Xb),gc.z=ha.z))}}Fb=0;for(uc=b.children.length;Fb<uc;Fb++)v(a,b.children[Fb],h)}}function r(a,b,c){if(0!==a.length)for(var d=0,e=a.length;d<e;d++)oa=ab=null,Fa=fa=ma=xa=Ga=ua=Ia=-1,ib=!0,a[d].render(b,c,Kb,Lb),oa=ab=
null,Fa=fa=ma=xa=Ga=ua=Ia=-1,ib=!0}function y(a,b,c,d,e,f){for(var g,h,l,p=a.length-1;-1!==p;p--){g=a[p];h=g.object;l=g.buffer;Q(h,b);if(f)g=f;else{g=g.material;if(!g)continue;e&&J.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst);J.setDepthTest(g.depthTest);J.setDepthWrite(g.depthWrite);M(g.polygonOffset,g.polygonOffsetFactor,g.polygonOffsetUnits)}J.setMaterialFaces(g);l instanceof THREE.BufferGeometry?J.renderBufferDirect(b,c,d,g,l,h):J.renderBuffer(b,c,d,g,l,h)}}function z(a,b,c,d,
e,f,g){for(var h,l,p=0,n=a.length;p<n;p++)if(h=a[p],l=h.object,l.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&J.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);J.setDepthTest(h.depthTest);J.setDepthWrite(h.depthWrite);M(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}J.renderImmediateObject(c,d,e,h,l)}}function x(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function G(a,b,d){var e,f=!1;e=b.material;if(void 0===
d.geometryGroups||d.groupsNeedUpdate)delete a.__webglObjects[b.id],d.makeGroups(e instanceof THREE.MeshFaceMaterial,Hb?4294967296:65535),d.groupsNeedUpdate=!1;for(var g=0,h=d.geometryGroupsList.length;g<h;g++){e=d.geometryGroupsList[g];if(e.__webglVertexBuffer)f=!1;else{f=e;f.__webglVertexBuffer=p.createBuffer();f.__webglNormalBuffer=p.createBuffer();f.__webglTangentBuffer=p.createBuffer();f.__webglColorBuffer=p.createBuffer();f.__webglUVBuffer=p.createBuffer();f.__webglUV2Buffer=p.createBuffer();
f.__webglSkinIndicesBuffer=p.createBuffer();f.__webglSkinWeightsBuffer=p.createBuffer();f.__webglFaceBuffer=p.createBuffer();f.__webglLineBuffer=p.createBuffer();var l=void 0,n=void 0;if(f.numMorphTargets)for(f.__webglMorphTargetsBuffers=[],l=0,n=f.numMorphTargets;l<n;l++)f.__webglMorphTargetsBuffers.push(p.createBuffer());if(f.numMorphNormals)for(f.__webglMorphNormalsBuffers=[],l=0,n=f.numMorphNormals;l<n;l++)f.__webglMorphNormalsBuffers.push(p.createBuffer());J.info.memory.geometries++;c(e,b);d.verticesNeedUpdate=
!0;d.morphTargetsNeedUpdate=!0;d.elementsNeedUpdate=!0;d.uvsNeedUpdate=!0;d.normalsNeedUpdate=!0;d.tangentsNeedUpdate=!0;f=d.colorsNeedUpdate=!0}(f||void 0===b.__webglActive)&&D(a.__webglObjects,e,b)}b.__webglActive=!0}function D(a,b,c){var d=c.id;a[d]=a[d]||[];a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function A(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function F(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function L(a,b){if(a instanceof
THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line)delete b.__webglObjects[a.id];else if(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)for(var c=b.__webglObjectsImmediate,d=c.length-1;0<=d;d--)c[d].object===a&&c.splice(d,1);delete a.__webglActive}function C(a,b,c,d,e){ta=0;d.needsUpdate&&(d.program&&Qb(d),J.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(J.maxMorphTargets));
var f=!1,g=!1,h=!1,l=d.program,n=l.uniforms,q=d.__webglShader.uniforms;l.id!==ab&&(p.useProgram(l.program),ab=l.id,h=g=f=!0);d.id!==Fa&&(-1===Fa&&(h=!0),Fa=d.id,g=!0);if(f||a!==oa)p.uniformMatrix4fv(n.projectionMatrix,!1,a.projectionMatrix.elements),Ha&&p.uniform1f(n.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==oa&&(oa=a),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==n.cameraPosition&&(ha.setFromMatrixPosition(a.matrixWorld),p.uniform3f(n.cameraPosition,
ha.x,ha.y,ha.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==n.viewMatrix&&p.uniformMatrix4fv(n.viewMatrix,!1,a.matrixWorldInverse.elements);d.skinning&&(e.bindMatrix&&null!==n.bindMatrix&&p.uniformMatrix4fv(n.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==n.bindMatrixInverse&&p.uniformMatrix4fv(n.bindMatrixInverse,!1,e.bindMatrixInverse.elements),Rb&&e.skeleton&&e.skeleton.useVertexTexture?
(null!==n.boneTexture&&(f=N(),p.uniform1i(n.boneTexture,f),J.setTexture(e.skeleton.boneTexture,f)),null!==n.boneTextureWidth&&p.uniform1i(n.boneTextureWidth,e.skeleton.boneTextureWidth),null!==n.boneTextureHeight&&p.uniform1i(n.boneTextureHeight,e.skeleton.boneTextureHeight)):e.skeleton&&e.skeleton.boneMatrices&&null!==n.boneGlobalMatrices&&p.uniformMatrix4fv(n.boneGlobalMatrices,!1,e.skeleton.boneMatrices));if(g){c&&d.fog&&(q.fogColor.value=c.color,c instanceof THREE.Fog?(q.fogNear.value=c.near,
q.fogFar.value=c.far):c instanceof THREE.FogExp2&&(q.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(ib){var h=!0,r,u=f=0,s=0,v,w,z,x=Mb,y=x.directional.colors,A=x.directional.positions,G=x.point.colors,D=x.point.positions,C=x.point.distances,F=x.spot.colors,L=x.spot.positions,O=x.spot.distances,Q=x.spot.directions,M=x.spot.anglesCos,W=x.spot.exponents,K=x.hemi.skyColors,T=x.hemi.groundColors,R=x.hemi.positions,U=0,$=0,Y=0,
ca=0,Ca=0,da=0,Ba=0,fa=0,Z=r=0;c=z=Z=0;for(g=b.length;c<g;c++)r=b[c],r.onlyShadow||(v=r.color,w=r.intensity,z=r.distance,r instanceof THREE.AmbientLight?r.visible&&(J.gammaInput?(f+=v.r*v.r,u+=v.g*v.g,s+=v.b*v.b):(f+=v.r,u+=v.g,s+=v.b)):r instanceof THREE.DirectionalLight?(Ca+=1,r.visible&&(ga.setFromMatrixPosition(r.matrixWorld),ha.setFromMatrixPosition(r.target.matrixWorld),ga.sub(ha),ga.normalize(),r=3*U,A[r]=ga.x,A[r+1]=ga.y,A[r+2]=ga.z,J.gammaInput?ea(y,r,v,w*w):S(y,r,v,w),U+=1)):r instanceof
THREE.PointLight?(da+=1,r.visible&&(Z=3*$,J.gammaInput?ea(G,Z,v,w*w):S(G,Z,v,w),ha.setFromMatrixPosition(r.matrixWorld),D[Z]=ha.x,D[Z+1]=ha.y,D[Z+2]=ha.z,C[$]=z,$+=1)):r instanceof THREE.SpotLight?(Ba+=1,r.visible&&(Z=3*Y,J.gammaInput?ea(F,Z,v,w*w):S(F,Z,v,w),ha.setFromMatrixPosition(r.matrixWorld),L[Z]=ha.x,L[Z+1]=ha.y,L[Z+2]=ha.z,O[Y]=z,ga.copy(ha),ha.setFromMatrixPosition(r.target.matrixWorld),ga.sub(ha),ga.normalize(),Q[Z]=ga.x,Q[Z+1]=ga.y,Q[Z+2]=ga.z,M[Y]=Math.cos(r.angle),W[Y]=r.exponent,Y+=
1)):r instanceof THREE.HemisphereLight&&(fa+=1,r.visible&&(ga.setFromMatrixPosition(r.matrixWorld),ga.normalize(),z=3*ca,R[z]=ga.x,R[z+1]=ga.y,R[z+2]=ga.z,v=r.color,r=r.groundColor,J.gammaInput?(w*=w,ea(K,z,v,w),ea(T,z,r,w)):(S(K,z,v,w),S(T,z,r,w)),ca+=1)));c=3*U;for(g=Math.max(y.length,3*Ca);c<g;c++)y[c]=0;c=3*$;for(g=Math.max(G.length,3*da);c<g;c++)G[c]=0;c=3*Y;for(g=Math.max(F.length,3*Ba);c<g;c++)F[c]=0;c=3*ca;for(g=Math.max(K.length,3*fa);c<g;c++)K[c]=0;c=3*ca;for(g=Math.max(T.length,3*fa);c<
g;c++)T[c]=0;x.directional.length=U;x.point.length=$;x.spot.length=Y;x.hemi.length=ca;x.ambient[0]=f;x.ambient[1]=u;x.ambient[2]=s;ib=!1}h?(h=Mb,q.ambientLightColor.value=h.ambient,q.directionalLightColor.value=h.directional.colors,q.directionalLightDirection.value=h.directional.positions,q.pointLightColor.value=h.point.colors,q.pointLightPosition.value=h.point.positions,q.pointLightDistance.value=h.point.distances,q.spotLightColor.value=h.spot.colors,q.spotLightPosition.value=h.spot.positions,q.spotLightDistance.value=
h.spot.distances,q.spotLightDirection.value=h.spot.directions,q.spotLightAngleCos.value=h.spot.anglesCos,q.spotLightExponent.value=h.spot.exponents,q.hemisphereLightSkyColor.value=h.hemi.skyColors,q.hemisphereLightGroundColor.value=h.hemi.groundColors,q.hemisphereLightDirection.value=h.hemi.positions,B(q,!0)):B(q,!1)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){q.opacity.value=d.opacity;J.gammaInput?q.diffuse.value.copyGammaToLinear(d.color):
q.diffuse.value=d.color;q.map.value=d.map;q.lightMap.value=d.lightMap;q.specularMap.value=d.specularMap;q.alphaMap.value=d.alphaMap;d.bumpMap&&(q.bumpMap.value=d.bumpMap,q.bumpScale.value=d.bumpScale);d.normalMap&&(q.normalMap.value=d.normalMap,q.normalScale.value.copy(d.normalScale));var X;d.map?X=d.map:d.specularMap?X=d.specularMap:d.normalMap?X=d.normalMap:d.bumpMap?X=d.bumpMap:d.alphaMap&&(X=d.alphaMap);void 0!==X&&(h=X.offset,X=X.repeat,q.offsetRepeat.value.set(h.x,h.y,X.x,X.y));q.envMap.value=
d.envMap;q.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;q.reflectivity.value=d.reflectivity;q.refractionRatio.value=d.refractionRatio;q.combine.value=d.combine;q.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(q.diffuse.value=d.color,q.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(q.diffuse.value=d.color,q.opacity.value=d.opacity,q.dashSize.value=d.dashSize,q.totalSize.value=d.dashSize+
d.gapSize,q.scale.value=d.scale):d instanceof THREE.PointCloudMaterial?(q.psColor.value=d.color,q.opacity.value=d.opacity,q.size.value=d.size,q.scale.value=V.height/2,q.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(q.shininess.value=d.shininess,J.gammaInput?(q.ambient.value.copyGammaToLinear(d.ambient),q.emissive.value.copyGammaToLinear(d.emissive),q.specular.value.copyGammaToLinear(d.specular)):(q.ambient.value=d.ambient,q.emissive.value=d.emissive,q.specular.value=d.specular),d.wrapAround&&
q.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(J.gammaInput?(q.ambient.value.copyGammaToLinear(d.ambient),q.emissive.value.copyGammaToLinear(d.emissive)):(q.ambient.value=d.ambient,q.emissive.value=d.emissive),d.wrapAround&&q.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(q.mNear.value=a.near,q.mFar.value=a.far,q.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(q.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&q.shadowMatrix)for(X=
a=0,h=b.length;X<h;X++)c=b[X],c.castShadow&&(c instanceof THREE.SpotLight||c instanceof THREE.DirectionalLight&&!c.shadowCascade)&&(q.shadowMap.value[a]=c.shadowMap,q.shadowMapSize.value[a]=c.shadowMapSize,q.shadowMatrix.value[a]=c.shadowMatrix,q.shadowDarkness.value[a]=c.shadowDarkness,q.shadowBias.value[a]=c.shadowBias,a++);b=d.uniformsList;d=0;for(q=b.length;d<q;d++)if(a=b[d][0],!1!==a.needsUpdate)switch(c=a.type,h=a.value,X=b[d][1],c){case "1i":p.uniform1i(X,h);break;case "1f":p.uniform1f(X,h);
break;case "2f":p.uniform2f(X,h[0],h[1]);break;case "3f":p.uniform3f(X,h[0],h[1],h[2]);break;case "4f":p.uniform4f(X,h[0],h[1],h[2],h[3]);break;case "1iv":p.uniform1iv(X,h);break;case "3iv":p.uniform3iv(X,h);break;case "1fv":p.uniform1fv(X,h);break;case "2fv":p.uniform2fv(X,h);break;case "3fv":p.uniform3fv(X,h);break;case "4fv":p.uniform4fv(X,h);break;case "Matrix3fv":p.uniformMatrix3fv(X,!1,h);break;case "Matrix4fv":p.uniformMatrix4fv(X,!1,h);break;case "i":p.uniform1i(X,h);break;case "f":p.uniform1f(X,
h);break;case "v2":p.uniform2f(X,h.x,h.y);break;case "v3":p.uniform3f(X,h.x,h.y,h.z);break;case "v4":p.uniform4f(X,h.x,h.y,h.z,h.w);break;case "c":p.uniform3f(X,h.r,h.g,h.b);break;case "iv1":p.uniform1iv(X,h);break;case "iv":p.uniform3iv(X,h);break;case "fv1":p.uniform1fv(X,h);break;case "fv":p.uniform3fv(X,h);break;case "v2v":void 0===a._array&&(a._array=new Float32Array(2*h.length));c=0;for(g=h.length;c<g;c++)f=2*c,a._array[f]=h[c].x,a._array[f+1]=h[c].y;p.uniform2fv(X,a._array);break;case "v3v":void 0===
a._array&&(a._array=new Float32Array(3*h.length));c=0;for(g=h.length;c<g;c++)f=3*c,a._array[f]=h[c].x,a._array[f+1]=h[c].y,a._array[f+2]=h[c].z;p.uniform3fv(X,a._array);break;case "v4v":void 0===a._array&&(a._array=new Float32Array(4*h.length));c=0;for(g=h.length;c<g;c++)f=4*c,a._array[f]=h[c].x,a._array[f+1]=h[c].y,a._array[f+2]=h[c].z,a._array[f+3]=h[c].w;p.uniform4fv(X,a._array);break;case "m3":p.uniformMatrix3fv(X,!1,h.elements);break;case "m3v":void 0===a._array&&(a._array=new Float32Array(9*
h.length));c=0;for(g=h.length;c<g;c++)h[c].flattenToArrayOffset(a._array,9*c);p.uniformMatrix3fv(X,!1,a._array);break;case "m4":p.uniformMatrix4fv(X,!1,h.elements);break;case "m4v":void 0===a._array&&(a._array=new Float32Array(16*h.length));c=0;for(g=h.length;c<g;c++)h[c].flattenToArrayOffset(a._array,16*c);p.uniformMatrix4fv(X,!1,a._array);break;case "t":f=h;h=N();p.uniform1i(X,h);if(!f)continue;if(f instanceof THREE.CubeTexture||f.image instanceof Array&&6===f.image.length){if(a=f,X=h,6===a.image.length)if(a.needsUpdate){a.image.__webglTextureCube||
(a.addEventListener("dispose",Sb),a.image.__webglTextureCube=p.createTexture(),J.info.memory.textures++);p.activeTexture(p.TEXTURE0+X);p.bindTexture(p.TEXTURE_CUBE_MAP,a.image.__webglTextureCube);p.pixelStorei(p.UNPACK_FLIP_Y_WEBGL,a.flipY);X=a instanceof THREE.CompressedTexture;h=[];for(c=0;6>c;c++)J.autoScaleCubemaps&&!X?(g=c,f=a.image[c],s=vc,f.width<=s&&f.height<=s||(x=Math.max(f.width,f.height),u=Math.floor(f.width*s/x),s=Math.floor(f.height*s/x),x=document.createElement("canvas"),x.width=u,
x.height=s,x.getContext("2d").drawImage(f,0,0,f.width,f.height,0,0,u,s),f=x),h[g]=f):h[c]=a.image[c];c=h[0];g=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height);f=E(a.format);u=E(a.type);H(p.TEXTURE_CUBE_MAP,a,g);for(c=0;6>c;c++)if(X)for(x=h[c].mipmaps,y=0,A=x.length;y<A;y++)s=x[y],a.format!==THREE.RGBAFormat?p.compressedTexImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+c,y,f,s.width,s.height,0,s.data):p.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+c,y,f,s.width,s.height,0,f,u,s.data);else p.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+
c,0,f,f,u,h[c]);a.generateMipmaps&&g&&p.generateMipmap(p.TEXTURE_CUBE_MAP);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else p.activeTexture(p.TEXTURE0+X),p.bindTexture(p.TEXTURE_CUBE_MAP,a.image.__webglTextureCube)}else f instanceof THREE.WebGLRenderTargetCube?(a=f,p.activeTexture(p.TEXTURE0+h),p.bindTexture(p.TEXTURE_CUBE_MAP,a.__webglTexture)):J.setTexture(f,h);break;case "tv":void 0===a._array&&(a._array=[]);c=0;for(g=a.value.length;c<g;c++)a._array[c]=N();p.uniform1iv(X,a._array);c=0;for(g=a.value.length;c<
g;c++)f=a.value[c],h=a._array[c],f&&J.setTexture(f,h);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+c)}}p.uniformMatrix4fv(n.modelViewMatrix,!1,e._modelViewMatrix.elements);n.normalMatrix&&p.uniformMatrix3fv(n.normalMatrix,!1,e._normalMatrix.elements);null!==n.modelMatrix&&p.uniformMatrix4fv(n.modelMatrix,!1,e.matrixWorld.elements);return l}function B(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=
b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=b;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function N(){var a=ta;a>=Tb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+
Tb);ta+=1;return a}function Q(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function ea(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function S(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function R(a){a!==Aa&&(p.lineWidth(a),Aa=a)}function M(a,b,c){Ta!==a&&(a?p.enable(p.POLYGON_OFFSET_FILL):p.disable(p.POLYGON_OFFSET_FILL),Ta=a);!a||fb===b&&Ja===c||(p.polygonOffset(b,c),fb=b,Ja=c)}function H(a,b,c){c?
(p.texParameteri(a,p.TEXTURE_WRAP_S,E(b.wrapS)),p.texParameteri(a,p.TEXTURE_WRAP_T,E(b.wrapT)),p.texParameteri(a,p.TEXTURE_MAG_FILTER,E(b.magFilter)),p.texParameteri(a,p.TEXTURE_MIN_FILTER,E(b.minFilter))):(p.texParameteri(a,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(a,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(a,p.TEXTURE_MAG_FILTER,U(b.magFilter)),p.texParameteri(a,p.TEXTURE_MIN_FILTER,U(b.minFilter)));Wa&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy)&&(p.texParameterf(a,
Wa.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Ub)),b.__oldAnisotropy=b.anisotropy)}function T(a,b){p.bindRenderbuffer(p.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(p.renderbufferStorage(p.RENDERBUFFER,p.DEPTH_COMPONENT16,b.width,b.height),p.framebufferRenderbuffer(p.FRAMEBUFFER,p.DEPTH_ATTACHMENT,p.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(p.renderbufferStorage(p.RENDERBUFFER,p.DEPTH_STENCIL,b.width,b.height),p.framebufferRenderbuffer(p.FRAMEBUFFER,p.DEPTH_STENCIL_ATTACHMENT,p.RENDERBUFFER,
a)):p.renderbufferStorage(p.RENDERBUFFER,p.RGBA4,b.width,b.height)}function O(a){a instanceof THREE.WebGLRenderTargetCube?(p.bindTexture(p.TEXTURE_CUBE_MAP,a.__webglTexture),p.generateMipmap(p.TEXTURE_CUBE_MAP),p.bindTexture(p.TEXTURE_CUBE_MAP,null)):(p.bindTexture(p.TEXTURE_2D,a.__webglTexture),p.generateMipmap(p.TEXTURE_2D),p.bindTexture(p.TEXTURE_2D,null))}function U(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?p.NEAREST:p.LINEAR}
function E(a){if(a===THREE.RepeatWrapping)return p.REPEAT;if(a===THREE.ClampToEdgeWrapping)return p.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return p.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return p.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return p.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return p.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return p.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return p.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return p.LINEAR_MIPMAP_LINEAR;
if(a===THREE.UnsignedByteType)return p.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return p.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return p.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return p.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return p.BYTE;if(a===THREE.ShortType)return p.SHORT;if(a===THREE.UnsignedShortType)return p.UNSIGNED_SHORT;if(a===THREE.IntType)return p.INT;if(a===THREE.UnsignedIntType)return p.UNSIGNED_INT;if(a===THREE.FloatType)return p.FLOAT;
if(a===THREE.AlphaFormat)return p.ALPHA;if(a===THREE.RGBFormat)return p.RGB;if(a===THREE.RGBAFormat)return p.RGBA;if(a===THREE.LuminanceFormat)return p.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return p.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return p.FUNC_ADD;if(a===THREE.SubtractEquation)return p.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return p.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return p.ZERO;if(a===THREE.OneFactor)return p.ONE;if(a===THREE.SrcColorFactor)return p.SRC_COLOR;
if(a===THREE.OneMinusSrcColorFactor)return p.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return p.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return p.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return p.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return p.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return p.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return p.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return p.SRC_ALPHA_SATURATE;if(void 0!==Va){if(a===THREE.RGB_S3TC_DXT1_Format)return Va.COMPRESSED_RGB_S3TC_DXT1_EXT;
if(a===THREE.RGBA_S3TC_DXT1_Format)return Va.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Va.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Va.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var V=void 0!==a.canvas?a.canvas:document.createElement("canvas"),Y=void 0!==a.context?a.context:null,Z=void 0!==a.precision?a.precision:"highp",K=void 0!==a.alpha?a.alpha:!1,ra=void 0!==a.depth?a.depth:!0,ca=
void 0!==a.stencil?a.stencil:!0,$=void 0!==a.antialias?a.antialias:!1,W=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,Ba=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,Ha=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,Da=new THREE.Color(0),Ca=0,Ra=[],Sa=[];this.domElement=V;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortObjects=this.autoClearStencil=this.autoClearDepth=
this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var J=this,Ea=[],ab=null,bb=
null,Fa=-1,fa=null,oa=null,ta=0,xa=-1,ma=-1,Ia=-1,ya=-1,Na=-1,da=-1,ua=-1,Ga=-1,Ta=null,fb=null,Ja=null,Aa=null,pa=0,Ma=0,zb=V.width,vb=V.height,Kb=0,Lb=0,sb=new Uint8Array(16),wb=new Uint8Array(16),mc=new THREE.Frustum,Xb=new THREE.Matrix4,nc=new THREE.Matrix4,ha=new THREE.Vector3,ga=new THREE.Vector3,ib=!0,Mb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],
exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},p,Gb,Ab,Wa,Va,Hb;(function(){try{var a={alpha:K,depth:ra,stencil:ca,antialias:$,premultipliedAlpha:W,preserveDrawingBuffer:Ba};p=Y||V.getContext("webgl",a)||V.getContext("experimental-webgl",a);if(null===p)throw"Error creating WebGL context.";}catch(b){console.error(b)}Gb=p.getExtension("OES_texture_float");p.getExtension("OES_texture_float_linear");Ab=p.getExtension("OES_standard_derivatives");Wa=p.getExtension("EXT_texture_filter_anisotropic")||
p.getExtension("MOZ_EXT_texture_filter_anisotropic")||p.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Va=p.getExtension("WEBGL_compressed_texture_s3tc")||p.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||p.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");Hb=p.getExtension("OES_element_index_uint");null===Gb&&console.log("THREE.WebGLRenderer: Float textures not supported.");null===Ab&&console.log("THREE.WebGLRenderer: Standard derivatives not supported.");null===Wa&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");
null===Va&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");null===Hb&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");void 0===p.getShaderPrecisionFormat&&(p.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});Ha&&p.getExtension("EXT_frag_depth")})();p.clearColor(0,0,0,1);p.clearDepth(1);p.clearStencil(0);p.enable(p.DEPTH_TEST);p.depthFunc(p.LEQUAL);p.frontFace(p.CCW);p.cullFace(p.BACK);p.enable(p.CULL_FACE);
p.enable(p.BLEND);p.blendEquation(p.FUNC_ADD);p.blendFunc(p.SRC_ALPHA,p.ONE_MINUS_SRC_ALPHA);p.viewport(pa,Ma,zb,vb);p.clearColor(Da.r,Da.g,Da.b,Ca);this.context=p;var Tb=p.getParameter(p.MAX_TEXTURE_IMAGE_UNITS),wc=p.getParameter(p.MAX_VERTEX_TEXTURE_IMAGE_UNITS);p.getParameter(p.MAX_TEXTURE_SIZE);var vc=p.getParameter(p.MAX_CUBE_MAP_TEXTURE_SIZE),Ub=Wa?p.getParameter(Wa.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Vb=0<wc,Rb=Vb&&Gb;Va&&p.getParameter(p.COMPRESSED_TEXTURE_FORMATS);var Cc=p.getShaderPrecisionFormat(p.VERTEX_SHADER,
p.HIGH_FLOAT),Dc=p.getShaderPrecisionFormat(p.VERTEX_SHADER,p.MEDIUM_FLOAT);p.getShaderPrecisionFormat(p.VERTEX_SHADER,p.LOW_FLOAT);var Ec=p.getShaderPrecisionFormat(p.FRAGMENT_SHADER,p.HIGH_FLOAT),Fc=p.getShaderPrecisionFormat(p.FRAGMENT_SHADER,p.MEDIUM_FLOAT);p.getShaderPrecisionFormat(p.FRAGMENT_SHADER,p.LOW_FLOAT);var Gc=0<Cc.precision&&0<Ec.precision,hc=0<Dc.precision&&0<Fc.precision;"highp"!==Z||Gc||(hc?(Z="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(Z=
"lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));"mediump"!==Z||hc||(Z="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));this.getContext=function(){return p};this.supportsVertexTextures=function(){return Vb};this.supportsFloatTextures=function(){return Gb};this.supportsStandardDerivatives=function(){return Ab};this.supportsCompressedTextureS3TC=function(){return Va};this.getMaxAnisotropy=function(){return Ub};this.getPrecision=
function(){return Z};this.setSize=function(a,b,c){V.width=a*this.devicePixelRatio;V.height=b*this.devicePixelRatio;!1!==c&&(V.style.width=a+"px",V.style.height=b+"px");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){pa=a*this.devicePixelRatio;Ma=b*this.devicePixelRatio;zb=c*this.devicePixelRatio;vb=d*this.devicePixelRatio;p.viewport(pa,Ma,zb,vb)};this.setScissor=function(a,b,c,d){p.scissor(a*this.devicePixelRatio,b*this.devicePixelRatio,c*this.devicePixelRatio,d*this.devicePixelRatio)};
this.enableScissorTest=function(a){a?p.enable(p.SCISSOR_TEST):p.disable(p.SCISSOR_TEST)};this.setClearColor=function(a,b){Da.set(a);Ca=void 0!==b?b:1;p.clearColor(Da.r,Da.g,Da.b,Ca)};this.setClearColorHex=function(a,b){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,b)};this.getClearColor=function(){return Da};this.getClearAlpha=function(){return Ca};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=p.COLOR_BUFFER_BIT;
if(void 0===b||b)d|=p.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=p.STENCIL_BUFFER_BIT;p.clear(d)};this.clearColor=function(){p.clear(p.COLOR_BUFFER_BIT)};this.clearDepth=function(){p.clear(p.DEPTH_BUFFER_BIT)};this.clearStencil=function(){p.clear(p.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=
function(a,b){ab=null;Fa=fa=Ga=ua=Ia=-1;ib=!0;ma=xa=-1;ic(a);this.shadowMapPlugin.update(a,b)};var jc=function(a){a=a.target;a.removeEventListener("dispose",jc);a.__webglInit=void 0;if(a instanceof THREE.BufferGeometry){a=a.attributes;for(var b in a)void 0!==a[b].buffer&&p.deleteBuffer(a[b].buffer);J.info.memory.geometries--}else if(void 0!==a.geometryGroups){b=0;for(var c=a.geometryGroupsList.length;b<c;b++){var d=a.geometryGroupsList[b];if(void 0!==d.numMorphTargets)for(var e=0,f=d.numMorphTargets;e<
f;e++)p.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void 0!==d.numMorphNormals)for(e=0,f=d.numMorphNormals;e<f;e++)p.deleteBuffer(d.__webglMorphNormalsBuffers[e]);Wb(d)}}else Wb(a)},Sb=function(a){a=a.target;a.removeEventListener("dispose",Sb);a.image&&a.image.__webglTextureCube?p.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,p.deleteTexture(a.__webglTexture));J.info.memory.textures--},kc=function(a){a=a.target;a.removeEventListener("dispose",kc);if(a&&a.__webglTexture)if(p.deleteTexture(a.__webglTexture),
a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)p.deleteFramebuffer(a.__webglFramebuffer[b]),p.deleteRenderbuffer(a.__webglRenderbuffer[b]);else p.deleteFramebuffer(a.__webglFramebuffer),p.deleteRenderbuffer(a.__webglRenderbuffer);J.info.memory.textures--},lc=function(a){a=a.target;a.removeEventListener("dispose",lc);Qb(a)},Wb=function(a){void 0!==a.__webglVertexBuffer&&p.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&p.deleteBuffer(a.__webglNormalBuffer);void 0!==
a.__webglTangentBuffer&&p.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&p.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&p.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&p.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&p.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&p.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&p.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&
p.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&p.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)p.deleteBuffer(a.__webglCustomAttributesList[b].buffer);J.info.memory.geometries--},Qb=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=Ea.length;a<c;a++)if(d=Ea[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Ea.length;a<
c;a++)d=Ea[a],d.program!==b&&e.push(d);Ea=e;p.deleteProgram(b);J.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){l();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=p.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=p.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=p.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=p.createBuffer());a.hasPositions&&(p.bindBuffer(p.ARRAY_BUFFER,a.__webglVertexBuffer),
p.bufferData(p.ARRAY_BUFFER,a.positionArray,p.DYNAMIC_DRAW),n(b.attributes.position),p.vertexAttribPointer(b.attributes.position,3,p.FLOAT,!1,0,0));if(a.hasNormals){p.bindBuffer(p.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,r,u,s,v,w,x,z=3*a.count;for(x=0;x<z;x+=9)w=a.normalArray,d=w[x],e=w[x+1],f=w[x+2],g=w[x+3],r=w[x+4],s=w[x+5],h=w[x+6],u=w[x+7],v=w[x+8],d=(d+g+h)/3,e=(e+r+u)/3,f=(f+s+v)/3,w[x]=d,w[x+1]=e,w[x+2]=f,w[x+3]=d,w[x+4]=e,w[x+5]=f,w[x+6]=d,w[x+
7]=e,w[x+8]=f}p.bufferData(p.ARRAY_BUFFER,a.normalArray,p.DYNAMIC_DRAW);n(b.attributes.normal);p.vertexAttribPointer(b.attributes.normal,3,p.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(p.bindBuffer(p.ARRAY_BUFFER,a.__webglUvBuffer),p.bufferData(p.ARRAY_BUFFER,a.uvArray,p.DYNAMIC_DRAW),n(b.attributes.uv),p.vertexAttribPointer(b.attributes.uv,2,p.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(p.bindBuffer(p.ARRAY_BUFFER,a.__webglColorBuffer),p.bufferData(p.ARRAY_BUFFER,a.colorArray,p.DYNAMIC_DRAW),
n(b.attributes.color),p.vertexAttribPointer(b.attributes.color,3,p.FLOAT,!1,0,0));q();p.drawArrays(p.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var g=C(a,b,c,d,f);a=g.attributes;b=e.attributes;c=!1;g=16777215*e.id+2*g.id+(d.wireframe?1:0);g!==fa&&(fa=g,c=!0);c&&l();if(f instanceof THREE.Mesh)if(g=b.index){var n,q;g.array instanceof Uint32Array?(n=p.UNSIGNED_INT,q=4):(n=p.UNSIGNED_SHORT,q=2);e=e.offsets;if(0===e.length)c&&(h(d,a,b,0),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,
g.buffer)),p.drawElements(p.TRIANGLES,g.array.length,n,0),J.info.render.calls++,J.info.render.vertices+=g.array.length,J.info.render.faces+=g.array.length/3;else{c=!0;for(var r=0,u=e.length;r<u;r++){var s=e[r].index;c&&(h(d,a,b,s),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,g.buffer));p.drawElements(p.TRIANGLES,e[r].count,n,e[r].start*q);J.info.render.calls++;J.info.render.vertices+=e[r].count;J.info.render.faces+=e[r].count/3}}}else c&&h(d,a,b,0),d=e.attributes.position,p.drawArrays(p.TRIANGLES,0,d.array.length/
3),J.info.render.calls++,J.info.render.vertices+=d.array.length/3,J.info.render.faces+=d.array.length/9;else if(f instanceof THREE.PointCloud)c&&h(d,a,b,0),d=b.position,p.drawArrays(p.POINTS,0,d.array.length/3),J.info.render.calls++,J.info.render.points+=d.array.length/3;else if(f instanceof THREE.Line)if(f=f.type===THREE.LineStrip?p.LINE_STRIP:p.LINES,R(d.linewidth),g=b.index)if(g.array instanceof Uint32Array?(n=p.UNSIGNED_INT,q=4):(n=p.UNSIGNED_SHORT,q=2),e=e.offsets,0===e.length)c&&(h(d,a,b,0),
p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,g.buffer)),p.drawElements(f,g.array.length,n,0),J.info.render.calls++,J.info.render.vertices+=g.array.length;else for(1<e.length&&(c=!0),r=0,u=e.length;r<u;r++)s=e[r].index,c&&(h(d,a,b,s),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,g.buffer)),p.drawElements(f,e[r].count,n,e[r].start*q),J.info.render.calls++,J.info.render.vertices+=e[r].count;else c&&h(d,a,b,0),d=b.position,p.drawArrays(f,0,d.array.length/3),J.info.render.calls++,J.info.render.points+=d.array.length/3}};
this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,h;c=C(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==fa&&(fa=c,a=!0);a&&l();if(!d.morphTargets&&0<=b.position)a&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglVertexBuffer),n(b.position),p.vertexAttribPointer(b.position,3,p.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(p.bindBuffer(p.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),n(c.position),
p.vertexAttribPointer(c.position,3,p.FLOAT,!1,0,0)):0<=c.position&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglVertexBuffer),n(c.position),p.vertexAttribPointer(c.position,3,p.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var r=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;r<d.numSupportedMorphTargets&&r<h.length;)0<=c["morphTarget"+r]&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[r]]),n(c["morphTarget"+r]),p.vertexAttribPointer(c["morphTarget"+r],3,p.FLOAT,!1,0,0)),0<=
c["morphNormal"+r]&&d.morphNormals&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[r]]),n(c["morphNormal"+r]),p.vertexAttribPointer(c["morphNormal"+r],3,p.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[r]=g[h[r]],r++}else{h=[];g=f.morphTargetInfluences;var u,s=g.length;for(u=0;u<s;u++)r=g[u],0<r&&h.push([r,u]);h.length>d.numSupportedMorphTargets?(h.sort(w),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(w):0===h.length&&h.push([0,0]);for(r=0;r<d.numSupportedMorphTargets;)h[r]?
(u=h[r][1],0<=c["morphTarget"+r]&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[u]),n(c["morphTarget"+r]),p.vertexAttribPointer(c["morphTarget"+r],3,p.FLOAT,!1,0,0)),0<=c["morphNormal"+r]&&d.morphNormals&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[u]),n(c["morphNormal"+r]),p.vertexAttribPointer(c["morphNormal"+r],3,p.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[r]=g[u]):f.__webglMorphTargetInfluences[r]=0,r++}null!==d.program.uniforms.morphTargetInfluences&&p.uniform1fv(d.program.uniforms.morphTargetInfluences,
f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(g=0,h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(p.bindBuffer(p.ARRAY_BUFFER,c.buffer),n(b[c.buffer.belongsToAttribute]),p.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,p.FLOAT,!1,0,0));0<=b.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(p.bindBuffer(p.ARRAY_BUFFER,e.__webglColorBuffer),n(b.color),p.vertexAttribPointer(b.color,
3,p.FLOAT,!1,0,0)):d.defaultAttributeValues&&p.vertexAttrib3fv(b.color,d.defaultAttributeValues.color));0<=b.normal&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglNormalBuffer),n(b.normal),p.vertexAttribPointer(b.normal,3,p.FLOAT,!1,0,0));0<=b.tangent&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglTangentBuffer),n(b.tangent),p.vertexAttribPointer(b.tangent,4,p.FLOAT,!1,0,0));0<=b.uv&&(f.geometry.faceVertexUvs[0]?(p.bindBuffer(p.ARRAY_BUFFER,e.__webglUVBuffer),n(b.uv),p.vertexAttribPointer(b.uv,2,p.FLOAT,!1,0,0)):
d.defaultAttributeValues&&p.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));0<=b.uv2&&(f.geometry.faceVertexUvs[1]?(p.bindBuffer(p.ARRAY_BUFFER,e.__webglUV2Buffer),n(b.uv2),p.vertexAttribPointer(b.uv2,2,p.FLOAT,!1,0,0)):d.defaultAttributeValues&&p.vertexAttrib2fv(b.uv2,d.defaultAttributeValues.uv2));d.skinning&&0<=b.skinIndex&&0<=b.skinWeight&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),n(b.skinIndex),p.vertexAttribPointer(b.skinIndex,4,p.FLOAT,!1,0,0),p.bindBuffer(p.ARRAY_BUFFER,
e.__webglSkinWeightsBuffer),n(b.skinWeight),p.vertexAttribPointer(b.skinWeight,4,p.FLOAT,!1,0,0));0<=b.lineDistance&&(p.bindBuffer(p.ARRAY_BUFFER,e.__webglLineDistanceBuffer),n(b.lineDistance),p.vertexAttribPointer(b.lineDistance,1,p.FLOAT,!1,0,0))}q();f instanceof THREE.Mesh?(f=e.__typeArray===Uint32Array?p.UNSIGNED_INT:p.UNSIGNED_SHORT,d.wireframe?(R(d.wireframeLinewidth),a&&p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),p.drawElements(p.LINES,e.__webglLineCount,f,0)):(a&&p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,
e.__webglFaceBuffer),p.drawElements(p.TRIANGLES,e.__webglFaceCount,f,0)),J.info.render.calls++,J.info.render.vertices+=e.__webglFaceCount,J.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?p.LINE_STRIP:p.LINES,R(d.linewidth),p.drawArrays(f,0,e.__webglLineCount),J.info.render.calls++):f instanceof THREE.PointCloud&&(p.drawArrays(p.POINTS,0,e.__webglParticleCount),J.info.render.calls++,J.info.render.points+=e.__webglParticleCount)}};this.render=function(a,
b,c,d){function e(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update();for(var b=0,c=a.children.length;b<c;b++)e(a.children[b])}if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var f,g,h,l,p=a.__lights,n=a.fog;Fa=-1;oa=null;ib=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();e(a);b.matrixWorldInverse.getInverse(b.matrixWorld);Xb.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);
mc.setFromMatrix(Xb);ic(a);Ra.length=0;Sa.length=0;v(a,a,b);!0===J.sortObjects&&(Ra.sort(s),Sa.sort(u));r(this.renderPluginsPre,a,b);J.info.render.calls=0;J.info.render.vertices=0;J.info.render.faces=0;J.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);l=a.__webglObjectsImmediate;d=0;for(f=l.length;d<f;d++)g=l[d],h=g.object,h.visible&&(Q(h,b),x(g));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,
d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),M(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),y(Ra,b,p,n,!0,d),y(Sa,b,p,n,!0,d),z(a.__webglObjectsImmediate,"",b,p,n,!1,d)):(d=null,this.setBlending(THREE.NoBlending),y(Ra,b,p,n,!1,d),z(a.__webglObjectsImmediate,"opaque",b,p,n,!1,d),y(Sa,b,p,n,!0,d),z(a.__webglObjectsImmediate,"transparent",b,p,n,!0,d));r(this.renderPluginsPost,a,b);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&
c.minFilter!==THREE.LinearFilter&&O(c);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=C(a,b,c,d,e);fa=-1;J.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,p,mc):e.render(function(a){J.renderBufferImmediate(a,f,d)})};var ic=function(a){a.__webglObjects||(a.__webglObjects={},a.__webglObjectsImmediate=[]);for(;a.__objectsAdded.length;){var c=a.__objectsAdded[0],d=a,e=void 0,f=void 0;void 0===c.__webglInit&&(c.__webglInit=
!0,c._modelViewMatrix=new THREE.Matrix4,c._normalMatrix=new THREE.Matrix3);e=c.geometry;if(void 0!==e&&void 0===e.__webglInit)if(e.__webglInit=!0,e.addEventListener("dispose",jc),e instanceof THREE.BufferGeometry)g(e);else if(c instanceof THREE.Mesh)void 0!==c.__webglActive&&L(c,d),G(d,c,e);else if(c instanceof THREE.Line){if(!e.__webglVertexBuffer){f=e;f.__webglVertexBuffer=p.createBuffer();f.__webglColorBuffer=p.createBuffer();f.__webglLineDistanceBuffer=p.createBuffer();J.info.memory.geometries++;
var f=e,h=c,l=f.vertices.length;f.__vertexArray=new Float32Array(3*l);f.__colorArray=new Float32Array(3*l);f.__lineDistanceArray=new Float32Array(1*l);f.__webglLineCount=l;b(f,h);e.verticesNeedUpdate=!0;e.colorsNeedUpdate=!0;e.lineDistancesNeedUpdate=!0}}else c instanceof THREE.PointCloud&&!e.__webglVertexBuffer&&(f=e,f.__webglVertexBuffer=p.createBuffer(),f.__webglColorBuffer=p.createBuffer(),J.info.memory.geometries++,f=e,h=c,l=f.vertices.length,f.__vertexArray=new Float32Array(3*l),f.__colorArray=
new Float32Array(3*l),f.__sortArray=[],f.__webglParticleCount=l,b(f,h),e.verticesNeedUpdate=!0,e.colorsNeedUpdate=!0);if(void 0===c.__webglActive){if(c instanceof THREE.Mesh)if(e=c.geometry,e instanceof THREE.BufferGeometry)D(d.__webglObjects,e,c);else{if(e instanceof THREE.Geometry)for(h=0,l=e.geometryGroupsList.length;h<l;h++)f=e.geometryGroupsList[h],D(d.__webglObjects,f,c)}else c instanceof THREE.Line||c instanceof THREE.PointCloud?(e=c.geometry,D(d.__webglObjects,e,c)):(c instanceof THREE.ImmediateRenderObject||
c.immediateRenderCallback)&&d.__webglObjectsImmediate.push({id:null,object:c,opaque:null,transparent:null,z:0});c.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;)L(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1)};this.initMaterial=function(a,b,c,d){var e,f,g,h;a.addEventListener("dispose",lc);var l,n,q,r;a instanceof THREE.MeshDepthMaterial?r="depth":a instanceof THREE.MeshNormalMaterial?r="normal":a instanceof THREE.MeshBasicMaterial?r="basic":a instanceof THREE.MeshLambertMaterial?
r="lambert":a instanceof THREE.MeshPhongMaterial?r="phong":a instanceof THREE.LineBasicMaterial?r="basic":a instanceof THREE.LineDashedMaterial?r="dashed":a instanceof THREE.PointCloudMaterial&&(r="particle_basic");r?(e=THREE.ShaderLib[r],a.__webglShader={uniforms:THREE.UniformsUtils.clone(e.uniforms),vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}):a.__webglShader={uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};q=h=g=f=e=0;for(var u=b.length;q<u;q++){var s=
b[q];s.onlyShadow||!1===s.visible||(s instanceof THREE.DirectionalLight&&e++,s instanceof THREE.PointLight&&f++,s instanceof THREE.SpotLight&&g++,s instanceof THREE.HemisphereLight&&h++)}u=q=0;for(s=b.length;u<s;u++){var v=b[u];v.castShadow&&(v instanceof THREE.SpotLight&&q++,v instanceof THREE.DirectionalLight&&!v.shadowCascade&&q++)}b=q;Rb&&d&&d.skeleton&&d.skeleton.useVertexTexture?q=1024:(q=p.getParameter(p.MAX_VERTEX_UNIFORM_VECTORS),q=Math.floor((q-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&
(q=Math.min(d.skeleton.bones.length,q),q<d.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.skeleton.bones.length+", this GPU supports just "+q+" (try OpenGL instead of ANGLE)")));c={precision:Z,supportsVertexTextures:Vb,map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,
logarithmicDepthBuffer:Ha,skinning:a.skinning,maxBones:q,useVertexTexture:Rb&&d&&d.skeleton&&d.skeleton.useVertexTexture,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:b,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow&&0<b,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,
metal:a.metal,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};d=[];r?d.push(r):(d.push(a.fragmentShader),d.push(a.vertexShader));for(var w in a.defines)d.push(w),d.push(a.defines[w]);for(n in c)d.push(n),d.push(c[n]);r=d.join();var x;n=0;for(w=Ea.length;n<w;n++)if(d=Ea[n],d.code===r){x=d;x.usedTimes++;break}void 0===x&&(x=new THREE.WebGLProgram(this,r,a,c),Ea.push(x),J.info.memory.programs=Ea.length);a.program=x;x=a.program.attributes;if(a.morphTargets)for(a.numSupportedMorphTargets=
0,w="morphTarget",n=0;n<this.maxMorphTargets;n++)r=w+n,0<=x[r]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(a.numSupportedMorphNormals=0,w="morphNormal",n=0;n<this.maxMorphNormals;n++)r=w+n,0<=x[r]&&a.numSupportedMorphNormals++;a.uniformsList=[];for(l in a.__webglShader.uniforms)(n=a.program.uniforms[l])&&a.uniformsList.push([a.__webglShader.uniforms[l],n])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?p.disable(p.CULL_FACE):(b===THREE.FrontFaceDirectionCW?p.frontFace(p.CW):p.frontFace(p.CCW),
a===THREE.CullFaceBack?p.cullFace(p.BACK):a===THREE.CullFaceFront?p.cullFace(p.FRONT):p.cullFace(p.FRONT_AND_BACK),p.enable(p.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;xa!==b&&(b?p.disable(p.CULL_FACE):p.enable(p.CULL_FACE),xa=b);ma!==a&&(a?p.frontFace(p.CW):p.frontFace(p.CCW),ma=a)};this.setDepthTest=function(a){ua!==a&&(a?p.enable(p.DEPTH_TEST):p.disable(p.DEPTH_TEST),ua=a)};this.setDepthWrite=function(a){Ga!==a&&(p.depthMask(a),Ga=
a)};this.setBlending=function(a,b,c,d){a!==Ia&&(a===THREE.NoBlending?p.disable(p.BLEND):a===THREE.AdditiveBlending?(p.enable(p.BLEND),p.blendEquation(p.FUNC_ADD),p.blendFunc(p.SRC_ALPHA,p.ONE)):a===THREE.SubtractiveBlending?(p.enable(p.BLEND),p.blendEquation(p.FUNC_ADD),p.blendFunc(p.ZERO,p.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(p.enable(p.BLEND),p.blendEquation(p.FUNC_ADD),p.blendFunc(p.ZERO,p.SRC_COLOR)):a===THREE.CustomBlending?p.enable(p.BLEND):(p.enable(p.BLEND),p.blendEquationSeparate(p.FUNC_ADD,
p.FUNC_ADD),p.blendFuncSeparate(p.SRC_ALPHA,p.ONE_MINUS_SRC_ALPHA,p.ONE,p.ONE_MINUS_SRC_ALPHA)),Ia=a);if(a===THREE.CustomBlending){if(b!==ya&&(p.blendEquation(E(b)),ya=b),c!==Na||d!==da)p.blendFunc(E(c),E(d)),Na=c,da=d}else da=Na=ya=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Sb),a.__webglTexture=p.createTexture(),J.info.memory.textures++);p.activeTexture(p.TEXTURE0+b);p.bindTexture(p.TEXTURE_2D,a.__webglTexture);p.pixelStorei(p.UNPACK_FLIP_Y_WEBGL,
a.flipY);p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);p.pixelStorei(p.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height),e=E(a.format),f=E(a.type);H(p.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,l=g.length;h<l;h++)c=g[h],p.texImage2D(p.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else p.texImage2D(p.TEXTURE_2D,0,e,c.width,c.height,0,e,
f,c.data);else if(a instanceof THREE.CompressedTexture)for(h=0,l=g.length;h<l;h++)c=g[h],a.format!==THREE.RGBAFormat?p.compressedTexImage2D(p.TEXTURE_2D,h,e,c.width,c.height,0,c.data):p.texImage2D(p.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);else if(0<g.length&&d){h=0;for(l=g.length;h<l;h++)c=g[h],p.texImage2D(p.TEXTURE_2D,h,e,e,f,c);a.generateMipmaps=!1}else p.texImage2D(p.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&p.generateMipmap(p.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else p.activeTexture(p.TEXTURE0+
b),p.bindTexture(p.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",kc);a.__webglTexture=p.createTexture();J.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=E(a.format),e=E(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];p.bindTexture(p.TEXTURE_CUBE_MAP,
a.__webglTexture);H(p.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=p.createFramebuffer();a.__webglRenderbuffer[f]=p.createRenderbuffer();p.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=p.TEXTURE_CUBE_MAP_POSITIVE_X+f;p.bindFramebuffer(p.FRAMEBUFFER,a.__webglFramebuffer[f]);p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,h,g.__webglTexture,0);T(a.__webglRenderbuffer[f],a)}c&&p.generateMipmap(p.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=
p.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:p.createRenderbuffer(),p.bindTexture(p.TEXTURE_2D,a.__webglTexture),H(p.TEXTURE_2D,a,c),p.texImage2D(p.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=p.TEXTURE_2D,p.bindFramebuffer(p.FRAMEBUFFER,a.__webglFramebuffer),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?p.framebufferRenderbuffer(p.FRAMEBUFFER,p.DEPTH_ATTACHMENT,
p.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&p.framebufferRenderbuffer(p.FRAMEBUFFER,p.DEPTH_STENCIL_ATTACHMENT,p.RENDERBUFFER,a.__webglRenderbuffer):T(a.__webglRenderbuffer,a),c&&p.generateMipmap(p.TEXTURE_2D);b?p.bindTexture(p.TEXTURE_CUBE_MAP,null):p.bindTexture(p.TEXTURE_2D,null);p.bindRenderbuffer(p.RENDERBUFFER,null);p.bindFramebuffer(p.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=zb,a=vb,
d=pa,e=Ma);b!==bb&&(p.bindFramebuffer(p.FRAMEBUFFER,b),p.viewport(d,e,c,a),bb=b);Kb=c;Lb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);
THREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,g=d.defines,h=d.__webglShader.uniforms,l=d.attributes,n=d.__webglShader.vertexShader,q=d.__webglShader.fragmentShader,s=d.index0AttributeName;void 0===s&&!0===e.morphTargets&&(s="position");var u="SHADOWMAP_TYPE_BASIC";e.shadowMapType===THREE.PCFShadowMap?u="SHADOWMAP_TYPE_PCF":e.shadowMapType===THREE.PCFSoftShadowMap&&(u="SHADOWMAP_TYPE_PCF_SOFT");var w,v;w=[];for(var r in g)v=g[r],!1!==v&&(v="#define "+r+" "+v,w.push(v));
w=w.join("\n");g=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d="":(d=["precision "+e.precision+" float;","precision "+e.precision+" int;",w,e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,"#define MAX_BONES "+
e.maxBones,e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals?"#define USE_MORPHNORMALS":"",e.wrapAround?"#define WRAP_AROUND":
"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+u:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=["precision "+e.precision+" float;","precision "+e.precision+" int;",e.bumpMap||e.normalMap?"#extension GL_OES_standard_derivatives : enable":"",w,"#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,e.alphaTest?"#define ALPHATEST "+e.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"",e.useFog&&e.fog?"#define USE_FOG":
"",e.useFog&&e.fogExp?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.metal?"#define METAL":"",e.wrapAround?"#define WRAP_AROUND":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":
"",e.shadowMapEnabled?"#define "+u:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));n=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+n);q=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,b+q);f.attachShader(g,n);f.attachShader(g,q);void 0!==s&&f.bindAttribLocation(g,0,s);f.linkProgram(g);!1===f.getProgramParameter(g,f.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),
console.error("gl.VALIDATE_STATUS",f.getProgramParameter(g,f.VALIDATE_STATUS)),console.error("gl.getError()",f.getError()));""!==f.getProgramInfoLog(g)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f.getProgramInfoLog(g));f.deleteShader(n);f.deleteShader(q);s="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");e.useVertexTexture?(s.push("boneTexture"),s.push("boneTextureWidth"),s.push("boneTextureHeight")):
s.push("boneGlobalMatrices");e.logarithmicDepthBuffer&&s.push("logDepthBufFC");for(var y in h)s.push(y);h=s;y={};s=0;for(b=h.length;s<b;s++)u=h[s],y[u]=f.getUniformLocation(g,u);this.uniforms=y;s="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(h=0;h<e.maxMorphTargets;h++)s.push("morphTarget"+h);for(h=0;h<e.maxMorphNormals;h++)s.push("morphNormal"+h);for(var z in l)s.push(z);e=s;l={};z=0;for(h=e.length;z<h;z++)y=e[z],l[y]=f.getAttribLocation(g,y);this.attributes=
l;this.id=a++;this.code=c;this.usedTimes=1;this.program=g;this.vertexShader=n;this.fragmentShader=q;return this}}();
THREE.WebGLShader=function(){var a=function(a){a=a.split("\n");for(var c=0;c<a.length;c++)a[c]=c+1+": "+a[c];return a.join("\n")};return function(b,c,d){c=b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==b.getShaderInfoLog(c)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b.getShaderInfoLog(c)),console.warn(a(d)));return c}}();
THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.color=new THREE.Color;this.material=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};
THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};
THREE.GeometryUtils={merge:function(a,b,c){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};
THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.Texture(void 0,b);e.load(a,function(a){f.image=a;f.needsUpdate=!0;c&&c(f)},void 0,function(a){d&&d(a)});f.sourceFile=a;return f},loadTextureCube:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.CubeTexture([],b);f.flipY=!1;var g=0;b=function(b){e.load(a[b],function(a){f.images[b]=a;g+=1;6===g&&(f.needsUpdate=!0,c&&
c(f))})};d=0;for(var h=a.length;d<h;++d)b(d);return f},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");
f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,l=g.createImageData(d,e),n=l.data,q=0;q<d;q++)for(var s=0;s<e;s++){var u=0>s-1?0:s-1,w=s+1>e-1?e-1:s+1,v=0>q-1?0:q-1,r=q+1>d-1?d-1:q+1,y=[],z=[0,0,h[4*(s*d+q)]/255*b];y.push([-1,0,h[4*(s*d+v)]/255*b]);y.push([-1,-1,h[4*(u*d+v)]/255*b]);y.push([0,-1,h[4*(u*d+q)]/255*b]);y.push([1,-1,h[4*(u*d+r)]/255*b]);y.push([1,0,h[4*(s*d+r)]/255*b]);y.push([1,1,h[4*(w*d+r)]/255*b]);y.push([0,1,h[4*(w*d+q)]/255*
b]);y.push([-1,1,h[4*(w*d+v)]/255*b]);u=[];v=y.length;for(w=0;w<v;w++){var r=y[w],x=y[(w+1)%v],r=[r[0]-z[0],r[1]-z[1],r[2]-z[2]],x=[x[0]-z[0],x[1]-z[1],x[2]-z[2]];u.push(c([r[1]*x[2]-r[2]*x[1],r[2]*x[0]-r[0]*x[2],r[0]*x[1]-r[1]*x[0]]))}y=[0,0,0];for(w=0;w<u.length;w++)y[0]+=u[w][0],y[1]+=u[w][1],y[2]+=u[w][2];y[0]/=u.length;y[1]/=u.length;y[2]/=u.length;z=4*(s*d+q);n[z]=(y[0]+1)/2*255|0;n[z+1]=(y[1]+1)/2*255|0;n[z+2]=255*y[2]|0;n[z+3]=255}g.putImageData(l,0,0);return f},generateDataTexture:function(a,
b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(a){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing.";}},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=
a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=String(a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,l,n,q,s,u,w,v,r,y,z=b.glyphs[a]||b.glyphs["?"];if(z){if(z.o)for(b=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),n=b.length,a=0;a<n;)switch(l=b[a++],l){case "m":l=b[a++]*c+d;q=b[a++]*c;e.moveTo(l,q);
break;case "l":l=b[a++]*c+d;q=b[a++]*c;e.lineTo(l,q);break;case "q":l=b[a++]*c+d;q=b[a++]*c;w=b[a++]*c+d;v=b[a++]*c;e.quadraticCurveTo(w,v,l,q);if(g=f[f.length-1])for(s=g.x,u=g.y,g=1,h=this.divisions;g<=h;g++){var x=g/h;THREE.Shape.Utils.b2(x,s,w,l);THREE.Shape.Utils.b2(x,u,v,q)}break;case "b":if(l=b[a++]*c+d,q=b[a++]*c,w=b[a++]*c+d,v=b[a++]*c,r=b[a++]*c+d,y=b[a++]*c,e.bezierCurveTo(w,v,r,y,l,q),g=f[f.length-1])for(s=g.x,u=g.y,g=1,h=this.divisions;g<=h;g++)x=g/h,THREE.Shape.Utils.b3(x,s,w,r,l),THREE.Shape.Utils.b3(x,
u,v,y,q)}return{offset:z.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],l,n,q;if(0<b(a))for(n=0;n<e;n++)g[n]=n;else for(n=0;n<e;n++)g[n]=e-1-n;var s=2*e;for(n=e-1;2<e;){if(0>=s--){console.log("Warning, unable to triangulate polygon!");break}l=n;e<=l&&(l=0);n=l+1;e<=n&&(n=0);q=n+1;e<=q&&(q=0);var u;a:{var w=u=void 0,v=void 0,r=void 0,y=void 0,z=void 0,x=void 0,G=void 0,D=void 0,
w=a[g[l]].x,v=a[g[l]].y,r=a[g[n]].x,y=a[g[n]].y,z=a[g[q]].x,x=a[g[q]].y;if(1E-10>(r-w)*(x-v)-(y-v)*(z-w))u=!1;else{var A=void 0,F=void 0,L=void 0,C=void 0,B=void 0,N=void 0,Q=void 0,ea=void 0,S=void 0,R=void 0,S=ea=Q=D=G=void 0,A=z-r,F=x-y,L=w-z,C=v-x,B=r-w,N=y-v;for(u=0;u<e;u++)if(G=a[g[u]].x,D=a[g[u]].y,!(G===w&&D===v||G===r&&D===y||G===z&&D===x)&&(Q=G-w,ea=D-v,S=G-r,R=D-y,G-=z,D-=x,S=A*R-F*S,Q=B*ea-N*Q,ea=L*D-C*G,-1E-10<=S&&-1E-10<=ea&&-1E-10<=Q)){u=!1;break a}u=!0}}if(u){f.push([a[g[l]],a[g[n]],
a[g[q]]]);h.push([g[l],g[n],g[q]]);l=n;for(q=n+1;q<e;l++,q++)g[l]=g[q];e--;s=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,l;g<=h;)if(d=Math.floor(g+(h-g)/2),l=c[d]-f,0>l)g=d+1;else if(0<l)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,l,n,q,s=a[0]instanceof THREE.Vector3;q=s?new THREE.Vector3:new THREE.Vector2;l=0;for(n=a.length;l<n;l++)h=a[l],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),s&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),q.add(h);a={minX:e,minY:f,maxX:b,maxY:c};s&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,l;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,l=g/c.maxX,l=b.getUtoTmapping(l,g),g=b.getPoint(l),l=b.getTangent(l),l.set(-l.y,l.x).multiplyScalar(h),f.x=g.x+l.x,f.y=g.y+l.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(l);l=l.getPoint(1);h.push(l.x);h.push(l.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,l,n,q,s,u,w,v,r;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];l=f[3];s=f[0];u=f[1];0<c.length?(g=c[c.length-1],w=g.x,
v=g.y):(g=this.actions[d-1].args,w=g[g.length-2],v=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b2(r,w,s,h),r=THREE.Shape.Utils.b2(r,v,u,l),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];l=f[5];s=f[0];u=f[1];n=f[2];q=f[3];0<c.length?(g=c[c.length-1],w=g.x,v=g.y):(g=this.actions[d-1].args,w=g[g.length-2],v=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b3(r,w,s,n,h),r=THREE.Shape.Utils.b3(r,v,u,q,l),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;r=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;r=r.concat(f[0]);r=new THREE.SplineCurve(r);for(f=1;f<=g;f++)c.push(r.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];l=f[1];u=f[2];n=f[3];g=f[4];s=!!f[5];w=g-n;v=2*a;for(f=1;f<=v;f++)r=f/v,s||(r=1-r),r=n+r*w,g=h+u*Math.cos(r),r=l+u*Math.sin(r),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.ELLIPSE:for(h=f[0],l=f[1],u=f[2],q=f[3],n=f[4],g=f[5],s=!!f[6],w=g-n,v=2*a,f=1;f<=v;f++)r=f/v,s||
(r=1-r),r=n+r*w,g=h+u*Math.cos(r),r=l+q*Math.sin(r),c.push(new THREE.Vector2(g,r))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],l=h.x-g.x,n=h.y-g.y;if(1E-10<Math.abs(n)){if(0>n&&(g=b[f],l=-l,h=b[e],n=-n),!(a.y<g.y||a.y>h.y))if(a.y==g.y){if(a.x==g.x)return!0}else{e=n*(a.x-g.x)-l*(a.y-g.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=
h.x))return!0}return d}var e=function(a){var b,c,d,e,f=[],g=new THREE.Path;b=0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);0!=g.actions.length&&f.push(g);return f}(this.actions);if(0==e.length)return[];if(!0===b)return c(e);var f,g,h,l=[];if(1==e.length)return g=e[0],h=new THREE.Shape,h.actions=g.actions,h.curves=g.curves,l.push(h),l;var n=!THREE.Shape.Utils.isClockWise(e[0].getPoints()),n=a?!n:n;
h=[];var q=[],s=[],u=0,w;q[u]=void 0;s[u]=[];var v,r;v=0;for(r=e.length;v<r;v++)g=e[v],w=g.getPoints(),f=THREE.Shape.Utils.isClockWise(w),(f=a?!f:f)?(!n&&q[u]&&u++,q[u]={s:new THREE.Shape,p:w},q[u].s.actions=g.actions,q[u].s.curves=g.curves,n&&u++,s[u]=[]):s[u].push({h:g,p:w[0]});if(!q[0])return c(e);if(1<q.length){v=!1;r=[];g=0;for(e=q.length;g<e;g++)h[g]=[];g=0;for(e=q.length;g<e;g++)for(f=s[g],n=0;n<f.length;n++){u=f[n];w=!0;for(var y=0;y<q.length;y++)d(u.p,q[y].p)&&(g!=y&&r.push({froms:g,tos:y,
hole:n}),w?(w=!1,h[y].push(u)):v=!0);w&&h[g].push(u)}0<r.length&&(v||(s=h))}v=0;for(r=q.length;v<r;v++)for(h=q[v].s,l.push(h),g=s[v],e=0,f=g.length;e<f;e++)h.holes.push(g[e].h);return l};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};
THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};
THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,l=e.x-d.x,n=e.y-d.y,q=a.x-d.x,s=a.y-d.y,L=h*l-g*n,C=h*q-g*s;if(1E-10<Math.abs(L)){if(0<L){if(0>C||C>L)return[];l=n*q-l*s;if(0>l||l>L)return[]}else{if(0<C||C<L)return[];l=n*q-l*s;if(0<l||l<L)return[]}if(0==l)return!f||0!=C&&C!=L?[a]:[];if(l==L)return!f||0!=C&&C!=L?[b]:[];if(0==C)return[d];
if(C==L)return[e];f=l/L;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!=C||n*q!=l*s)return[];h=0==g&&0==h;l=0==l&&0==n;if(h&&l)return a.x!=d.x||a.y!=d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(l)return c(a,b,d)?[d]:[];0!=g?(a.x<b.x?(g=a,l=a.x,h=b,a=b.x):(g=b,l=b.x,h=a,a=a.x),d.x<e.x?(b=d,L=d.x,n=e,d=e.x):(b=e,L=e.x,n=d,d=d.x)):(a.y<b.y?(g=a,l=a.y,h=b,a=b.y):(g=b,l=b.y,h=a,a=a.y),d.y<e.y?(b=d,L=d.y,n=e,d=e.y):(b=e,L=e.y,n=d,d=d.y));return l<=L?a<L?[]:a==L?f?[]:[b]:a<=d?[b,h]:[b,n]:l>d?[]:l==d?f?[]:[g]:a<=d?[g,h]:
[g,n]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return 1E-10<Math.abs(a)?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,l,n,q={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=h.length;f<g;f++)n=h[f].x+":"+h[f].y,void 0!==q[n]&&console.log("Duplicate point",n),q[n]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],l[b]);if(!d)return!1;
d=l.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(l[b],l[f],l[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,l;for(e=0;e<n.length;e++)for(f=b[n[e]],h=0;h<f.length;h++)if(l=h+1,l%=f.length,l=d(a,c,f[h],f[l],!0),0<l.length)return!0;return!1}var h=a.concat(),l,n=[],q,s,F,L,C,B=[],N,Q,ea,S=0;for(q=b.length;S<q;S++)n.push(S);N=0;for(var R=2*n.length;0<n.length;){R--;if(0>R){console.log("Infinite Loop! Holes left:"+
n.length+", Probably Hole outside Shape!");break}for(s=N;s<h.length;s++){F=h[s];q=-1;for(S=0;S<n.length;S++)if(L=n[S],C=F.x+":"+F.y+":"+L,void 0===B[C]){l=b[L];for(Q=0;Q<l.length;Q++)if(L=l[Q],c(s,Q)&&!f(F,L)&&!g(F,L)){q=Q;n.splice(S,1);N=h.slice(0,s+1);L=h.slice(s);Q=l.slice(q);ea=l.slice(0,q+1);h=N.concat(Q).concat(ea).concat(L);N=s;break}if(0<=q)break;B[C]=!0}if(0<=q)break}}return h}(a,b);var s=THREE.FontUtils.Triangulate(f,!1);f=0;for(g=s.length;f<g;f++)for(l=s[f],h=0;3>h;h++)n=l[h].x+":"+l[h].y,
n=q[n],void 0!==n&&(l[h]=n);return s.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,
b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.EllipseCurve.prototype.getPoint=function(a){var b;b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});
THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(a){if(!0!==a.initialized){for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(0>a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=
0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var f=a.hierarchy[b].keys[c].morphTargets[e];d[f]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var g=
{};for(f in d){for(e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===f){g[f]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(g[f]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=g}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=
!0;return a}},parse:function(a){var b=function(a,c){c.push(a);for(var d=0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a instanceof THREE.SkinnedMesh)for(var d=0;d<a.skeleton.bones.length;d++)c.push(a.skeleton.bones[d]);else b(a,c);return c},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].update(a)}};
THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(a,b){this.currentTime=void 0!==a?a:0;this.weight=void 0!==b?b:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)};
THREE.Animation.prototype.stop=function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)};
THREE.Animation.prototype.reset=function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a];c.matrixAutoUpdate=!0;void 0===c.animationCache&&(c.animationCache={});void 0===c.animationCache[this.data.name]&&(c.animationCache[this.data.name]={},c.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},c.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},c.animationCache[this.data.name].originalMatrix=c.matrix);for(var c=c.animationCache[this.data.name],d=0;3>d;d++){for(var e=
this.keyTypes[d],f=this.data.hierarchy[a].keys[0],g=this.getNextKeyWith(e,a,1);g.time<this.currentTime&&g.index>f.index;)f=g,g=this.getNextKeyWith(e,a,g.index+1);c.prevKey[e]=f;c.nextKey[e]=g}}};
THREE.Animation.prototype.update=function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c=[],d=[],e,s,u,w,v,r;e=(a.length-1)*b;s=Math.floor(e);e-=s;c[0]=0===s?s:s-1;c[1]=s;c[2]=s>a.length-2?s:s+1;c[3]=s>a.length-3?s:s+2;s=a[c[0]];w=a[c[1]];v=a[c[2]];r=a[c[3]];c=e*e;u=e*c;d[0]=f(s[0],w[0],v[0],r[0],e,c,u);d[1]=f(s[1],w[1],v[1],r[1],e,c,u);d[2]=f(s[2],w[2],v[2],r[2],e,c,u);return d},f=function(a,b,c,d,e,f,u){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*u+
(-3*(b-c)-2*a-d)*f+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(!0===this.loop&&this.currentTime>f)this.currentTime%=f,this.reset();else if(!1===this.loop&&this.currentTime>f){this.stop();return}f=0;for(var h=this.hierarchy.length;f<h;f++)for(var l=this.hierarchy[f],n=l.animationCache[this.data.name],q=0;3>q;q++){var s=this.keyTypes[q],u=n.prevKey[s],w=n.nextKey[s];if(w.time<=this.currentTime){u=this.data.hierarchy[f].keys[0];
for(w=this.getNextKeyWith(s,f,1);w.time<this.currentTime&&w.index>u.index;)u=w,w=this.getNextKeyWith(s,f,w.index+1);n.prevKey[s]=u;n.nextKey[s]=w}l.matrixAutoUpdate=!0;l.matrixWorldNeedsUpdate=!0;var v=(this.currentTime-u.time)/(w.time-u.time),r=u[s],y=w[s];0>v&&(v=0);1<v&&(v=1);if("pos"===s)if(this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=r[0]+(y[0]-r[0])*v,c.y=r[1]+(y[1]-r[1])*v,c.z=r[2]+(y[2]-r[2])*v,l instanceof THREE.Bone?(u=this.weight/(this.weight+l.accumulatedPosWeight),l.position.lerp(c,
u),l.accumulatedPosWeight+=this.weight):l.position.copy(c);else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith("pos",f,u.index-1).pos,a[1]=r,a[2]=y,a[3]=this.getNextKeyWith("pos",f,w.index+1).pos,v=.33*v+.33,w=e(a,v),u=1,l instanceof THREE.Bone&&(u=this.weight/(this.weight+l.accumulatedPosWeight),l.accumulatedPosWeight+=this.weight),s=l.position,s.x+=(w[0]-s.x)*u,s.y+=(w[1]-s.y)*u,s.z+=(w[2]-
s.z)*u,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(v=e(a,1.01*v),b.set(v[0],v[1],v[2]),b.sub(s),b.y=0,b.normalize(),v=Math.atan2(b.x,b.z),l.rotation.set(0,v,0))}else"rot"===s?(THREE.Quaternion.slerp(r,y,d,v),l instanceof THREE.Bone?0===l.accumulatedRotWeight?(l.quaternion.copy(d),l.accumulatedRotWeight=this.weight):(u=this.weight/(this.weight+l.accumulatedRotWeight),THREE.Quaternion.slerp(l.quaternion,d,l.quaternion,u),l.accumulatedRotWeight+=this.weight):l.quaternion.copy(d)):
"scl"===s&&(c.x=r[0]+(y[0]-r[0])*v,c.y=r[1]+(y[1]-r[1])*v,c.z=r[2]+(y[2]-r[2])*v,l instanceof THREE.Bone?(u=this.weight/(this.weight+l.accumulatedSclWeight),l.scale.lerp(c,u),l.accumulatedSclWeight+=this.weight):l.scale.copy(c))}return!0}}}();
THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a){this.currentTime=void 0!==a?a:0;if(!1===this.isPlaying){this.isPlaying=!0;var b=this.hierarchy.length,c,d;for(a=0;a<b;a++)c=this.hierarchy[a],d=this.data.hierarchy[a],void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=c[1],this.startTime=Math.min(c[0].time,
this.startTime),this.endTime=Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;d.copy(b.matrix);b.matrix=d;delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(!1!==this.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime>a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var f=d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index>f.index;)f=g,g=e[f.index+1];d.prevKey=
f;d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):f.interpolate(g,g.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};
THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};THREE.MorphAnimation=function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.isPlaying=!1};
THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var a=0,b=0;return function(c){if(!1!==this.isPlaying){this.currentTime+=c;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);c=this.duration/this.frames;var d=Math.floor(this.currentTime/c);d!=b&&(this.mesh.morphTargetInfluences[a]=0,this.mesh.morphTargetInfluences[b]=1,this.mesh.morphTargetInfluences[d]=
0,a=b,b=d);this.mesh.morphTargetInfluences[d]=this.currentTime%c/c;this.mesh.morphTargetInfluences[a]=1-this.mesh.morphTargetInfluences[d]}}}()};
THREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,r){var y,z=h.widthSegments,x=h.heightSegments,G=e/2,D=f/2,A=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)y="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)y="y",x=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)y="x",z=h.depthSegments;var F=z+1,L=x+1,C=e/z,B=f/x,N=new THREE.Vector3;N[y]=0<g?1:-1;for(e=0;e<L;e++)for(f=0;f<F;f++){var Q=new THREE.Vector3;Q[a]=(f*C-G)*c;Q[b]=(e*B-D)*d;Q[y]=g;h.vertices.push(Q)}for(e=
0;e<x;e++)for(f=0;f<z;f++)D=f+F*e,a=f+F*(e+1),b=f+1+F*(e+1),c=f+1+F*e,d=new THREE.Vector2(f/z,1-e/x),g=new THREE.Vector2(f/z,1-(e+1)/x),y=new THREE.Vector2((f+1)/z,1-(e+1)/x),G=new THREE.Vector2((f+1)/z,1-e/x),D=new THREE.Face3(D+A,a+A,c+A),D.normal.copy(N),D.vertexNormals.push(N.clone(),N.clone(),N.clone()),D.materialIndex=r,h.faces.push(D),h.faceVertexUvs[0].push([d,g,G]),D=new THREE.Face3(a+A,b+A,c+A),D.normal.copy(N),D.vertexNormals.push(N.clone(),N.clone(),N.clone()),D.materialIndex=r,h.faces.push(D),
h.faceVertexUvs[0].push([g.clone(),y,G.clone()])}THREE.Geometry.call(this);this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;var h=this;d=a/2;e=b/2;f=c/2;g("z","y",-1,-1,c,b,d,0);g("z","y",1,-1,c,b,-d,1);g("x","z",1,1,a,c,e,2);g("x","z",1,-1,a,c,-e,3);g("x","y",1,-1,a,b,f,4);g("x","y",-1,-1,a,b,-f,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(.5,.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3,l=c+e/b*d;h.x=a*Math.cos(l);h.y=a*Math.sin(l);this.vertices.push(h);f.push(new THREE.Vector2((h.x/a+1)/2,(h.y/a+1)/2))}c=new THREE.Vector3(0,0,1);for(e=1;e<=
b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(a,b,c,d,e,f){console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry.");return new THREE.BoxGeometry(a,b,c,d,e,f)};
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f};a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=d||8;e=e||1;f=void 0!==f?f:!1;var g=c/2,h,l,n=[],q=[];for(l=0;l<=e;l++){var s=[],u=[],w=l/e,v=w*(b-a)+a;for(h=0;h<=d;h++){var r=h/d,y=new THREE.Vector3;y.x=v*Math.sin(r*Math.PI*2);y.y=-w*c+g;y.z=v*Math.cos(r*Math.PI*2);this.vertices.push(y);s.push(this.vertices.length-1);u.push(new THREE.Vector2(r,
1-w))}n.push(s);q.push(u)}c=(b-a)/c;for(h=0;h<d;h++)for(0!==a?(s=this.vertices[n[0][h]].clone(),u=this.vertices[n[0][h+1]].clone()):(s=this.vertices[n[1][h]].clone(),u=this.vertices[n[1][h+1]].clone()),s.setY(Math.sqrt(s.x*s.x+s.z*s.z)*c).normalize(),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*c).normalize(),l=0;l<e;l++){var w=n[l][h],v=n[l+1][h],r=n[l+1][h+1],y=n[l][h+1],z=s.clone(),x=s.clone(),G=u.clone(),D=u.clone(),A=q[l][h].clone(),F=q[l+1][h].clone(),L=q[l+1][h+1].clone(),C=q[l][h+1].clone();this.faces.push(new THREE.Face3(w,
v,y,[z,x,D]));this.faceVertexUvs[0].push([A,F,C]);this.faces.push(new THREE.Face3(v,r,y,[x.clone(),G,D.clone()]));this.faceVertexUvs[0].push([F.clone(),L,C.clone()])}if(!1===f&&0<a)for(this.vertices.push(new THREE.Vector3(0,g,0)),h=0;h<d;h++)w=n[0][h],v=n[0][h+1],r=this.vertices.length-1,z=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),G=new THREE.Vector3(0,1,0),A=q[0][h].clone(),F=q[0][h+1].clone(),L=new THREE.Vector2(F.x,0),this.faces.push(new THREE.Face3(w,v,r,[z,x,G])),this.faceVertexUvs[0].push([A,
F,L]);if(!1===f&&0<b)for(this.vertices.push(new THREE.Vector3(0,-g,0)),h=0;h<d;h++)w=n[l][h+1],v=n[l][h],r=this.vertices.length-1,z=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),G=new THREE.Vector3(0,-1,0),A=q[l][h+1].clone(),F=q[l][h].clone(),L=new THREE.Vector2(F.x,1),this.faces.push(new THREE.Face3(w,v,r,[z,x,G])),this.faceVertexUvs[0].push([A,F,L]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=THREE.Math.sign,e=1,e=a.x-b.x,f=a.y-b.y,g=c.x-a.x,h=c.y-a.y,l=e*e+f*f;if(1E-10<Math.abs(e*h-f*g)){var n=Math.sqrt(l),d=Math.sqrt(g*g+h*h),l=b.x-f/n;b=b.y+e/n;g=((c.x-h/d-l)*h-(c.y+g/d-b)*g)/(e*h-f*g);c=l+e*g-a.x;a=b+f*g-a.y;e=c*c+a*a;if(2>=e)return new THREE.Vector2(c,a);e=Math.sqrt(e/2)}else a=!1,1E-10<e?1E-10<g&&(a=!0):-1E-10>e?-1E-10>g&&
(a=!0):d(f)==d(h)&&(a=!0),a?(c=-f,a=e,e=Math.sqrt(l)):(c=e,a=f,e=Math.sqrt(l/2));return new THREE.Vector2(c/e,a/e)}function e(c,d){var e,f;for(K=c.length;0<=--K;){e=K;f=K-1;0>f&&(f=c.length-1);for(var g=0,h=w+2*q,g=0;g<h;g++){var l=V*g,n=V*(g+1),r=d+e+l,l=d+f+l,s=d+f+n,n=d+e+n,u=c,v=g,y=h,z=e,A=f,r=r+ea,l=l+ea,s=s+ea,n=n+ea;Q.faces.push(new THREE.Face3(r,l,n,null,null,x));Q.faces.push(new THREE.Face3(l,s,n,null,null,x));r=G.generateSideWallUV(Q,a,u,b,r,l,s,n,v,y,z,A);Q.faceVertexUvs[0].push([r[0],
r[1],r[3]]);Q.faceVertexUvs[0].push([r[1],r[2],r[3]])}}}function f(a,b,c){Q.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=ea;d+=ea;e+=ea;Q.faces.push(new THREE.Face3(c,d,e,null,null,z));c=f?G.generateBottomUV(Q,a,b,c,d,e):G.generateTopUV(Q,a,b,c,d,e);Q.faceVertexUvs[0].push(c)}var h=void 0!==b.amount?b.amount:100,l=void 0!==b.bevelThickness?b.bevelThickness:6,n=void 0!==b.bevelSize?b.bevelSize:l-2,q=void 0!==b.bevelSegments?b.bevelSegments:3,s=void 0!==b.bevelEnabled?b.bevelEnabled:
!0,u=void 0!==b.curveSegments?b.curveSegments:12,w=void 0!==b.steps?b.steps:1,v=b.extrudePath,r,y=!1,z=b.material,x=b.extrudeMaterial,G=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,D,A,F,L;v&&(r=v.getSpacedPoints(w),y=!0,s=!1,D=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(v,w,!1),A=new THREE.Vector3,F=new THREE.Vector3,L=new THREE.Vector3);s||(n=l=q=0);var C,B,N,Q=this,ea=this.vertices.length,v=a.extractPoints(u),u=v.shape,S=v.holes;if(v=!THREE.Shape.Utils.isClockWise(u)){u=
u.reverse();B=0;for(N=S.length;B<N;B++)C=S[B],THREE.Shape.Utils.isClockWise(C)&&(S[B]=C.reverse());v=!1}var R=THREE.Shape.Utils.triangulateShape(u,S),M=u;B=0;for(N=S.length;B<N;B++)C=S[B],u=u.concat(C);var H,T,O,U,E,V=u.length,Y,Z=R.length,v=[],K=0;O=M.length;H=O-1;for(T=K+1;K<O;K++,H++,T++)H===O&&(H=0),T===O&&(T=0),v[K]=d(M[K],M[H],M[T]);var ra=[],ca,$=v.concat();B=0;for(N=S.length;B<N;B++){C=S[B];ca=[];K=0;O=C.length;H=O-1;for(T=K+1;K<O;K++,H++,T++)H===O&&(H=0),T===O&&(T=0),ca[K]=d(C[K],C[H],C[T]);
ra.push(ca);$=$.concat(ca)}for(H=0;H<q;H++){O=H/q;U=l*(1-O);T=n*Math.sin(O*Math.PI/2);K=0;for(O=M.length;K<O;K++)E=c(M[K],v[K],T),f(E.x,E.y,-U);B=0;for(N=S.length;B<N;B++)for(C=S[B],ca=ra[B],K=0,O=C.length;K<O;K++)E=c(C[K],ca[K],T),f(E.x,E.y,-U)}T=n;for(K=0;K<V;K++)E=s?c(u[K],$[K],T):u[K],y?(F.copy(D.normals[0]).multiplyScalar(E.x),A.copy(D.binormals[0]).multiplyScalar(E.y),L.copy(r[0]).add(F).add(A),f(L.x,L.y,L.z)):f(E.x,E.y,0);for(O=1;O<=w;O++)for(K=0;K<V;K++)E=s?c(u[K],$[K],T):u[K],y?(F.copy(D.normals[O]).multiplyScalar(E.x),
A.copy(D.binormals[O]).multiplyScalar(E.y),L.copy(r[O]).add(F).add(A),f(L.x,L.y,L.z)):f(E.x,E.y,h/w*O);for(H=q-1;0<=H;H--){O=H/q;U=l*(1-O);T=n*Math.sin(O*Math.PI/2);K=0;for(O=M.length;K<O;K++)E=c(M[K],v[K],T),f(E.x,E.y,h+U);B=0;for(N=S.length;B<N;B++)for(C=S[B],ca=ra[B],K=0,O=C.length;K<O;K++)E=c(C[K],ca[K],T),y?f(E.x,E.y+r[w-1].y,r[w-1].x+U):f(E.x,E.y,h+U)}(function(){if(s){var a;a=0*V;for(K=0;K<Z;K++)Y=R[K],g(Y[2]+a,Y[1]+a,Y[0]+a,!0);a=w+2*q;a*=V;for(K=0;K<Z;K++)Y=R[K],g(Y[0]+a,Y[1]+a,Y[2]+a,!1)}else{for(K=
0;K<Z;K++)Y=R[K],g(Y[2],Y[1],Y[0],!0);for(K=0;K<Z;K++)Y=R[K],g(Y[0]+V*w,Y[1]+V*w,Y[2]+V*w,!1)}})();(function(){var a=0;e(M,a);a+=M.length;B=0;for(N=S.length;B<N;B++)C=S[B],e(C,a),a+=C.length})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,e),new THREE.Vector2(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,l,n,q,s){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;l=a.vertices[f].y;f=a.vertices[f].z;n=a.vertices[g].x;
q=a.vertices[g].y;g=a.vertices[g].z;s=a.vertices[h].x;var u=a.vertices[h].y;a=a.vertices[h].z;return.01>Math.abs(c-l)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-f),new THREE.Vector2(n,1-g),new THREE.Vector2(s,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(l,1-f),new THREE.Vector2(q,1-g),new THREE.Vector2(u,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var l=e.shape,n=e.holes;if(!THREE.Shape.Utils.isClockWise(l))for(l=l.reverse(),e=0,f=n.length;e<f;e++)g=n[e],THREE.Shape.Utils.isClockWise(g)&&(n[e]=g.reverse());var q=THREE.Shape.Utils.triangulateShape(l,n);e=0;for(f=n.length;e<f;e++)g=n[e],
l=l.concat(g);n=l.length;f=q.length;for(e=0;e<n;e++)g=l[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)n=q[e],l=n[0]+h,g=n[1]+h,n=n[2]+h,this.faces.push(new THREE.Face3(l,g,n,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,l,g,n))};
THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);b=b||12;c=c||0;d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var l=c+g*f*d,n=Math.cos(l),q=Math.sin(l),l=0,s=a.length;l<s;l++){var u=a[l],w=new THREE.Vector3;w.x=n*u.x-q*u.y;w.y=q*u.x+n*u.y;w.z=u.z;this.vertices.push(w)}c=a.length;g=0;for(h=b;g<h;g++)for(l=0,s=a.length-1;l<s;l++){b=q=l+c*g;d=q+c;var n=q+1+c,q=q+1,u=g*f,w=l*e,v=u+f,r=w+e;this.faces.push(new THREE.Face3(b,d,q));this.faceVertexUvs[0].push([new THREE.Vector2(u,
w),new THREE.Vector2(v,w),new THREE.Vector2(u,r)]);this.faces.push(new THREE.Face3(d,n,q));this.faceVertexUvs[0].push([new THREE.Vector2(v,w),new THREE.Vector2(v,r),new THREE.Vector2(u,r)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,l=a/c,n=b/d,q=new THREE.Vector3(0,0,1);for(a=0;a<h;a++){var s=a*n-f;for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*l-e,-s,0))}for(a=0;a<d;a++)for(b=0;b<c;b++){var u=b+g*a,e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,l=new THREE.Vector2(b/c,1-a/d),n=new THREE.Vector2(b/c,1-(a+1)/d),s=new THREE.Vector2((b+1)/c,1-(a+1)/d),w=new THREE.Vector2((b+
1)/c,1-a/d),u=new THREE.Face3(u,e,h);u.normal.copy(q);u.vertexNormals.push(q.clone(),q.clone(),q.clone());this.faces.push(u);this.faceVertexUvs[0].push([l,n,w]);u=new THREE.Face3(e,f,h);u.normal.copy(q);u.vertexNormals.push(q.clone(),q.clone(),q.clone());this.faces.push(u);this.faceVertexUvs[0].push([n.clone(),s,w.clone()])}};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=a||0;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):8;var g,h=[],l=a,n=(b-a)/d;for(a=0;a<d+1;a++){for(g=0;g<c+1;g++){var q=new THREE.Vector3,s=e+g/c*f;q.x=l*Math.cos(s);q.y=l*Math.sin(s);this.vertices.push(q);h.push(new THREE.Vector2((q.x/b+1)/2,(q.y/b+1)/2))}l+=n}b=new THREE.Vector3(0,0,1);for(a=0;a<d;a++)for(e=a*(c+1),g=0;g<c;g++)f=s=g+e,n=s+c+1,q=s+c+2,this.faces.push(new THREE.Face3(f,
n,q,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[n].clone(),h[q].clone()]),f=s,n=s+c+2,q=s+1,this.faces.push(new THREE.Face3(f,n,q,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[n].clone(),h[q].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h,l,n=[],q=[];for(l=0;l<=c;l++){var s=[],u=[];for(h=0;h<=b;h++){var w=h/b,v=l/c,r=new THREE.Vector3;r.x=-a*Math.cos(d+w*e)*Math.sin(f+v*g);r.y=a*Math.cos(f+v*g);r.z=
a*Math.sin(d+w*e)*Math.sin(f+v*g);this.vertices.push(r);s.push(this.vertices.length-1);u.push(new THREE.Vector2(w,1-v))}n.push(s);q.push(u)}for(l=0;l<c;l++)for(h=0;h<b;h++){d=n[l][h+1];e=n[l][h];f=n[l+1][h];g=n[l+1][h+1];var s=this.vertices[d].clone().normalize(),u=this.vertices[e].clone().normalize(),w=this.vertices[f].clone().normalize(),v=this.vertices[g].clone().normalize(),r=q[l][h+1].clone(),y=q[l][h].clone(),z=q[l+1][h].clone(),x=q[l+1][h+1].clone();Math.abs(this.vertices[d].y)===a?(r.x=(r.x+
y.x)/2,this.faces.push(new THREE.Face3(d,f,g,[s,w,v])),this.faceVertexUvs[0].push([r,z,x])):Math.abs(this.vertices[f].y)===a?(z.x=(z.x+x.x)/2,this.faces.push(new THREE.Face3(d,e,f,[s,u,w])),this.faceVertexUvs[0].push([r,y,z])):(this.faces.push(new THREE.Face3(d,e,g,[s,u,v])),this.faceVertexUvs[0].push([r,y,x]),this.faces.push(new THREE.Face3(e,f,g,[u.clone(),w,v.clone()])),this.faceVertexUvs[0].push([y.clone(),z,x.clone()]))}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,
a)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=c||8;d=d||6;e=e||2*Math.PI;for(var f=new THREE.Vector3,g=[],h=[],l=0;l<=c;l++)for(var n=0;n<=d;n++){var q=n/d*e,s=l/c*Math.PI*2;f.x=a*Math.cos(q);f.y=a*Math.sin(q);var u=new THREE.Vector3;u.x=(a+b*Math.cos(s))*Math.cos(q);u.y=(a+b*Math.cos(s))*Math.sin(q);u.z=b*Math.sin(s);this.vertices.push(u);g.push(new THREE.Vector2(n/d,l/c));h.push(u.clone().sub(f).normalize())}for(l=
1;l<=c;l++)for(n=1;n<=d;n++)a=(d+1)*l+n-1,b=(d+1)*(l-1)+n-1,e=(d+1)*(l-1)+n,f=(d+1)*l+n,q=new THREE.Face3(a,b,f,[h[a].clone(),h[b].clone(),h[f].clone()]),this.faces.push(q),this.faceVertexUvs[0].push([g[a].clone(),g[b].clone(),g[f].clone()]),q=new THREE.Face3(b,e,f,[h[b].clone(),h[e].clone(),h[f].clone()]),this.faces.push(q),this.faceVertexUvs[0].push([g[b].clone(),g[e].clone(),g[f].clone()]);this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=b/c;b=Math.cos(a);f*=d*(2+b)*.5;g=d*(2+b)*g*.5;d=e*d*Math.sin(a)*.5;return new THREE.Vector3(f,g,d)}THREE.Geometry.call(this);this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:f,heightScale:g};a=a||100;b=b||40;c=c||64;d=d||8;e=e||2;f=f||3;g=g||1;for(var l=Array(c),n=new THREE.Vector3,q=new THREE.Vector3,s=new THREE.Vector3,u=0;u<c;++u){l[u]=Array(d);var w=u/c*2*e*Math.PI,
v=h(w,f,e,a,g),w=h(w+.01,f,e,a,g);n.subVectors(w,v);q.addVectors(w,v);s.crossVectors(n,q);q.crossVectors(s,n);s.normalize();q.normalize();for(w=0;w<d;++w){var r=w/d*2*Math.PI,y=-b*Math.cos(r),r=b*Math.sin(r),z=new THREE.Vector3;z.x=v.x+y*q.x+r*s.x;z.y=v.y+y*q.y+r*s.y;z.z=v.z+y*q.z+r*s.z;l[u][w]=this.vertices.push(z)-1}}for(u=0;u<c;++u)for(w=0;w<d;++w)e=(u+1)%c,f=(w+1)%d,a=l[u][w],b=l[e][w],e=l[e][f],f=l[u][f],g=new THREE.Vector2(u/c,w/d),n=new THREE.Vector2((u+1)/c,w/d),q=new THREE.Vector2((u+1)/
c,(w+1)/d),s=new THREE.Vector2(u/c,(w+1)/d),this.faces.push(new THREE.Face3(a,b,f)),this.faceVertexUvs[0].push([g,n,s]),this.faces.push(new THREE.Face3(b,e,f)),this.faceVertexUvs[0].push([n.clone(),q,s.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var f=[],g,h,l=b+1,n,q,s,u,w=new THREE.Vector3,v,r,y;v=new THREE.TubeGeometry.FrenetFrames(a,b,e);r=v.normals;y=v.binormals;this.tangents=v.tangents;this.normals=r;this.binormals=y;for(v=0;v<l;v++)for(f[v]=[],n=v/(l-1),u=a.getPointAt(n),g=r[v],h=y[v],n=0;n<d;n++)q=n/d*2*Math.PI,s=-c*Math.cos(q),q=c*Math.sin(q),w.copy(u),w.x+=s*g.x+q*
h.x,w.y+=s*g.y+q*h.y,w.z+=s*g.z+q*h.z,f[v][n]=this.vertices.push(new THREE.Vector3(w.x,w.y,w.z))-1;for(v=0;v<b;v++)for(n=0;n<d;n++)l=e?(v+1)%b:v+1,w=(n+1)%d,a=f[v][n],c=f[l][n],l=f[l][w],w=f[v][w],r=new THREE.Vector2(v/b,n/d),y=new THREE.Vector2((v+1)/b,n/d),g=new THREE.Vector2((v+1)/b,(n+1)/d),h=new THREE.Vector2(v/b,(n+1)/d),this.faces.push(new THREE.Face3(a,c,w)),this.faceVertexUvs[0].push([r,y,h]),this.faces.push(new THREE.Face3(c,l,w)),this.faceVertexUvs[0].push([y.clone(),g,h.clone()]);this.computeFaceNormals();
this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,l=new THREE.Matrix4;b+=1;var n,q,s;this.tangents=e;this.normals=f;this.binormals=g;for(n=0;n<b;n++)q=n/(b-1),e[n]=a.getTangentAt(q),e[n].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;n=Math.abs(e[0].x);q=Math.abs(e[0].y);s=Math.abs(e[0].z);n<=a&&(a=n,d.set(1,0,0));q<=a&&(a=q,d.set(0,1,0));s<=a&&d.set(0,0,1);h.crossVectors(e[0],
d).normalize();f[0].crossVectors(e[0],h);g[0].crossVectors(e[0],f[0]);for(n=1;n<b;n++)f[n]=f[n-1].clone(),g[n]=g[n-1].clone(),h.crossVectors(e[n-1],e[n]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[n-1].dot(e[n]),-1,1)),f[n].applyMatrix4(l.makeRotationAxis(h,d))),g[n].crossVectors(e[n],f[n]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),n=1;n<b;n++)f[n].applyMatrix4(l.makeRotationAxis(e[n],d*n)),g[n].crossVectors(e[n],
f[n])};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=l.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);l.faces.push(d);y.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(y.z,-y.x);l.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,b){var c=
Math.pow(2,b);Math.pow(4,b);for(var d=e(l.vertices[a.a]),g=e(l.vertices[a.b]),h=e(l.vertices[a.c]),n=[],q=0;q<=c;q++){n[q]=[];for(var r=e(d.clone().lerp(h,q/c)),s=e(g.clone().lerp(h,q/c)),u=c-q,v=0;v<=u;v++)n[q][v]=0==v&&q==c?r:e(r.clone().lerp(s,v/u))}for(q=0;q<c;q++)for(v=0;v<2*(c-q)-1;v++)d=Math.floor(v/2),0==v%2?f(n[q][d+1],n[q+1][d],n[q][d]):f(n[q][d+1],n[q+1][d+1],n[q+1][d])}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,
a.y));return a.clone()}THREE.Geometry.call(this);c=c||1;d=d||0;for(var l=this,n=0,q=a.length;n<q;n+=3)e(new THREE.Vector3(a[n],a[n+1],a[n+2]));a=this.vertices;for(var s=[],u=n=0,q=b.length;n<q;n+=3,u++){var w=a[b[n]],v=a[b[n+1]],r=a[b[n+2]];s[u]=new THREE.Face3(w.index,v.index,r.index,[w.clone(),v.clone(),r.clone()])}for(var y=new THREE.Vector3,n=0,q=s.length;n<q;n++)g(s[n],d);n=0;for(q=this.faceVertexUvs[0].length;n<q;n++)b=this.faceVertexUvs[0][n],d=b[0].x,a=b[1].x,s=b[2].x,u=Math.max(d,Math.max(a,
s)),w=Math.min(d,Math.min(a,s)),.9<u&&.1>w&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>s&&(b[2].x+=1));n=0;for(q=this.vertices.length;n<q;n++)this.vertices[n].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,l,n,q=b+1;for(g=0;g<=c;g++)for(n=g/c,h=0;h<=b;h++)l=h/b,l=a(l,n),d.push(l);var s,u,w,v;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*q+h,d=g*q+h+1,n=(g+1)*q+h+1,l=(g+1)*q+h,s=new THREE.Vector2(h/b,g/c),u=new THREE.Vector2((h+1)/b,g/c),w=new THREE.Vector2((h+1)/b,(g+1)/c),v=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,d,l)),f.push([s,u,v]),e.push(new THREE.Face3(d,n,l)),
f.push([u.clone(),w,v.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute("position",new THREE.BufferAttribute(b,3));a.addAttribute("color",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,a,b,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));return function(c,d,e,f,g,h){THREE.Object3D.call(this);void 0===f&&(f=16776960);void 0===e&&(e=1);void 0===g&&(g=.2*e);void 0===h&&(h=.2*g);this.position.copy(d);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);
this.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();
THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,a,1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};
THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);
THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.geometry.attributes.position.array;d[0]=b.x;d[1]=b.y;d[2]=b.z;d[3]=c.x;d[4]=b.y;d[5]=b.z;d[6]=c.x;d[7]=b.y;d[8]=b.z;d[9]=c.x;d[10]=c.y;d[11]=b.z;d[12]=c.x;d[13]=c.y;d[14]=b.z;d[15]=b.x;d[16]=c.y;d[17]=b.z;d[18]=b.x;d[19]=c.y;d[20]=b.z;d[21]=b.x;d[22]=b.y;d[23]=b.z;d[24]=b.x;d[25]=b.y;d[26]=c.z;d[27]=c.x;d[28]=b.y;d[29]=c.z;d[30]=c.x;d[31]=b.y;
d[32]=c.z;d[33]=c.x;d[34]=c.y;d[35]=c.z;d[36]=c.x;d[37]=c.y;d[38]=c.z;d[39]=b.x;d[40]=c.y;d[41]=c.z;d[42]=b.x;d[43]=c.y;d[44]=c.z;d[45]=b.x;d[46]=b.y;d[47]=c.z;d[48]=b.x;d[49]=b.y;d[50]=b.z;d[51]=b.x;d[52]=b.y;d[53]=c.z;d[54]=c.x;d[55]=b.y;d[56]=b.z;d[57]=c.x;d[58]=b.y;d[59]=c.z;d[60]=c.x;d[61]=c.y;d[62]=b.z;d[63]=c.x;d[64]=c.y;d[65]=c.z;d[66]=b.x;d[67]=c.y;d[68]=b.z;d[69]=b.x;d[70]=c.y;d[71]=c.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrixAutoUpdate=
!1;this.matrixWorld=a.matrixWorld};THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,g,h,l){a.set(g,h,l);c.unprojectVector(a,b);d=e.pointMap[d];if(void 0!==d)for(g=0,h=d.length;g<h;g++)e.geometry.vertices[d[g]].copy(a)}var e=this;b.projectionMatrix.copy(this.camera.projectionMatrix);d("c",0,0,-1);d("t",0,0,1);d("n1",-1,-1,-1);d("n2",1,-1,-1);d("n3",-1,1,-1);d("n4",1,1,-1);d("f1",-1,-1,1);d("f2",1,-1,1);d("f3",-1,1,1);d("f4",1,1,1);d("u1",.7,
1.1,-1);d("u2",-.7,1.1,-1);d("u3",0,2,-1);d("cf1",-1,0,1);d("cf2",1,0,1);d("cf3",0,-1,1);d("cf4",0,1,1);d("cn1",-1,0,-1);d("cn2",1,0,-1);d("cn3",0,-1,-1);d("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();
THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(c,d);this.add(this.lightPlane);
c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();
THREE.EdgesHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=["a","b","c"],h=new THREE.BufferGeometry,l=a.geometry.clone();l.mergeVertices();l.computeFaceNormals();for(var n=l.vertices,l=l.faces,q=0,s=0,u=l.length;s<u;s++)for(var w=l[s],v=0;3>v;v++){d[0]=w[g[v]];d[1]=w[g[(v+1)%3]];d.sort(f);var r=d.toString();void 0===e[r]?(e[r]={vert1:d[0],vert2:d[1],face1:s,face2:void 0},q++):e[r].face2=s}h.addAttribute("position",new THREE.Float32Attribute(6*q,3));d=h.attributes.position.array;
f=0;for(r in e)if(g=e[r],void 0===g.face2||.9999>l[g.face1].normal.dot(l[g.face2].normal))q=n[g.vert1],d[f++]=q.x,d[f++]=q.y,d[f++]=q.z,q=n[g.vert2],d[f++]=q.x,d[f++]=q.y,d[f++]=q.z;THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=a.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=new THREE.Geometry;c=0;for(var e=this.object.geometry.faces.length;c<e;c++)b.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:a,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper.prototype.update=function(){var a=this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(e);for(var f=b=0,g=d.length;b<g;b++,f+=2){var h=d[b];a[f].copy(c[h.a]).add(c[h.b]).add(c[h.c]).divideScalar(3).applyMatrix4(e);a[f+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[f])}this.geometry.verticesNeedUpdate=!0;return this};
THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);
THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};
THREE.HemisphereLightHelper=function(a,b,c,d){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];a=new THREE.SphereGeometry(b,4,2);a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(b=0;8>b;b++)a.faces[b].color=this.colors[4>b?0:1];b=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(a,b);this.add(this.lightSphere);
this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();
THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};
THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,b,c,THREE.LinePieces);this.root=a;this.matrixWorld=a.matrixWorld;
this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};
THREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};
THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();
THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;b=void 0!==c?c:16711680;d=void 0!==d?d:1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexNormals.length;g<h;g++)c.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,l=0,n=f.length;l<n;l++)for(var q=f[l],s=0,u=q.vertexNormals.length;s<u;s++){var w=q.vertexNormals[s];d[h].copy(e[q[a[s]]]).applyMatrix4(g);b.copy(w).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
b.add(d[h]);h+=1;d[h].copy(b);h+=1}this.geometry.verticesNeedUpdate=!0;return this}}();
THREE.VertexTangentsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;b=void 0!==c?c:255;d=void 0!==d?d:1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexTangents.length;g<h;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,l=0,n=f.length;l<n;l++)for(var q=f[l],s=0,u=q.vertexTangents.length;s<u;s++){var w=q.vertexTangents[s];d[h].copy(e[q[a[s]]]).applyMatrix4(g);b.copy(w).transformDirection(g).multiplyScalar(this.size);b.add(d[h]);h+=1;d[h].copy(b);
h+=1}this.geometry.verticesNeedUpdate=!0;return this}}();
THREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=["a","b","c"],h=new THREE.BufferGeometry;if(a.geometry instanceof THREE.Geometry){for(var l=a.geometry.vertices,n=a.geometry.faces,q=0,s=new Uint32Array(6*n.length),u=0,w=n.length;u<w;u++)for(var v=n[u],r=0;3>r;r++){d[0]=v[g[r]];d[1]=v[g[(r+1)%3]];d.sort(f);var y=d.toString();void 0===e[y]&&(s[2*q]=d[0],s[2*q+1]=d[1],e[y]=!0,q++)}d=new Float32Array(6*q);u=0;for(w=q;u<w;u++)for(r=0;2>r;r++)q=
l[s[2*u+r]],g=6*u+3*r,d[g+0]=q.x,d[g+1]=q.y,d[g+2]=q.z;h.addAttribute("position",new THREE.BufferAttribute(d,3))}else if(a.geometry instanceof THREE.BufferGeometry){if(void 0!==a.geometry.attributes.index){for(var l=a.geometry.attributes.position.array,w=a.geometry.attributes.index.array,n=a.geometry.offsets,q=0,s=new Uint32Array(2*w.length),v=0,z=n.length;v<z;++v)for(var r=n[v].start,y=n[v].count,g=n[v].index,u=r,x=r+y;u<x;u+=3)for(r=0;3>r;r++)d[0]=g+w[u+r],d[1]=g+w[u+(r+1)%3],d.sort(f),y=d.toString(),
void 0===e[y]&&(s[2*q]=d[0],s[2*q+1]=d[1],e[y]=!0,q++);d=new Float32Array(6*q);u=0;for(w=q;u<w;u++)for(r=0;2>r;r++)g=6*u+3*r,q=3*s[2*u+r],d[g+0]=l[q],d[g+1]=l[q+1],d[g+2]=l[q+2]}else for(l=a.geometry.attributes.position.array,q=l.length/3,s=q/3,d=new Float32Array(6*q),u=0,w=s;u<w;u++)for(r=0;3>r;r++)g=18*u+6*r,s=9*u+3*r,d[g+0]=l[s],d[g+1]=l[s+1],d[g+2]=l[s+2],q=9*u+(r+1)%3*3,d[g+3]=l[q],d[g+4]=l[q+1],d[g+5]=l[q+2];h.addAttribute("position",new THREE.BufferAttribute(d,3))}THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),
THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=a.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};
THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var l=h[1];d[l]||(d[l]={start:Infinity,end:-Infinity});h=d[l];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=l)}}for(l in d)h=d[l],this.createAnimation(l,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a,b){var d=c.createProgram(),e=c.createShader(c.FRAGMENT_SHADER),f=c.createShader(c.VERTEX_SHADER),g="precision "+b+" float;\n";c.shaderSource(e,g+a.fragmentShader);c.shaderSource(f,g+a.vertexShader);c.compileShader(e);c.compileShader(f);c.attachShader(d,e);c.attachShader(d,f);c.linkProgram(d);return d}var b=[],c,d,e,f,g,h,l,n,q,s,u,w,v;this.init=function(b){c=b.context;d=b;e=b.getPrecision();f=new Float32Array(16);g=new Uint16Array(6);b=0;f[b++]=-1;f[b++]=
-1;f[b++]=0;f[b++]=0;f[b++]=1;f[b++]=-1;f[b++]=1;f[b++]=0;f[b++]=1;f[b++]=1;f[b++]=1;f[b++]=1;f[b++]=-1;f[b++]=1;f[b++]=0;f[b++]=1;b=0;g[b++]=0;g[b++]=1;g[b++]=2;g[b++]=0;g[b++]=2;g[b++]=3;h=c.createBuffer();l=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,h);c.bufferData(c.ARRAY_BUFFER,f,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,l);c.bufferData(c.ELEMENT_ARRAY_BUFFER,g,c.STATIC_DRAW);n=c.createTexture();q=c.createTexture();c.bindTexture(c.TEXTURE_2D,n);c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,
16,0,c.RGB,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.bindTexture(c.TEXTURE_2D,q);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);
c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);0>=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(s=!1,u=a(THREE.ShaderFlares.lensFlare,e)):(s=!0,u=a(THREE.ShaderFlares.lensFlareVertexTexture,e));w={};v={};w.vertex=c.getAttribLocation(u,"position");w.uv=c.getAttribLocation(u,"uv");v.renderType=c.getUniformLocation(u,"renderType");v.map=c.getUniformLocation(u,"map");v.occlusionMap=c.getUniformLocation(u,"occlusionMap");v.opacity=
c.getUniformLocation(u,"opacity");v.color=c.getUniformLocation(u,"color");v.scale=c.getUniformLocation(u,"scale");v.rotation=c.getUniformLocation(u,"rotation");v.screenPosition=c.getUniformLocation(u,"screenPosition")};this.render=function(a,e,f,g){b.length=0;a.traverseVisible(function(a){a instanceof THREE.LensFlare&&b.push(a)});if(0!==b.length){a=new THREE.Vector3;var G=g/f,D=.5*f,A=.5*g,F=16/g,L=new THREE.Vector2(F*G,F),C=new THREE.Vector3(1,1,0),B=new THREE.Vector2(1,1),N=v,F=w;c.useProgram(u);
c.enableVertexAttribArray(w.vertex);c.enableVertexAttribArray(w.uv);c.uniform1i(N.occlusionMap,0);c.uniform1i(N.map,1);c.bindBuffer(c.ARRAY_BUFFER,h);c.vertexAttribPointer(F.vertex,2,c.FLOAT,!1,16,0);c.vertexAttribPointer(F.uv,2,c.FLOAT,!1,16,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,l);c.disable(c.CULL_FACE);c.depthMask(!1);for(var Q=0,ea=b.length;Q<ea;Q++){F=16/g;L.set(F*G,F);var S=b[Q];a.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]);a.applyMatrix4(e.matrixWorldInverse);
a.applyProjection(e.projectionMatrix);C.copy(a);B.x=C.x*D+D;B.y=C.y*A+A;if(s||0<B.x&&B.x<f&&0<B.y&&B.y<g){c.activeTexture(c.TEXTURE1);c.bindTexture(c.TEXTURE_2D,n);c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,B.x-8,B.y-8,16,16,0);c.uniform1i(N.renderType,0);c.uniform2f(N.scale,L.x,L.y);c.uniform3f(N.screenPosition,C.x,C.y,C.z);c.disable(c.BLEND);c.enable(c.DEPTH_TEST);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.activeTexture(c.TEXTURE0);c.bindTexture(c.TEXTURE_2D,q);c.copyTexImage2D(c.TEXTURE_2D,
0,c.RGBA,B.x-8,B.y-8,16,16,0);c.uniform1i(N.renderType,1);c.disable(c.DEPTH_TEST);c.activeTexture(c.TEXTURE1);c.bindTexture(c.TEXTURE_2D,n);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);S.positionScreen.copy(C);S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares();c.uniform1i(N.renderType,2);c.enable(c.BLEND);for(var R=0,M=S.lensFlares.length;R<M;R++){var H=S.lensFlares[R];.001<H.opacity&&.001<H.scale&&(C.x=H.x,C.y=H.y,C.z=H.z,F=H.size*H.scale/g,L.x=F*G,L.y=F,c.uniform3f(N.screenPosition,
C.x,C.y,C.z),c.uniform2f(N.scale,L.x,L.y),c.uniform1f(N.rotation,H.rotation),c.uniform1f(N.opacity,H.opacity),c.uniform3f(N.color,H.color.r,H.color.g,H.color.b),d.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),d.setTexture(H.texture,1),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0))}}}c.enable(c.CULL_FACE);c.enable(c.DEPTH_TEST);c.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){function a(b,c,d){if(c.visible){var e=b.__webglObjects[c.id];if(e&&c.castShadow&&(!1===c.frustumCulled||!0===h.intersectsObject(c)))for(var f=0,g=e.length;f<g;f++){var l=e[f];c._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,c.matrixWorld);u.push(l)}f=0;for(g=c.children.length;f<g;f++)a(b,c.children[f],d)}}var b,c,d,e,f,g,h=new THREE.Frustum,l=new THREE.Matrix4,n=new THREE.Vector3,q=new THREE.Vector3,s=new THREE.Vector3,u=[];this.init=function(a){b=a.context;
c=a;a=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(a.uniforms);d=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h});e=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,skinning:!0});g=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,
morphTargets:!0,skinning:!0});d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0;g._shadowPass=!0};this.render=function(a,b){c.shadowMapEnabled&&c.shadowMapAutoUpdate&&this.update(a,b)};this.update=function(w,v){var r,y,z,x,G,D,A,F,L=[];x=0;b.clearColor(1,1,1,1);b.disable(b.BLEND);b.enable(b.CULL_FACE);b.frontFace(b.CCW);c.shadowMapCullFace===THREE.CullFaceFront?b.cullFace(b.FRONT):b.cullFace(b.BACK);c.setDepthTest(!0);r=0;for(y=w.__lights.length;r<y;r++)if(z=w.__lights[r],z.castShadow)if(z instanceof
THREE.DirectionalLight&&z.shadowCascade)for(G=0;G<z.shadowCascadeCount;G++){var C;if(z.shadowCascadeArray[G])C=z.shadowCascadeArray[G];else{A=z;var B=G;C=new THREE.DirectionalLight;C.isVirtual=!0;C.onlyShadow=!0;C.castShadow=!0;C.shadowCameraNear=A.shadowCameraNear;C.shadowCameraFar=A.shadowCameraFar;C.shadowCameraLeft=A.shadowCameraLeft;C.shadowCameraRight=A.shadowCameraRight;C.shadowCameraBottom=A.shadowCameraBottom;C.shadowCameraTop=A.shadowCameraTop;C.shadowCameraVisible=A.shadowCameraVisible;
C.shadowDarkness=A.shadowDarkness;C.shadowBias=A.shadowCascadeBias[B];C.shadowMapWidth=A.shadowCascadeWidth[B];C.shadowMapHeight=A.shadowCascadeHeight[B];C.pointsWorld=[];C.pointsFrustum=[];F=C.pointsWorld;D=C.pointsFrustum;for(var N=0;8>N;N++)F[N]=new THREE.Vector3,D[N]=new THREE.Vector3;F=A.shadowCascadeNearZ[B];A=A.shadowCascadeFarZ[B];D[0].set(-1,-1,F);D[1].set(1,-1,F);D[2].set(-1,1,F);D[3].set(1,1,F);D[4].set(-1,-1,A);D[5].set(1,-1,A);D[6].set(-1,1,A);D[7].set(1,1,A);C.originalCamera=v;D=new THREE.Gyroscope;
D.position.copy(z.shadowCascadeOffset);D.add(C);D.add(C.target);v.add(D);z.shadowCascadeArray[G]=C;console.log("Created virtualLight",C)}B=z;F=G;A=B.shadowCascadeArray[F];A.position.copy(B.position);A.target.position.copy(B.target.position);A.lookAt(A.target);A.shadowCameraVisible=B.shadowCameraVisible;A.shadowDarkness=B.shadowDarkness;A.shadowBias=B.shadowCascadeBias[F];D=B.shadowCascadeNearZ[F];B=B.shadowCascadeFarZ[F];A=A.pointsFrustum;A[0].z=D;A[1].z=D;A[2].z=D;A[3].z=D;A[4].z=B;A[5].z=B;A[6].z=
B;A[7].z=B;L[x]=C;x++}else L[x]=z,x++;r=0;for(y=L.length;r<y;r++){z=L[r];z.shadowMap||(G=THREE.LinearFilter,c.shadowMapType===THREE.PCFSoftShadowMap&&(G=THREE.NearestFilter),z.shadowMap=new THREE.WebGLRenderTarget(z.shadowMapWidth,z.shadowMapHeight,{minFilter:G,magFilter:G,format:THREE.RGBAFormat}),z.shadowMapSize=new THREE.Vector2(z.shadowMapWidth,z.shadowMapHeight),z.shadowMatrix=new THREE.Matrix4);if(!z.shadowCamera){if(z instanceof THREE.SpotLight)z.shadowCamera=new THREE.PerspectiveCamera(z.shadowCameraFov,
z.shadowMapWidth/z.shadowMapHeight,z.shadowCameraNear,z.shadowCameraFar);else if(z instanceof THREE.DirectionalLight)z.shadowCamera=new THREE.OrthographicCamera(z.shadowCameraLeft,z.shadowCameraRight,z.shadowCameraTop,z.shadowCameraBottom,z.shadowCameraNear,z.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}w.add(z.shadowCamera);!0===w.autoUpdate&&w.updateMatrixWorld()}z.shadowCameraVisible&&!z.cameraHelper&&(z.cameraHelper=new THREE.CameraHelper(z.shadowCamera),z.shadowCamera.add(z.cameraHelper));
if(z.isVirtual&&C.originalCamera==v){G=v;x=z.shadowCamera;D=z.pointsFrustum;A=z.pointsWorld;n.set(Infinity,Infinity,Infinity);q.set(-Infinity,-Infinity,-Infinity);for(B=0;8>B;B++)F=A[B],F.copy(D[B]),THREE.ShadowMapPlugin.__projector.unprojectVector(F,G),F.applyMatrix4(x.matrixWorldInverse),F.x<n.x&&(n.x=F.x),F.x>q.x&&(q.x=F.x),F.y<n.y&&(n.y=F.y),F.y>q.y&&(q.y=F.y),F.z<n.z&&(n.z=F.z),F.z>q.z&&(q.z=F.z);x.left=n.x;x.right=q.x;x.top=q.y;x.bottom=n.y;x.updateProjectionMatrix()}x=z.shadowMap;D=z.shadowMatrix;
G=z.shadowCamera;G.position.setFromMatrixPosition(z.matrixWorld);s.setFromMatrixPosition(z.target.matrixWorld);G.lookAt(s);G.updateMatrixWorld();G.matrixWorldInverse.getInverse(G.matrixWorld);z.cameraHelper&&(z.cameraHelper.visible=z.shadowCameraVisible);z.shadowCameraVisible&&z.cameraHelper.update();D.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);D.multiply(G.projectionMatrix);D.multiply(G.matrixWorldInverse);l.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse);h.setFromMatrix(l);c.setRenderTarget(x);
c.clear();u.length=0;a(w,w,G);z=0;for(x=u.length;z<x;z++)A=u[z],D=A.object,A=A.buffer,B=D.material instanceof THREE.MeshFaceMaterial?D.material.materials[0]:D.material,F=void 0!==D.geometry.morphTargets&&0<D.geometry.morphTargets.length&&B.morphTargets,N=D instanceof THREE.SkinnedMesh&&B.skinning,F=D.customDepthMaterial?D.customDepthMaterial:N?F?g:f:F?e:d,c.setMaterialFaces(B),A instanceof THREE.BufferGeometry?c.renderBufferDirect(G,w.__lights,null,F,A,D):c.renderBuffer(G,w.__lights,null,F,A,D);B=
w.__webglObjectsImmediate;z=0;for(x=B.length;z<x;z++)A=B[z],D=A.object,D.visible&&D.castShadow&&(D._modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,D.matrixWorld),c.renderImmediateObject(G,w.__lights,null,d,D))}r=c.getClearColor();y=c.getClearAlpha();b.clearColor(r.r,r.g,r.b,y);b.enable(b.BLEND);c.shadowMapCullFace===THREE.CullFaceFront&&b.cullFace(b.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){var a,b,c,d,e,f,g,h,l,n,q,s,u,w,v,r,y;function z(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var x,G,D,A=[],F,L,C,B,N;this.init=function(z){x=z.context;G=z;F=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);L=new Uint16Array([0,1,2,0,2,3]);C=x.createBuffer();B=x.createBuffer();x.bindBuffer(x.ARRAY_BUFFER,C);x.bufferData(x.ARRAY_BUFFER,F,x.STATIC_DRAW);x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,B);x.bufferData(x.ELEMENT_ARRAY_BUFFER,L,x.STATIC_DRAW);z=x.createProgram();
var A=x.createShader(x.VERTEX_SHADER),S=x.createShader(x.FRAGMENT_SHADER);x.shaderSource(A,["precision "+G.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
x.shaderSource(S,["precision "+G.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
x.compileShader(A);x.compileShader(S);x.attachShader(z,A);x.attachShader(z,S);x.linkProgram(z);N=z;r=x.getAttribLocation(N,"position");y=x.getAttribLocation(N,"uv");a=x.getUniformLocation(N,"uvOffset");b=x.getUniformLocation(N,"uvScale");c=x.getUniformLocation(N,"rotation");d=x.getUniformLocation(N,"scale");e=x.getUniformLocation(N,"color");f=x.getUniformLocation(N,"map");g=x.getUniformLocation(N,"opacity");h=x.getUniformLocation(N,"modelViewMatrix");l=x.getUniformLocation(N,"projectionMatrix");n=
x.getUniformLocation(N,"fogType");q=x.getUniformLocation(N,"fogDensity");s=x.getUniformLocation(N,"fogNear");u=x.getUniformLocation(N,"fogFar");w=x.getUniformLocation(N,"fogColor");v=x.getUniformLocation(N,"alphaTest");z=document.createElement("canvas");z.width=8;z.height=8;A=z.getContext("2d");A.fillStyle="white";A.fillRect(0,0,8,8);D=new THREE.Texture(z);D.needsUpdate=!0};this.render=function(F,L,S,R){A.length=0;F.traverseVisible(function(a){a instanceof THREE.Sprite&&A.push(a)});if(0!==A.length){x.useProgram(N);
x.enableVertexAttribArray(r);x.enableVertexAttribArray(y);x.disable(x.CULL_FACE);x.enable(x.BLEND);x.bindBuffer(x.ARRAY_BUFFER,C);x.vertexAttribPointer(r,2,x.FLOAT,!1,16,0);x.vertexAttribPointer(y,2,x.FLOAT,!1,16,8);x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,B);x.uniformMatrix4fv(l,!1,L.projectionMatrix.elements);x.activeTexture(x.TEXTURE0);x.uniform1i(f,0);R=S=0;var M=F.fog;M?(x.uniform3f(w,M.color.r,M.color.g,M.color.b),M instanceof THREE.Fog?(x.uniform1f(s,M.near),x.uniform1f(u,M.far),x.uniform1i(n,1),
R=S=1):M instanceof THREE.FogExp2&&(x.uniform1f(q,M.density),x.uniform1i(n,2),R=S=2)):(x.uniform1i(n,0),R=S=0);for(var M=0,H=A.length;M<H;M++){var T=A[M],O=T.material;T._modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,T.matrixWorld);T.z=-T._modelViewMatrix.elements[14]}A.sort(z);L=[];M=0;for(H=A.length;M<H;M++)T=A[M],O=T.material,x.uniform1f(v,O.alphaTest),x.uniformMatrix4fv(h,!1,T._modelViewMatrix.elements),L[0]=T.scale.x,L[1]=T.scale.y,T=0,F.fog&&O.fog&&(T=R),S!==T&&(x.uniform1i(n,T),S=T),
null!==O.map?(x.uniform2f(a,O.map.offset.x,O.map.offset.y),x.uniform2f(b,O.map.repeat.x,O.map.repeat.y)):(x.uniform2f(a,0,0),x.uniform2f(b,1,1)),x.uniform1f(g,O.opacity),x.uniform3f(e,O.color.r,O.color.g,O.color.b),x.uniform1f(c,O.rotation),x.uniform2fv(d,L),G.setBlending(O.blending,O.blendEquation,O.blendSrc,O.blendDst),G.setDepthTest(O.depthTest),G.setDepthWrite(O.depthWrite),O.map&&O.map.image&&O.map.image.width?G.setTexture(O.map,0):G.setTexture(D,0),x.drawElements(x.TRIANGLES,6,x.UNSIGNED_SHORT,
0);x.enable(x.CULL_FACE)}}};
THREE.DepthPassPlugin=function(){function a(b,c,d){if(c.visible){var e=b.__webglObjects[c.id];if(e&&(!1===c.frustumCulled||!0===h.intersectsObject(c)))for(var f=0,g=e.length;f<g;f++){var l=e[f];c._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,c.matrixWorld);n.push(l)}f=0;for(g=c.children.length;f<g;f++)a(b,c.children[f],d)}}this.enabled=!1;this.renderTarget=null;var b,c,d,e,f,g,h=new THREE.Frustum,l=new THREE.Matrix4,n=[];this.init=function(a){b=a.context;c=a;a=THREE.ShaderLib.depthRGBA;var h=
THREE.UniformsUtils.clone(a.uniforms);d=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h});e=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,skinning:!0});g=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});d._shadowPass=
!0;e._shadowPass=!0;f._shadowPass=!0;g._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(q,s){var u,w,v,r,y;b.clearColor(1,1,1,1);b.disable(b.BLEND);c.setDepthTest(!0);!0===q.autoUpdate&&q.updateMatrixWorld();s.matrixWorldInverse.getInverse(s.matrixWorld);l.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse);h.setFromMatrix(l);c.setRenderTarget(this.renderTarget);c.clear();n.length=0;a(q,q,s);var z;u=0;for(w=n.length;u<w;u++)v=n[u],y=v.object,v=v.buffer,
y instanceof THREE.PointCloud&&!y.customDepthMaterial||((z=y.material instanceof THREE.MeshFaceMaterial?y.material.materials[0]:y.material)&&c.setMaterialFaces(y.material),r=void 0!==y.geometry.morphTargets&&0<y.geometry.morphTargets.length&&z.morphTargets,z=y instanceof THREE.SkinnedMesh&&z.skinning,r=y.customDepthMaterial?y.customDepthMaterial:z?r?g:f:r?e:d,v instanceof THREE.BufferGeometry?c.renderBufferDirect(s,q.__lights,null,r,v,y):c.renderBuffer(s,q.__lights,null,r,v,y));r=q.__webglObjectsImmediate;
u=0;for(w=r.length;u<w;u++)v=r[u],y=v.object,y.visible&&(y._modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,y.matrixWorld),c.renderImmediateObject(s,q.__lights,null,d,y));u=c.getClearColor();w=c.getClearAlpha();b.clearColor(u.r,u.g,u.b,w);b.enable(b.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
Flory.Renderer=function(a,b,c){this.data={};null!==this.canvas?(this.renderer=new THREE.WebGLRenderer,void 0==this.renderer&&console.log("Flory : WebGL is not supported in your browser."),this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement)):console.log("Flory : A canvas_id must be specified.");this.scene=void 0===a?new THREE.Scene:a;this.camera=void 0===b?new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1E3):b;this.camera.position.set(0,
0,100);this.camera.up=new THREE.Vector3(0,0,1);this.camera.lookAt(this.scene.position);this.scene.add(this.camera);this.renderables=void 0===c?{}:c};
Flory.Renderer.prototype={constructor:Flory.Renderer,addRenderable:function(a){if(a instanceof Flory.Renderable)this.renderables[a.id]=a,this.scene.add(this.renderables[a.id].mesh);else return console.log("Flory : Attempted to add an object to Flory.Renderer.renderables that did not inherit from Flory.Renderable."),this},updateRenderablePosition:function(a){var b=a.id;a=a.position;if(a instanceof Flory.Vector){var c=a.dimension();3==c?(this.renderables[b].mesh.position.x=a.components[0],this.renderables[b].mesh.position.y=
a.components[1],this.renderables[b].mesh.position.z=a.components[2]):2==c?(this.renderables[b].mesh.position.x=a.components[0],this.renderables[b].mesh.position.y=a.components[1]):1==c?this.renderables[b].mesh.position.x=a.components[0]:3<c&&(this.renderables[b].mesh.position.x=a.components[0],this.renderables[b].mesh.position.y=a.components[1],this.renderables[b].mesh.position.z=a.components[2])}else a instanceof Flory.Vector2?(this.renderables[b].mesh.position.x=a.x,this.renderables[b].mesh.position.y=
a.y):a instanceof Flory.Vector3&&(this.renderables[b].mesh.position.x=a.x,this.renderables[b].mesh.position.y=a.y,this.renderables[b].mesh.position.z=a.z);return this},removeRenderable:function(a){for(var b in this.renderables)if(this.renderables[b].id==a){this.scene.remove(this.renderables[b]);this.renderables=this.renderables.splice(b,1);break}return this},removeAllRenderables:function(){for(var a in this.renderables)this.scene.remove(this.renderables[a]);this.renderables=[];return this},setDimension:function(a,
b){this.renderer.setSize(a,b);return this},render:function(){this.renderer.render(this.scene,this.camera);return this}};Flory.Renderer.ShaderTypes={};Flory.PointCloudRenderer=function(){Flory.Renderer.call(this);this.data.particles=new THREE.Geometry;this.data.pMaterial=new THREE.PointCloudMaterial({color:16711680,size:2});this.data.particle_system=new THREE.PointCloud(this.data.particles,this.data.pMaterial)};Flory.PointCloudRenderer.prototype=Object.create(Flory.Renderer.prototype);
Flory.PointCloudRenderer.prototype.updatePointPositions=function(a){if(void 0!=a){for(var b=0,c=a.length;b<c;b++)this.data.particles.vertices[b]=new THREE.Vector3(a[b].position.components[0],a[b].position.components[1],a[b].position.components[2]);this.data.particle_system.geometry.verticesNeedUpdate=!0}return this};
Flory.PointCloudRenderer.prototype.updatePointList=function(a){if(void 0==a)return this;this.data.particles=new THREE.Geometry;this.data.pMaterial=new THREE.PointCloudMaterial({color:16711680,size:2});for(var b=0,c=a.length;b<c;b++)a[b]instanceof Flory.Monomer&&this.data.particles.vertices.push(new THREE.Vector3(a[b].position.components[0],a[b].position.components[1],a[b].position.components[2]));this.scene.remove(this.data.particle_system);for(b in this.renderables)if(this.renderables[b].id==this.data.particle_system.id){this.renderables[b]=
void 0;delete this.renderables[b];break}this.data.particle_system=new THREE.PointCloud(this.data.particles,this.data.pMaterial);this.scene.add(this.data.particle_system);this.renderables[this.data.particle_system.id]=this.data.particle_system;return this};
Flory.Monomer2D=function(a,b,c,d){Flory.Entity.call(this);var e=void 0,f=void 0,g=void 0,h=void 0;void 0!=d&&(e=d.position,f=d.velocity,g=d.acceleration,h=d.force);this.radius=void 0!=a?a:Flory.Monomer2D.defaultRadius;this.charge=void 0!=b?b:0;this.mass=void 0!=c?c:0;void 0==e?this.position=new Flory.Vector2(0,0):e instanceof Array?this.position=new Flory.Vector2(e[0],e[1]):void 0!=e.x&&void 0!=e.y&&(this.position=new Flory.Vector2(e.x,e.y));void 0==f?this.velocity=new Flory.Vector2(0,0):f instanceof
Array?this.velocity=new Flory.Vector2(f[0],f[1]):void 0!=f.x&&void 0!=f.y&&(this.velocity=new Flory.Vector2(f.x,f.y));void 0==g?this.acceleration=new Flory.Vector2(0,0):g instanceof Array?this.acceleration=new Flory.Vector2(g[0],g[1]):void 0!=g.x&&void 0!=g.y&&(this.acceleration=new Flory.Vector2(g.x,g.y));void 0==h?this.force=new Flory.Vector2(0,0):h instanceof Array?this.force=new Flory.Vector2(h[0],h[1]):void 0!=h.x&&void 0!=h.y&&(this.force=new Flory.Vector2(h.x,h.y))};
Flory.Monomer2D.prototype=Object.create(Flory.Entity.prototype);Flory.Monomer2D.prototype.incrementX=function(a){this.position.x+=a;return this};Flory.Monomer2D.prototype.incrementY=function(a){this.position.y+=a;return this};Flory.Monomer2D.prototype.distanceTo=function(a){return this.position.distanceTo(a.position)};Flory.Monomer2D.prototype.distanceToSq=function(a){return this.position.distanceToSq(a.position)};Flory.Monomer2D.prototype.clone=function(){return new Flory.Monomer2D(this.radius,this.position)};
Flory.Monomer2D.prototype.prepareRenderable=function(a){this.geometry=new THREE.CircleGeometry(this.radius,void 0!=a&&"number"==typeof a.segments?a.segments:20,0,6.28318530718);var b=void 0!=a&&"number"==typeof a.color?a.color:16711680;this.material=void 0==a?new THREE.MeshBasicMaterial({color:b}):void 0!=a.material&&a.materials instanceof THREE.Material?a.material:new THREE.MeshBasicMaterial({color:b});this.mesh=new THREE.Mesh(this.geometry,this.material);return this};
Flory.Monomer2D.defaultRadius=1;
Flory.Monomer3D=function(a,b,c,d){Flory.Entity.call(this);var e=void 0,f=void 0,g=void 0,h=void 0;void 0!=d&&(e=d.position,f=d.velocity,g=d.acceleration,h=d.force);this.radius=void 0!==a?a:Flory.Monomer3D.defaultRadius;this.charge=void 0!==b?b:0;this.mass=void 0!=c?c:0;void 0==e?this.position=new Flory.Vector3(0,0):e instanceof Array?this.position=new Flory.Vector3(e[0],e[1]):void 0!=e.x&&void 0!=e.y&&void 0!=e.z&&(this.position=new Flory.Vector3(e.x,e.y));void 0==f?this.velocity=new Flory.Vector3(0,
0):f instanceof Array?this.velocity=new Flory.Vector3(f[0],f[1]):void 0!=f.x&&void 0!=f.y&&void 0!=f.z&&(this.velocity=new Flory.Vector3(f.x,f.y));void 0==g?this.acceleration=new Flory.Vector3(0,0):g instanceof Array?this.acceleration=new Flory.Vector3(g[0],g[1]):void 0!=g.x&&void 0!=g.y&&void 0!=g.z&&(this.acceleration=new Flory.Vector3(g.x,g.y));void 0==h?this.force=new Flory.Vector3(0,0):h instanceof Array?this.force=new Flory.Vector3(h[0],h[1]):void 0!=h.x&&void 0!=h.y&&void 0!=h.z&&(this.force=
new Flory.Vector3(h.x,h.y))};Flory.Monomer3D.prototype=Object.create(Flory.Entity.prototype);Flory.Monomer3D.prototype.incrementX=function(a){this.position.x+=a;return this};Flory.Monomer3D.prototype.incrementY=function(a){this.position.y+=a;return this};Flory.Monomer3D.prototype.incrementZ=function(a){this.position.z+=a;return this};Flory.Monomer3D.prototype.distanceTo=function(a){return this.position.distanceTo(a.position)};Flory.Monomer3D.prototype.distanceToSq=function(a){return this.position.distanceToSq(a.position)};
Flory.Monomer3D.prototype.clone=function(){return new Flory.Monomer3D(this.radius,this.position)};
Flory.Monomer3D.prototype.prepareRenderable=function(a){var b=void 0!=a&&"number"==typeof a.segments?a.segments:20;this.geometry=new THREE.SphereGeometry(this.radius,b,b);b=void 0!=a&&"number"==typeof a.color?a.color:16711680;this.material=void 0==a?new THREE.MeshBasicMaterial({color:b}):void 0!=a.material&&a.materials instanceof THREE.Material?a.material:new THREE.MeshBasicMaterial({color:b});this.mesh=new THREE.Mesh(this.geometry,this.material);return this};Flory.Monomer3D.defaultRadius=1;
Flory.Monomer=function(a,b,c,d){if(void 0==d)console.log("Flory: Flory.Monomer needs at least the kinematics.position to know what the dimension of the monomer is.");else if(void 0==d.position)console.log("Flory: Flory.Monomer needs at least the kinematics.position to know what the dimension of the monomer is.");else{Flory.Entity.call(this);var e=void 0,f=void 0,g=void 0,h=void 0;void 0!=d&&(e=d.position,f=d.velocity,g=d.acceleration,h=d.force);this.radius=void 0!=a?a:Flory.Monomer.defaultRadius;
this.charge=void 0!=b?b:0;this.mass=void 0!=c?c:0;this.position=void 0==e.components&&e instanceof Array?new Flory.Vector(e):e.clone();this.velocity=void 0==f?new Flory.Vector([].slice.apply(new Uint8Array(this.position.dimension()))):void 0==f.components&&f instanceof Array?new Flory.Vector(f):f.clone();this.acceleration=void 0==g?new Flory.Vector([].slice.apply(new Uint8Array(this.position.dimension()))):void 0==g.components&&g instanceof Array?new Flory.Vector(g):g.clone();this.force=void 0==h?
new Flory.Vector([].slice.apply(new Uint8Array(this.position.dimension()))):void 0==h.components&&h instanceof Array?new Flory.Vector(h):h.clone()}};Flory.Monomer.prototype=Object.create(Flory.Entity.prototype);Flory.Monomer.prototype.incrementDimension=function(a,b){this.position.components[a]+=b;return this};Flory.Monomer.prototype.distanceTo=function(a){return this.position.distanceTo(a.position)};Flory.Monomer.prototype.distanceToSq=function(a){return this.position.distanceToSq(a.position)};
Flory.Monomer.prototype.clone=function(){return new Flory.Monomer3D(this.radius,this.position)};
Flory.Monomer.prototype.prepareRenderable=function(a){var b=!1;void 0!=a&&(b=void 0==a.simple_render?!1:a.simple_render);b||(b=void 0!=a&&"number"==typeof a.segments?a.segments:20,3<=this.position.dimension()?this.geometry=new THREE.SphereGeometry(this.radius,b,b):this.geometry=new THREE.CircleGeometry(this.radius,b,0,6.28318530718),b=void 0!=a&&"number"==typeof a.color?a.color:16711680,this.material=void 0==a?new THREE.MeshBasicMaterial({color:b}):void 0!=a.material&&a.materials instanceof THREE.Material?
a.material:new THREE.MeshBasicMaterial({color:b}),this.mesh=new THREE.Mesh(this.geometry,this.material));return this};Flory.Monomer.defaultRadius=1;Flory.Newtonian=function(){Flory.Environment.call(this)};Flory.Newtonian.prototype=Object.create(Flory.Environment.prototype);Flory.Newtonian.constructor=Flory.Newtonian;
Flory.Newtonian.prototype.update=function(a){a=0;for(var b=this.entities.length;a<b;a++){var c=this.entities[a],d=new Flory.Vector;if(c instanceof Flory.Monomer){for(var e=0,b=this.entities.length;e<b;e++){var f=this.entities[e];f instanceof Flory.Field&&d.add(f.getForce(c.position))}c.force=d.clone()}}a=0;for(b=this.entities.length;a<b;a++)c=this.entities[a],c instanceof Flory.Monomer&&(c.acceleration=c.force.mult(1/c.mass),c.velocity.add(c.acceleration.mult(Flory.timestep)),c.position.add(c.velocity.mult(.5*
Flory.timestep)));return this};Flory.RandomWalk=function(a,b){Flory.Environment.call(this);this.randomGen=new Flory.RandomGen(a);this.step_size=void 0!=b?b:1};Flory.RandomWalk.prototype=Object.create(Flory.Environment.prototype);Flory.RandomWalk.prototype.constructor=Flory.RandomWalk;
Flory.RandomWalk.prototype.update=function(a){a=0;for(var b=this.entities.length;a<b;a++){var c=this.entities[a];if(c instanceof Flory.Monomer){for(var d=1/c.position.dimension(),e=0,f=this.randomGen.random(),f=f-d;0<f;)f-=d,e++;f=this.randomGen.random();.5>f?c.position.components[e]++:c.position.components[e]--;this.visualization&&this.renderer.updateRenderablePosition(this.entities[a])}}this.visualization&&this.renderer.render();return this};
Flory.LennardJones=function(a,b){Flory.Environment.call(this);this.epsilon=void 0!=a?a:Flory.LennardJones.default_epsilon;this.sigma=void 0!=b?b:Flory.LennardJones.default_sigma;this.data.rendererType=Flory.Environment.RendererType.PointCloud};Flory.LennardJones.prototype=Object.create(Flory.Environment.prototype);Flory.LennardJones.prototype.constructor=Flory.LennardJones;
Flory.LennardJones.prototype.addedEntity=function(a){a instanceof Flory.Monomer&&(a.data.last_position=a.position.clone(),this.visualization&&this.renderer.updatePointList(this.entities))};Flory.LennardJones.prototype.setUpVisualization=function(){this.renderer.updatePointList(this.entities)};
Flory.LennardJones.prototype.update=function(a){a=0;for(var b=this.entities.length;a<b;a++){var c=this.entities[a],d=new Flory.Vector(this.entities[a].position.dimension());if(c instanceof Flory.Monomer){for(var e=0,b=this.entities.length;e<b;e++){var f=this.entities[e];if(f instanceof Flory.Monomer&&f.id!=c.id){var f=f.position.clone().sub(c.position),g=f.length();if(!(g>Flory.LennardJones.far_cutoff_distance)){var h=this.sigma/g,f=f.scale(-24*this.epsilon/(g*g)*(2*Math.pow(h,12)-Math.pow(h,6)));
d.add(f)}}}c.force=d.clone()}}a=0;for(b=this.entities.length;a<b;a++)c=this.entities[a],c instanceof Flory.Monomer&&(c.acceleration=c.force.mult(1/c.mass),c.velocity.add(c.acceleration.mult(Flory.timestep)),c.position.add(c.velocity.mult(.5*Flory.timestep)));this.visualization&&(this.renderer.updatePointPositions(this.entities),this.renderer.render());return this};Flory.LennardJones.far_cutoff_distance=100;Flory.LennardJones.default_sigma=1;Flory.LennardJones.default_epsilon=1;Flory.Newtonian2D=function(){Flory.Environment.call(this)};
Flory.Newtonian2D.prototype=Object.create(Flory.Environment.prototype);Flory.Newtonian2D.constructor=Flory.Newtonian2D;
Flory.Newtonian2D.prototype.update=function(a){a=0;for(var b=this.entities.length;a<b;a++){var c=this.entities[a],d=new Flory.Vector2;if(c instanceof Flory.Monomer2D){for(var e=0,b=this.entities.length;e<b;e++){var f=this.entities[e];f instanceof Flory.Field2D&&d.add(f.getForce(c.position))}c.force=d.clone()}}a=0;for(b=this.entities.length;a<b;a++)c=this.entities[a],c instanceof Flory.Monomer2D&&(c.acceleration=c.force.mult(1/c.mass),c.velocity.add(c.acceleration.mult(Flory.timestep)),c.position.add(c.velocity.mult(.5*
Flory.timestep)),this.visualization&&this.renderer.updateRenderablePosition(this.entities[a]));this.visualization&&this.renderer.render();return this};function getRandomVector(a,b){var c=random.random()*a*(.5-random.random()),d=random.random()*b*(.5-random.random());return new Flory.Vector([c,d])}
var number_of_monomers=15,spread=.5,radius=.5,random=new Flory.RandomGen,max_x=50,max_y=50,frames_per_second=60,ticks_per_frame=1,monomers=[],sigma=Math.pow(.5,1/6),epsilon=1,lennard=new Flory.LennardJones(epsilon,sigma);function getNonOverlappingMonomer(a){for(var b=getRandomVector(100,100),c=0;c<a.length;c++)a[c].position.distanceToSq(b)<=radius*radius+4&&getNonOverlappingMonomer(a);return new Flory.Monomer(radius,0,1,{position:b})}
for(var i=0;i<number_of_monomers;i++)for(var j=0;j<number_of_monomers;j++)monomers.push(new Flory.Monomer(radius,0,1,{position:[i,j]}));for(i=0;i<number_of_monomers*number_of_monomers;i++)lennard.add(monomers[i]);lennard.enableVisualization();var k=0,fps=0;setInterval(function(){lennard.update();k++},0);setInterval(function(){fps=k;k=0},1E3);
